<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="3355"><g><title>[[stack]] (1 samples, 0.03%)</title><rect x="0.0000%" y="597" width="0.0298%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0298%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.06%)</title><rect x="0.0298%" y="581" width="0.0596%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2798%" y="591.50"></text></g><g><title>__sincos (2 samples, 0.06%)</title><rect x="0.0894%" y="581" width="0.0596%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.3394%" y="591.50"></text></g><g><title>_int_free (2 samples, 0.06%)</title><rect x="0.1490%" y="581" width="0.0596%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.3990%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="0.2086%" y="581" width="0.0298%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="1"/><text x="0.4586%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.06%)</title><rect x="0.2385%" y="581" width="0.0596%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="2"/><text x="0.4885%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="0.2981%" y="581" width="0.0298%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="1"/><text x="0.5481%" y="591.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (1 samples, 0.03%)</title><rect x="0.3279%" y="533" width="0.0298%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="1"/><text x="0.5779%" y="543.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (1 samples, 0.03%)</title><rect x="0.3279%" y="517" width="0.0298%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="1"/><text x="0.5779%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="0.3279%" y="501" width="0.0298%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="1"/><text x="0.5779%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="0.3279%" y="485" width="0.0298%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="0.5779%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="0.3279%" y="469" width="0.0298%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="0.5779%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="0.3279%" y="453" width="0.0298%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="1"/><text x="0.5779%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="0.3279%" y="437" width="0.0298%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="1"/><text x="0.5779%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="0.3279%" y="421" width="0.0298%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="1"/><text x="0.5779%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="0.3279%" y="405" width="0.0298%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="1"/><text x="0.5779%" y="415.50"></text></g><g><title>fastiron::cycle_tracking (3 samples, 0.09%)</title><rect x="0.3279%" y="581" width="0.0894%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="3"/><text x="0.5779%" y="591.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (3 samples, 0.09%)</title><rect x="0.3279%" y="565" width="0.0894%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="3"/><text x="0.5779%" y="575.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (3 samples, 0.09%)</title><rect x="0.3279%" y="549" width="0.0894%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="3"/><text x="0.5779%" y="559.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (2 samples, 0.06%)</title><rect x="0.3577%" y="533" width="0.0596%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="2"/><text x="0.6077%" y="543.50"></text></g><g><title>[unknown] (14 samples, 0.42%)</title><rect x="0.0298%" y="597" width="0.4173%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="14"/><text x="0.2798%" y="607.50"></text></g><g><title>fastiron::main (1 samples, 0.03%)</title><rect x="0.4173%" y="581" width="0.0298%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="0.6673%" y="591.50"></text></g><g><title>fastiron::init_mc::init_mc (1 samples, 0.03%)</title><rect x="0.4173%" y="565" width="0.0298%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="0.6673%" y="575.50"></text></g><g><title>fastiron::init_mc::init_mesh (1 samples, 0.03%)</title><rect x="0.4173%" y="549" width="0.0298%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="0.6673%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.03%)</title><rect x="0.4173%" y="533" width="0.0298%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.6673%" y="543.50"></text></g><g><title>fastiron::init_mc::init_mesh::{{closure}} (1 samples, 0.03%)</title><rect x="0.4173%" y="517" width="0.0298%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="0.6673%" y="527.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.4173%" y="501" width="0.0298%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="0.6673%" y="511.50"></text></g><g><title>fastiron::geometry::mc_domain::MCMeshDomain&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.4173%" y="485" width="0.0298%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="0.6673%" y="495.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells (1 samples, 0.03%)</title><rect x="0.4173%" y="469" width="0.0298%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="0.6673%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.4173%" y="453" width="0.0298%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="1"/><text x="0.6673%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.4173%" y="437" width="0.0298%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="0.6673%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.4173%" y="421" width="0.0298%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="0.6673%" y="431.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells::{{closure}} (1 samples, 0.03%)</title><rect x="0.4173%" y="405" width="0.0298%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="0.6673%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.4173%" y="389" width="0.0298%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="0.6673%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.4173%" y="373" width="0.0298%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="0.6673%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.4173%" y="357" width="0.0298%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="0.6673%" y="367.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.4173%" y="341" width="0.0298%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="0.6673%" y="351.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::print_summary (1 samples, 0.03%)</title><rect x="0.5663%" y="453" width="0.0298%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="1"/><text x="0.8163%" y="463.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum (1 samples, 0.03%)</title><rect x="0.5663%" y="437" width="0.0298%" height="15" fill="rgb(232,182,51)" fg:x="19" fg:w="1"/><text x="0.8163%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.5663%" y="421" width="0.0298%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="1"/><text x="0.8163%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.5663%" y="405" width="0.0298%" height="15" fill="rgb(208,69,12)" fg:x="19" fg:w="1"/><text x="0.8163%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="389" width="0.0298%" height="15" fill="rgb(235,93,37)" fg:x="19" fg:w="1"/><text x="0.8163%" y="399.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="373" width="0.0298%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="1"/><text x="0.8163%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.5663%" y="357" width="0.0298%" height="15" fill="rgb(222,207,29)" fg:x="19" fg:w="1"/><text x="0.8163%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.5663%" y="341" width="0.0298%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="1"/><text x="0.8163%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="325" width="0.0298%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="1"/><text x="0.8163%" y="335.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="309" width="0.0298%" height="15" fill="rgb(250,191,14)" fg:x="19" fg:w="1"/><text x="0.8163%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.5663%" y="293" width="0.0298%" height="15" fill="rgb(239,60,40)" fg:x="19" fg:w="1"/><text x="0.8163%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.5663%" y="277" width="0.0298%" height="15" fill="rgb(206,27,48)" fg:x="19" fg:w="1"/><text x="0.8163%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="261" width="0.0298%" height="15" fill="rgb(225,35,8)" fg:x="19" fg:w="1"/><text x="0.8163%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="245" width="0.0298%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="1"/><text x="0.8163%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.5663%" y="229" width="0.0298%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="1"/><text x="0.8163%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.5663%" y="213" width="0.0298%" height="15" fill="rgb(231,138,38)" fg:x="19" fg:w="1"/><text x="0.8163%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="197" width="0.0298%" height="15" fill="rgb(231,145,46)" fg:x="19" fg:w="1"/><text x="0.8163%" y="207.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5663%" y="181" width="0.0298%" height="15" fill="rgb(251,118,11)" fg:x="19" fg:w="1"/><text x="0.8163%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.03%)</title><rect x="0.5663%" y="165" width="0.0298%" height="15" fill="rgb(217,147,25)" fg:x="19" fg:w="1"/><text x="0.8163%" y="175.50"></text></g><g><title>fastiron::cycle_finalize (3 samples, 0.09%)</title><rect x="0.5663%" y="485" width="0.0894%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="3"/><text x="0.8163%" y="495.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::cycle_finalize (3 samples, 0.09%)</title><rect x="0.5663%" y="469" width="0.0894%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="3"/><text x="0.8163%" y="479.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::update_spectrum (2 samples, 0.06%)</title><rect x="0.5961%" y="453" width="0.0596%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="2"/><text x="0.8461%" y="463.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::update_spectrum::{{closure}} (2 samples, 0.06%)</title><rect x="0.5961%" y="437" width="0.0596%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="2"/><text x="0.8461%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (2 samples, 0.06%)</title><rect x="0.5961%" y="421" width="0.0596%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="2"/><text x="0.8461%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.06%)</title><rect x="0.5961%" y="405" width="0.0596%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="2"/><text x="0.8461%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="0.5961%" y="389" width="0.0596%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="2"/><text x="0.8461%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="0.5961%" y="373" width="0.0596%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="2"/><text x="0.8461%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="0.5961%" y="357" width="0.0596%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="2"/><text x="0.8461%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="0.5961%" y="341" width="0.0596%" height="15" fill="rgb(247,138,52)" fg:x="20" fg:w="2"/><text x="0.8461%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processed (1 samples, 0.03%)</title><rect x="0.6557%" y="469" width="0.0298%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="0.9057%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="0.6557%" y="453" width="0.0298%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="0.9057%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="0.6557%" y="437" width="0.0298%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="0.9057%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="0.6557%" y="421" width="0.0298%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="0.9057%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="0.6557%" y="405" width="0.0298%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="0.9057%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="0.6557%" y="389" width="0.0298%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="0.9057%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.6557%" y="373" width="0.0298%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="0.9057%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="0.6557%" y="357" width="0.0298%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="0.9057%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="0.6557%" y="341" width="0.0298%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="0.9057%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="0.6557%" y="325" width="0.0298%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="0.9057%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="0.6557%" y="309" width="0.0298%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="1"/><text x="0.9057%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processing (2 samples, 0.06%)</title><rect x="0.6855%" y="453" width="0.0596%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="2"/><text x="0.9355%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (2 samples, 0.06%)</title><rect x="0.6855%" y="437" width="0.0596%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="2"/><text x="0.9355%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.06%)</title><rect x="0.6855%" y="421" width="0.0596%" height="15" fill="rgb(211,96,35)" fg:x="23" fg:w="2"/><text x="0.9355%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="0.6855%" y="405" width="0.0596%" height="15" fill="rgb(253,215,40)" fg:x="23" fg:w="2"/><text x="0.9355%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="0.6855%" y="389" width="0.0596%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="2"/><text x="0.9355%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="0.6855%" y="373" width="0.0596%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="2"/><text x="0.9355%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="0.6855%" y="357" width="0.0596%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="2"/><text x="0.9355%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.06%)</title><rect x="0.6855%" y="341" width="0.0596%" height="15" fill="rgb(237,122,38)" fg:x="23" fg:w="2"/><text x="0.9355%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (2 samples, 0.06%)</title><rect x="0.6855%" y="325" width="0.0596%" height="15" fill="rgb(244,218,35)" fg:x="23" fg:w="2"/><text x="0.9355%" y="335.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (2 samples, 0.06%)</title><rect x="0.6855%" y="309" width="0.0596%" height="15" fill="rgb(240,68,47)" fg:x="23" fg:w="2"/><text x="0.9355%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.06%)</title><rect x="0.6855%" y="293" width="0.0596%" height="15" fill="rgb(210,16,53)" fg:x="23" fg:w="2"/><text x="0.9355%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size (1 samples, 0.03%)</title><rect x="0.7452%" y="453" width="0.0298%" height="15" fill="rgb(235,124,12)" fg:x="25" fg:w="1"/><text x="0.9952%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.03%)</title><rect x="0.7452%" y="437" width="0.0298%" height="15" fill="rgb(224,169,11)" fg:x="25" fg:w="1"/><text x="0.9952%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size::{{closure}} (1 samples, 0.03%)</title><rect x="0.7452%" y="421" width="0.0298%" height="15" fill="rgb(250,166,2)" fg:x="25" fg:w="1"/><text x="0.9952%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="0.7452%" y="405" width="0.0298%" height="15" fill="rgb(242,216,29)" fg:x="25" fg:w="1"/><text x="0.9952%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="0.7452%" y="389" width="0.0298%" height="15" fill="rgb(230,116,27)" fg:x="25" fg:w="1"/><text x="0.9952%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="0.7452%" y="373" width="0.0298%" height="15" fill="rgb(228,99,48)" fg:x="25" fg:w="1"/><text x="0.9952%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="0.7452%" y="357" width="0.0298%" height="15" fill="rgb(253,11,6)" fg:x="25" fg:w="1"/><text x="0.9952%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="0.7452%" y="341" width="0.0298%" height="15" fill="rgb(247,143,39)" fg:x="25" fg:w="1"/><text x="0.9952%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.7452%" y="325" width="0.0298%" height="15" fill="rgb(236,97,10)" fg:x="25" fg:w="1"/><text x="0.9952%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="0.7452%" y="309" width="0.0298%" height="15" fill="rgb(233,208,19)" fg:x="25" fg:w="1"/><text x="0.9952%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="0.7452%" y="293" width="0.0298%" height="15" fill="rgb(216,164,2)" fg:x="25" fg:w="1"/><text x="0.9952%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="0.7452%" y="277" width="0.0298%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="1"/><text x="0.9952%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="0.7452%" y="261" width="0.0298%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="1"/><text x="0.9952%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="0.7750%" y="325" width="0.0298%" height="15" fill="rgb(242,107,0)" fg:x="26" fg:w="1"/><text x="1.0250%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="0.7750%" y="309" width="0.0298%" height="15" fill="rgb(251,28,31)" fg:x="26" fg:w="1"/><text x="1.0250%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="0.7750%" y="293" width="0.0298%" height="15" fill="rgb(233,223,10)" fg:x="26" fg:w="1"/><text x="1.0250%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 1.73%)</title><rect x="2.8018%" y="261" width="1.7288%" height="15" fill="rgb(215,21,27)" fg:x="94" fg:w="58"/><text x="3.0518%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (673 samples, 20.06%)</title><rect x="0.8942%" y="277" width="20.0596%" height="15" fill="rgb(232,23,21)" fg:x="30" fg:w="673"/><text x="1.1442%" y="287.50">&lt;core::slice::iter::Iter&lt;T&gt; as ..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (551 samples, 16.42%)</title><rect x="4.5306%" y="261" width="16.4232%" height="15" fill="rgb(244,5,23)" fg:x="152" fg:w="551"/><text x="4.7806%" y="271.50">fastiron::particles::part..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (551 samples, 16.42%)</title><rect x="4.5306%" y="245" width="16.4232%" height="15" fill="rgb(226,81,46)" fg:x="152" fg:w="551"/><text x="4.7806%" y="255.50">core::option::Option&lt;T&gt;::..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (551 samples, 16.42%)</title><rect x="4.5306%" y="229" width="16.4232%" height="15" fill="rgb(247,70,30)" fg:x="152" fg:w="551"/><text x="4.7806%" y="239.50">core::option::Option&lt;T&gt;::..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 3.28%)</title><rect x="20.9538%" y="181" width="3.2787%" height="15" fill="rgb(212,68,19)" fg:x="703" fg:w="110"/><text x="21.2038%" y="191.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1,087 samples, 32.40%)</title><rect x="24.2325%" y="165" width="32.3994%" height="15" fill="rgb(240,187,13)" fg:x="813" fg:w="1087"/><text x="24.4825%" y="175.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1,087 samples, 32.40%)</title><rect x="24.2325%" y="149" width="32.3994%" height="15" fill="rgb(223,113,26)" fg:x="813" fg:w="1087"/><text x="24.4825%" y="159.50">fastiron::particles::particle_vault::ParticleVault&lt;T..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,087 samples, 32.40%)</title><rect x="24.2325%" y="133" width="32.3994%" height="15" fill="rgb(206,192,2)" fg:x="813" fg:w="1087"/><text x="24.4825%" y="143.50">core::option::Option&lt;T&gt;::is_some</text></g><g><title>fastiron::simulation::population_control::population_control (1,947 samples, 58.03%)</title><rect x="0.6855%" y="469" width="58.0328%" height="15" fill="rgb(241,108,4)" fg:x="23" fg:w="1947"/><text x="0.9355%" y="479.50">fastiron::simulation::population_control::population_control</text></g><g><title>fastiron::simulation::population_control::population_control_guts (1,944 samples, 57.94%)</title><rect x="0.7750%" y="453" width="57.9434%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="463.50">fastiron::simulation::population_control::population_control_guts</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,944 samples, 57.94%)</title><rect x="0.7750%" y="437" width="57.9434%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="447.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,944 samples, 57.94%)</title><rect x="0.7750%" y="421" width="57.9434%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="431.50">&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (1,944 samples, 57.94%)</title><rect x="0.7750%" y="405" width="57.9434%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="415.50">core::iter::traits::double_ended::DoubleEndedIterator::rfold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,944 samples, 57.94%)</title><rect x="0.7750%" y="389" width="57.9434%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="399.50">core::iter::traits::iterator::Iterator::for_each::call::{{closure}}</text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}} (1,944 samples, 57.94%)</title><rect x="0.7750%" y="373" width="57.9434%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="383.50">fastiron::simulation::population_control::population_control_guts::{{closure}}</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,944 samples, 57.94%)</title><rect x="0.7750%" y="357" width="57.9434%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="367.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,944 samples, 57.94%)</title><rect x="0.7750%" y="341" width="57.9434%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="1944"/><text x="1.0250%" y="351.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,943 samples, 57.91%)</title><rect x="0.8048%" y="325" width="57.9136%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="1943"/><text x="1.0548%" y="335.50">core::iter::traits::iterator::Iterator::for_each::call::{{closure}}</text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}}::{{closure}} (1,943 samples, 57.91%)</title><rect x="0.8048%" y="309" width="57.9136%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="1943"/><text x="1.0548%" y="319.50">fastiron::simulation::population_control::population_control_guts::{{closure}}::{{closure}}</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (1,943 samples, 57.91%)</title><rect x="0.8048%" y="293" width="57.9136%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="1943"/><text x="1.0548%" y="303.50">fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1,267 samples, 37.76%)</title><rect x="20.9538%" y="277" width="37.7645%" height="15" fill="rgb(221,13,13)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="287.50">fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,267 samples, 37.76%)</title><rect x="20.9538%" y="261" width="37.7645%" height="15" fill="rgb(238,131,9)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="271.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,267 samples, 37.76%)</title><rect x="20.9538%" y="245" width="37.7645%" height="15" fill="rgb(211,50,8)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="255.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,267 samples, 37.76%)</title><rect x="20.9538%" y="229" width="37.7645%" height="15" fill="rgb(245,182,24)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="239.50">&lt;usize as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,267 samples, 37.76%)</title><rect x="20.9538%" y="213" width="37.7645%" height="15" fill="rgb(242,14,37)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="223.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,267 samples, 37.76%)</title><rect x="20.9538%" y="197" width="37.7645%" height="15" fill="rgb(246,228,12)" fg:x="703" fg:w="1267"/><text x="21.2038%" y="207.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,157 samples, 34.49%)</title><rect x="24.2325%" y="181" width="34.4858%" height="15" fill="rgb(213,55,15)" fg:x="813" fg:w="1157"/><text x="24.4825%" y="191.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (70 samples, 2.09%)</title><rect x="56.6319%" y="165" width="2.0864%" height="15" fill="rgb(209,9,3)" fg:x="1900" fg:w="70"/><text x="56.8819%" y="175.50">&lt;..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.03%)</title><rect x="58.7183%" y="405" width="0.0298%" height="15" fill="rgb(230,59,30)" fg:x="1970" fg:w="1"/><text x="58.9683%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.03%)</title><rect x="58.7183%" y="389" width="0.0298%" height="15" fill="rgb(209,121,21)" fg:x="1970" fg:w="1"/><text x="58.9683%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (1 samples, 0.03%)</title><rect x="58.7183%" y="373" width="0.0298%" height="15" fill="rgb(220,109,13)" fg:x="1970" fg:w="1"/><text x="58.9683%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (1 samples, 0.03%)</title><rect x="58.7183%" y="357" width="0.0298%" height="15" fill="rgb(232,18,1)" fg:x="1970" fg:w="1"/><text x="58.9683%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="58.7183%" y="453" width="0.0894%" height="15" fill="rgb(215,41,42)" fg:x="1970" fg:w="3"/><text x="58.9683%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="58.7183%" y="437" width="0.0894%" height="15" fill="rgb(224,123,36)" fg:x="1970" fg:w="3"/><text x="58.9683%" y="447.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (3 samples, 0.09%)</title><rect x="58.7183%" y="421" width="0.0894%" height="15" fill="rgb(240,125,3)" fg:x="1970" fg:w="3"/><text x="58.9683%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="58.7481%" y="405" width="0.0596%" height="15" fill="rgb(205,98,50)" fg:x="1971" fg:w="2"/><text x="58.9981%" y="415.50"></text></g><g><title>fastiron::simulation::population_control::roulette_low_weight_particles::{{closure}} (2 samples, 0.06%)</title><rect x="58.7481%" y="389" width="0.0596%" height="15" fill="rgb(205,185,37)" fg:x="1971" fg:w="2"/><text x="58.9981%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="58.7481%" y="373" width="0.0596%" height="15" fill="rgb(238,207,15)" fg:x="1971" fg:w="2"/><text x="58.9981%" y="383.50"></text></g><g><title>&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="58.7481%" y="357" width="0.0596%" height="15" fill="rgb(213,199,42)" fg:x="1971" fg:w="2"/><text x="58.9981%" y="367.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::collapse (1 samples, 0.03%)</title><rect x="58.8077%" y="437" width="0.0298%" height="15" fill="rgb(235,201,11)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="58.8077%" y="421" width="0.0298%" height="15" fill="rgb(207,46,11)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="58.8077%" y="405" width="0.0298%" height="15" fill="rgb(241,35,35)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="58.8077%" y="389" width="0.0298%" height="15" fill="rgb(243,32,47)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="399.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.03%)</title><rect x="58.8077%" y="373" width="0.0298%" height="15" fill="rgb(247,202,23)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="58.8077%" y="357" width="0.0298%" height="15" fill="rgb(219,102,11)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="58.8077%" y="341" width="0.0298%" height="15" fill="rgb(243,110,44)" fg:x="1973" fg:w="1"/><text x="59.0577%" y="351.50"></text></g><g><title>fastiron::simulation::population_control::roulette_low_weight_particles (5 samples, 0.15%)</title><rect x="58.7183%" y="469" width="0.1490%" height="15" fill="rgb(222,74,54)" fg:x="1970" fg:w="5"/><text x="58.9683%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processing (2 samples, 0.06%)</title><rect x="58.8077%" y="453" width="0.0596%" height="15" fill="rgb(216,99,12)" fg:x="1973" fg:w="2"/><text x="59.0577%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="58.8376%" y="437" width="0.0298%" height="15" fill="rgb(226,22,26)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="58.8376%" y="421" width="0.0298%" height="15" fill="rgb(217,163,10)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="58.8376%" y="405" width="0.0298%" height="15" fill="rgb(213,25,53)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="58.8376%" y="389" width="0.0298%" height="15" fill="rgb(252,105,26)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="58.8376%" y="373" width="0.0298%" height="15" fill="rgb(220,39,43)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="58.8376%" y="357" width="0.0298%" height="15" fill="rgb(229,68,48)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="58.8376%" y="341" width="0.0298%" height="15" fill="rgb(252,8,32)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="58.8376%" y="325" width="0.0298%" height="15" fill="rgb(223,20,43)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="335.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="58.8376%" y="309" width="0.0298%" height="15" fill="rgb(229,81,49)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="58.8376%" y="293" width="0.0298%" height="15" fill="rgb(236,28,36)" fg:x="1974" fg:w="1"/><text x="59.0876%" y="303.50"></text></g><g><title>fastiron::data::direction_cosine::DirectionCosine&lt;T&gt;::sample_isotropic (1 samples, 0.03%)</title><rect x="58.8674%" y="197" width="0.0298%" height="15" fill="rgb(249,185,26)" fg:x="1975" fg:w="1"/><text x="59.1174%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (1 samples, 0.03%)</title><rect x="58.8674%" y="181" width="0.0298%" height="15" fill="rgb(249,174,33)" fg:x="1975" fg:w="1"/><text x="59.1174%" y="191.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (1 samples, 0.03%)</title><rect x="58.8674%" y="165" width="0.0298%" height="15" fill="rgb(233,201,37)" fg:x="1975" fg:w="1"/><text x="59.1174%" y="175.50"></text></g><g><title>__sincos (1 samples, 0.03%)</title><rect x="58.8674%" y="149" width="0.0298%" height="15" fill="rgb(221,78,26)" fg:x="1975" fg:w="1"/><text x="59.1174%" y="159.50"></text></g><g><title>do_sin (1 samples, 0.03%)</title><rect x="58.8674%" y="133" width="0.0298%" height="15" fill="rgb(250,127,30)" fg:x="1975" fg:w="1"/><text x="59.1174%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.21%)</title><rect x="58.9270%" y="165" width="0.2086%" height="15" fill="rgb(230,49,44)" fg:x="1977" fg:w="7"/><text x="59.1770%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (74 samples, 2.21%)</title><rect x="58.8972%" y="181" width="2.2057%" height="15" fill="rgb(229,67,23)" fg:x="1976" fg:w="74"/><text x="59.1472%" y="191.50">&lt;..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (66 samples, 1.97%)</title><rect x="59.1356%" y="165" width="1.9672%" height="15" fill="rgb(249,83,47)" fg:x="1984" fg:w="66"/><text x="59.3856%" y="175.50">f..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (66 samples, 1.97%)</title><rect x="59.1356%" y="149" width="1.9672%" height="15" fill="rgb(215,43,3)" fg:x="1984" fg:w="66"/><text x="59.3856%" y="159.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (66 samples, 1.97%)</title><rect x="59.1356%" y="133" width="1.9672%" height="15" fill="rgb(238,154,13)" fg:x="1984" fg:w="66"/><text x="59.3856%" y="143.50">c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.48%)</title><rect x="61.1028%" y="85" width="0.4769%" height="15" fill="rgb(219,56,2)" fg:x="2050" fg:w="16"/><text x="61.3528%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (120 samples, 3.58%)</title><rect x="61.5797%" y="69" width="3.5768%" height="15" fill="rgb(233,0,4)" fg:x="2066" fg:w="120"/><text x="61.8297%" y="79.50">&lt;cor..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (120 samples, 3.58%)</title><rect x="61.5797%" y="53" width="3.5768%" height="15" fill="rgb(235,30,7)" fg:x="2066" fg:w="120"/><text x="61.8297%" y="63.50">fast..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (120 samples, 3.58%)</title><rect x="61.5797%" y="37" width="3.5768%" height="15" fill="rgb(250,79,13)" fg:x="2066" fg:w="120"/><text x="61.8297%" y="47.50">core..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (218 samples, 6.50%)</title><rect x="58.8972%" y="197" width="6.4978%" height="15" fill="rgb(211,146,34)" fg:x="1976" fg:w="218"/><text x="59.1472%" y="207.50">fastiron:..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (144 samples, 4.29%)</title><rect x="61.1028%" y="181" width="4.2921%" height="15" fill="rgb(228,22,38)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="191.50">fasti..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (144 samples, 4.29%)</title><rect x="61.1028%" y="165" width="4.2921%" height="15" fill="rgb(235,168,5)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="175.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (144 samples, 4.29%)</title><rect x="61.1028%" y="149" width="4.2921%" height="15" fill="rgb(221,155,16)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="159.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (144 samples, 4.29%)</title><rect x="61.1028%" y="133" width="4.2921%" height="15" fill="rgb(215,215,53)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="143.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 4.29%)</title><rect x="61.1028%" y="117" width="4.2921%" height="15" fill="rgb(223,4,10)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="127.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (144 samples, 4.29%)</title><rect x="61.1028%" y="101" width="4.2921%" height="15" fill="rgb(234,103,6)" fg:x="2050" fg:w="144"/><text x="61.3528%" y="111.50">core:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (128 samples, 3.82%)</title><rect x="61.5797%" y="85" width="3.8152%" height="15" fill="rgb(227,97,0)" fg:x="2066" fg:w="128"/><text x="61.8297%" y="95.50">core..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (8 samples, 0.24%)</title><rect x="65.1565%" y="69" width="0.2385%" height="15" fill="rgb(234,150,53)" fg:x="2186" fg:w="8"/><text x="65.4065%" y="79.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::DivAssign&lt;T&gt;&gt;::div_assign (1 samples, 0.03%)</title><rect x="65.3949%" y="165" width="0.0298%" height="15" fill="rgb(228,201,54)" fg:x="2194" fg:w="1"/><text x="65.6449%" y="175.50"></text></g><g><title>&lt;f64 as core::ops::arith::DivAssign&gt;::div_assign (1 samples, 0.03%)</title><rect x="65.3949%" y="149" width="0.0298%" height="15" fill="rgb(222,22,37)" fg:x="2194" fg:w="1"/><text x="65.6449%" y="159.50"></text></g><g><title>fastiron::simulation::mct::generate_coordinate_3dg (3 samples, 0.09%)</title><rect x="65.3949%" y="197" width="0.0894%" height="15" fill="rgb(237,53,32)" fg:x="2194" fg:w="3"/><text x="65.6449%" y="207.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg (3 samples, 0.09%)</title><rect x="65.3949%" y="181" width="0.0894%" height="15" fill="rgb(233,25,53)" fg:x="2194" fg:w="3"/><text x="65.6449%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="65.4247%" y="165" width="0.0596%" height="15" fill="rgb(210,40,34)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="65.4247%" y="149" width="0.0596%" height="15" fill="rgb(241,220,44)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="65.4247%" y="133" width="0.0596%" height="15" fill="rgb(235,28,35)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="143.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg::{{closure}} (2 samples, 0.06%)</title><rect x="65.4247%" y="117" width="0.0596%" height="15" fill="rgb(210,56,17)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="127.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.06%)</title><rect x="65.4247%" y="101" width="0.0596%" height="15" fill="rgb(224,130,29)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="111.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.06%)</title><rect x="65.4247%" y="85" width="0.0596%" height="15" fill="rgb(235,212,8)" fg:x="2195" fg:w="2"/><text x="65.6747%" y="95.50"></text></g><g><title>fastiron::cycle_init (2,176 samples, 64.86%)</title><rect x="0.6557%" y="485" width="64.8584%" height="15" fill="rgb(223,33,50)" fg:x="22" fg:w="2176"/><text x="0.9057%" y="495.50">fastiron::cycle_init</text></g><g><title>fastiron::simulation::population_control::source_now (223 samples, 6.65%)</title><rect x="58.8674%" y="469" width="6.6468%" height="15" fill="rgb(219,149,13)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="479.50">fastiron:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (223 samples, 6.65%)</title><rect x="58.8674%" y="453" width="6.6468%" height="15" fill="rgb(250,156,29)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="463.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (223 samples, 6.65%)</title><rect x="58.8674%" y="437" width="6.6468%" height="15" fill="rgb(216,193,19)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="447.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (223 samples, 6.65%)</title><rect x="58.8674%" y="421" width="6.6468%" height="15" fill="rgb(216,135,14)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="431.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="405" width="6.6468%" height="15" fill="rgb(241,47,5)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="415.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="389" width="6.6468%" height="15" fill="rgb(233,42,35)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="399.50">core::ite..</text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="373" width="6.6468%" height="15" fill="rgb(231,13,6)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="383.50">fastiron:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (223 samples, 6.65%)</title><rect x="58.8674%" y="357" width="6.6468%" height="15" fill="rgb(207,181,40)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="367.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (223 samples, 6.65%)</title><rect x="58.8674%" y="341" width="6.6468%" height="15" fill="rgb(254,173,49)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="351.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (223 samples, 6.65%)</title><rect x="58.8674%" y="325" width="6.6468%" height="15" fill="rgb(221,1,38)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="335.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="309" width="6.6468%" height="15" fill="rgb(206,124,46)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="319.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="293" width="6.6468%" height="15" fill="rgb(249,21,11)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="303.50">core::ite..</text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="277" width="6.6468%" height="15" fill="rgb(222,201,40)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="287.50">fastiron:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (223 samples, 6.65%)</title><rect x="58.8674%" y="261" width="6.6468%" height="15" fill="rgb(235,61,29)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="271.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (223 samples, 6.65%)</title><rect x="58.8674%" y="245" width="6.6468%" height="15" fill="rgb(219,207,3)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="255.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="229" width="6.6468%" height="15" fill="rgb(222,56,46)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="239.50">core::ite..</text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}}::{{closure}} (223 samples, 6.65%)</title><rect x="58.8674%" y="213" width="6.6468%" height="15" fill="rgb(239,76,54)" fg:x="1975" fg:w="223"/><text x="59.1174%" y="223.50">fastiron:..</text></g><g><title>fastiron::simulation::population_control::speed_from_energy (1 samples, 0.03%)</title><rect x="65.4844%" y="197" width="0.0298%" height="15" fill="rgb(231,124,27)" fg:x="2197" fg:w="1"/><text x="65.7344%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (1 samples, 0.03%)</title><rect x="65.4844%" y="181" width="0.0298%" height="15" fill="rgb(249,195,6)" fg:x="2197" fg:w="1"/><text x="65.7344%" y="191.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.03%)</title><rect x="65.4844%" y="165" width="0.0298%" height="15" fill="rgb(237,174,47)" fg:x="2197" fg:w="1"/><text x="65.7344%" y="175.50"></text></g><g><title>fastiron::particles::mc_particle_buffer::MCParticleBuffer&lt;T&gt;::test_done_new (1 samples, 0.03%)</title><rect x="65.5142%" y="469" width="0.0298%" height="15" fill="rgb(206,201,31)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size (1 samples, 0.03%)</title><rect x="65.5142%" y="453" width="0.0298%" height="15" fill="rgb(231,57,52)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.03%)</title><rect x="65.5142%" y="437" width="0.0298%" height="15" fill="rgb(248,177,22)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size::{{closure}} (1 samples, 0.03%)</title><rect x="65.5142%" y="421" width="0.0298%" height="15" fill="rgb(215,211,37)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="65.5142%" y="405" width="0.0298%" height="15" fill="rgb(241,128,51)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="65.5142%" y="389" width="0.0298%" height="15" fill="rgb(227,165,31)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="65.5142%" y="373" width="0.0298%" height="15" fill="rgb(228,167,24)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="65.5142%" y="357" width="0.0298%" height="15" fill="rgb(228,143,12)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="65.5142%" y="341" width="0.0298%" height="15" fill="rgb(249,149,8)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="65.5142%" y="325" width="0.0298%" height="15" fill="rgb(243,35,44)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="65.5142%" y="309" width="0.0298%" height="15" fill="rgb(246,89,9)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="65.5142%" y="293" width="0.0298%" height="15" fill="rgb(233,213,13)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="65.5142%" y="277" width="0.0298%" height="15" fill="rgb(233,141,41)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="65.5142%" y="261" width="0.0298%" height="15" fill="rgb(239,167,4)" fg:x="2198" fg:w="1"/><text x="65.7642%" y="271.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults (4 samples, 0.12%)</title><rect x="65.5440%" y="469" width="0.1192%" height="15" fill="rgb(209,217,16)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size (4 samples, 0.12%)</title><rect x="65.5440%" y="453" width="0.1192%" height="15" fill="rgb(219,88,35)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4 samples, 0.12%)</title><rect x="65.5440%" y="437" width="0.1192%" height="15" fill="rgb(220,193,23)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size::{{closure}} (4 samples, 0.12%)</title><rect x="65.5440%" y="421" width="0.1192%" height="15" fill="rgb(230,90,52)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (4 samples, 0.12%)</title><rect x="65.5440%" y="405" width="0.1192%" height="15" fill="rgb(252,106,19)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (4 samples, 0.12%)</title><rect x="65.5440%" y="389" width="0.1192%" height="15" fill="rgb(206,74,20)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.12%)</title><rect x="65.5440%" y="373" width="0.1192%" height="15" fill="rgb(230,138,44)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.12%)</title><rect x="65.5440%" y="357" width="0.1192%" height="15" fill="rgb(235,182,43)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="65.5440%" y="341" width="0.1192%" height="15" fill="rgb(242,16,51)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.12%)</title><rect x="65.5440%" y="325" width="0.1192%" height="15" fill="rgb(248,9,4)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.12%)</title><rect x="65.5440%" y="309" width="0.1192%" height="15" fill="rgb(210,31,22)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (4 samples, 0.12%)</title><rect x="65.5440%" y="293" width="0.1192%" height="15" fill="rgb(239,54,39)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (4 samples, 0.12%)</title><rect x="65.5440%" y="277" width="0.1192%" height="15" fill="rgb(230,99,41)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.12%)</title><rect x="65.5440%" y="261" width="0.1192%" height="15" fill="rgb(253,106,12)" fg:x="2199" fg:w="4"/><text x="65.7940%" y="271.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processed (1 samples, 0.03%)</title><rect x="65.6632%" y="469" width="0.0298%" height="15" fill="rgb(213,46,41)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="65.6632%" y="453" width="0.0298%" height="15" fill="rgb(215,133,35)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="65.6632%" y="437" width="0.0298%" height="15" fill="rgb(213,28,5)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="65.6632%" y="421" width="0.0298%" height="15" fill="rgb(215,77,49)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="65.6632%" y="405" width="0.0298%" height="15" fill="rgb(248,100,22)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="65.6632%" y="389" width="0.0298%" height="15" fill="rgb(208,67,9)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="65.6632%" y="373" width="0.0298%" height="15" fill="rgb(219,133,21)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="65.6632%" y="357" width="0.0298%" height="15" fill="rgb(246,46,29)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="65.6632%" y="341" width="0.0298%" height="15" fill="rgb(246,185,52)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="65.6632%" y="325" width="0.0298%" height="15" fill="rgb(252,136,11)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="65.6632%" y="309" width="0.0298%" height="15" fill="rgb(219,138,53)" fg:x="2203" fg:w="1"/><text x="65.9132%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processing (1 samples, 0.03%)</title><rect x="65.6930%" y="469" width="0.0298%" height="15" fill="rgb(211,51,23)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1 samples, 0.03%)</title><rect x="65.6930%" y="453" width="0.0298%" height="15" fill="rgb(247,221,28)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="65.6930%" y="437" width="0.0298%" height="15" fill="rgb(251,222,45)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="65.6930%" y="421" width="0.0298%" height="15" fill="rgb(217,162,53)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="65.6930%" y="405" width="0.0298%" height="15" fill="rgb(229,93,14)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="65.6930%" y="389" width="0.0298%" height="15" fill="rgb(209,67,49)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="65.6930%" y="373" width="0.0298%" height="15" fill="rgb(213,87,29)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="65.6930%" y="357" width="0.0298%" height="15" fill="rgb(205,151,52)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.03%)</title><rect x="65.6930%" y="341" width="0.0298%" height="15" fill="rgb(253,215,39)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1 samples, 0.03%)</title><rect x="65.6930%" y="325" width="0.0298%" height="15" fill="rgb(221,220,41)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="65.6930%" y="309" width="0.0298%" height="15" fill="rgb(218,133,21)" fg:x="2204" fg:w="1"/><text x="65.9430%" y="319.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (3 samples, 0.09%)</title><rect x="65.8122%" y="453" width="0.0894%" height="15" fill="rgb(221,193,43)" fg:x="2208" fg:w="3"/><text x="66.0622%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::put_particle (1 samples, 0.03%)</title><rect x="65.9016%" y="453" width="0.0298%" height="15" fill="rgb(240,128,52)" fg:x="2211" fg:w="1"/><text x="66.1516%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="65.9613%" y="421" width="0.0298%" height="15" fill="rgb(253,114,12)" fg:x="2213" fg:w="1"/><text x="66.2113%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (5 samples, 0.15%)</title><rect x="65.9314%" y="437" width="0.1490%" height="15" fill="rgb(215,223,47)" fg:x="2212" fg:w="5"/><text x="66.1814%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed::{{closure}} (3 samples, 0.09%)</title><rect x="65.9911%" y="421" width="0.0894%" height="15" fill="rgb(248,225,23)" fg:x="2214" fg:w="3"/><text x="66.2411%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.09%)</title><rect x="65.9911%" y="405" width="0.0894%" height="15" fill="rgb(250,108,0)" fg:x="2214" fg:w="3"/><text x="66.2411%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.09%)</title><rect x="65.9911%" y="389" width="0.0894%" height="15" fill="rgb(228,208,7)" fg:x="2214" fg:w="3"/><text x="66.2411%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="66.0805%" y="341" width="0.0894%" height="15" fill="rgb(244,45,10)" fg:x="2217" fg:w="3"/><text x="66.3305%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (37 samples, 1.10%)</title><rect x="66.1699%" y="325" width="1.1028%" height="15" fill="rgb(207,125,25)" fg:x="2220" fg:w="37"/><text x="66.4199%" y="335.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (37 samples, 1.10%)</title><rect x="66.1699%" y="309" width="1.1028%" height="15" fill="rgb(210,195,18)" fg:x="2220" fg:w="37"/><text x="66.4199%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (37 samples, 1.10%)</title><rect x="66.1699%" y="293" width="1.1028%" height="15" fill="rgb(249,80,12)" fg:x="2220" fg:w="37"/><text x="66.4199%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed (47 samples, 1.40%)</title><rect x="65.9314%" y="453" width="1.4009%" height="15" fill="rgb(221,65,9)" fg:x="2212" fg:w="47"/><text x="66.1814%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (42 samples, 1.25%)</title><rect x="66.0805%" y="437" width="1.2519%" height="15" fill="rgb(235,49,36)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (42 samples, 1.25%)</title><rect x="66.0805%" y="421" width="1.2519%" height="15" fill="rgb(225,32,20)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (42 samples, 1.25%)</title><rect x="66.0805%" y="405" width="1.2519%" height="15" fill="rgb(215,141,46)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (42 samples, 1.25%)</title><rect x="66.0805%" y="389" width="1.2519%" height="15" fill="rgb(250,160,47)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 1.25%)</title><rect x="66.0805%" y="373" width="1.2519%" height="15" fill="rgb(216,222,40)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 1.25%)</title><rect x="66.0805%" y="357" width="1.2519%" height="15" fill="rgb(234,217,39)" fg:x="2217" fg:w="42"/><text x="66.3305%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (39 samples, 1.16%)</title><rect x="66.1699%" y="341" width="1.1624%" height="15" fill="rgb(207,178,40)" fg:x="2220" fg:w="39"/><text x="66.4199%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.06%)</title><rect x="67.2727%" y="325" width="0.0596%" height="15" fill="rgb(221,136,13)" fg:x="2257" fg:w="2"/><text x="67.5227%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.8390%" y="421" width="0.0298%" height="15" fill="rgb(249,199,10)" fg:x="2276" fg:w="1"/><text x="68.0890%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="67.8390%" y="405" width="0.0298%" height="15" fill="rgb(249,222,13)" fg:x="2276" fg:w="1"/><text x="68.0890%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.8390%" y="389" width="0.0298%" height="15" fill="rgb(244,185,38)" fg:x="2276" fg:w="1"/><text x="68.0890%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (33 samples, 0.98%)</title><rect x="67.8689%" y="421" width="0.9836%" height="15" fill="rgb(236,202,9)" fg:x="2277" fg:w="33"/><text x="68.1189%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_sign_negative (28 samples, 0.83%)</title><rect x="68.8525%" y="421" width="0.8346%" height="15" fill="rgb(250,229,37)" fg:x="2310" fg:w="28"/><text x="69.1025%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_sign_negative (28 samples, 0.83%)</title><rect x="68.8525%" y="405" width="0.8346%" height="15" fill="rgb(206,174,23)" fg:x="2310" fg:w="28"/><text x="69.1025%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="69.6870%" y="421" width="0.0298%" height="15" fill="rgb(211,33,43)" fg:x="2338" fg:w="1"/><text x="69.9370%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.42%)</title><rect x="69.7168%" y="421" width="0.4173%" height="15" fill="rgb(245,58,50)" fg:x="2339" fg:w="14"/><text x="69.9668%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.42%)</title><rect x="69.7168%" y="405" width="0.4173%" height="15" fill="rgb(244,68,36)" fg:x="2339" fg:w="14"/><text x="69.9668%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.39%)</title><rect x="69.7466%" y="389" width="0.3875%" height="15" fill="rgb(232,229,15)" fg:x="2340" fg:w="13"/><text x="69.9966%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (5 samples, 0.15%)</title><rect x="70.1341%" y="421" width="0.1490%" height="15" fill="rgb(254,30,23)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (5 samples, 0.15%)</title><rect x="70.1341%" y="405" width="0.1490%" height="15" fill="rgb(235,160,14)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.15%)</title><rect x="70.1341%" y="389" width="0.1490%" height="15" fill="rgb(212,155,44)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.15%)</title><rect x="70.1341%" y="373" width="0.1490%" height="15" fill="rgb(226,2,50)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.15%)</title><rect x="70.1341%" y="357" width="0.1490%" height="15" fill="rgb(234,177,6)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="367.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.15%)</title><rect x="70.1341%" y="341" width="0.1490%" height="15" fill="rgb(217,24,9)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.15%)</title><rect x="70.1341%" y="325" width="0.1490%" height="15" fill="rgb(220,13,46)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="335.50"></text></g><g><title>__GI___libc_free (5 samples, 0.15%)</title><rect x="70.1341%" y="309" width="0.1490%" height="15" fill="rgb(239,221,27)" fg:x="2353" fg:w="5"/><text x="70.3841%" y="319.50"></text></g><g><title>_int_free (3 samples, 0.09%)</title><rect x="70.1937%" y="293" width="0.0894%" height="15" fill="rgb(222,198,25)" fg:x="2355" fg:w="3"/><text x="70.4437%" y="303.50"></text></g><g><title>tcache_put (2 samples, 0.06%)</title><rect x="70.2235%" y="277" width="0.0596%" height="15" fill="rgb(211,99,13)" fg:x="2356" fg:w="2"/><text x="70.4735%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (10 samples, 0.30%)</title><rect x="70.2832%" y="421" width="0.2981%" height="15" fill="rgb(232,111,31)" fg:x="2358" fg:w="10"/><text x="70.5332%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="70.5514%" y="405" width="0.0298%" height="15" fill="rgb(245,82,37)" fg:x="2367" fg:w="1"/><text x="70.8014%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="70.5514%" y="389" width="0.0298%" height="15" fill="rgb(227,149,46)" fg:x="2367" fg:w="1"/><text x="70.8014%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="70.5514%" y="373" width="0.0298%" height="15" fill="rgb(218,36,50)" fg:x="2367" fg:w="1"/><text x="70.8014%" y="383.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_number_reactions (2 samples, 0.06%)</title><rect x="70.5812%" y="421" width="0.0596%" height="15" fill="rgb(226,80,48)" fg:x="2368" fg:w="2"/><text x="70.8312%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="70.6110%" y="405" width="0.0298%" height="15" fill="rgb(238,224,15)" fg:x="2369" fg:w="1"/><text x="70.8610%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="70.6110%" y="389" width="0.0298%" height="15" fill="rgb(241,136,10)" fg:x="2369" fg:w="1"/><text x="70.8610%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="70.6110%" y="373" width="0.0298%" height="15" fill="rgb(208,32,45)" fg:x="2369" fg:w="1"/><text x="70.8610%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="70.6408%" y="293" width="0.0298%" height="15" fill="rgb(207,135,9)" fg:x="2370" fg:w="1"/><text x="70.8908%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="70.6408%" y="405" width="0.0596%" height="15" fill="rgb(206,86,44)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="70.6408%" y="389" width="0.0596%" height="15" fill="rgb(245,177,15)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="70.6408%" y="373" width="0.0596%" height="15" fill="rgb(206,64,50)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="70.6408%" y="357" width="0.0596%" height="15" fill="rgb(234,36,40)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="70.6408%" y="341" width="0.0596%" height="15" fill="rgb(213,64,8)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="70.6408%" y="325" width="0.0596%" height="15" fill="rgb(210,75,36)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="70.6408%" y="309" width="0.0596%" height="15" fill="rgb(229,88,21)" fg:x="2370" fg:w="2"/><text x="70.8908%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="70.6706%" y="293" width="0.0298%" height="15" fill="rgb(252,204,47)" fg:x="2371" fg:w="1"/><text x="70.9206%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="70.6706%" y="277" width="0.0298%" height="15" fill="rgb(208,77,27)" fg:x="2371" fg:w="1"/><text x="70.9206%" y="287.50"></text></g><g><title>tcache_get (1 samples, 0.03%)</title><rect x="70.6706%" y="261" width="0.0298%" height="15" fill="rgb(221,76,26)" fg:x="2371" fg:w="1"/><text x="70.9206%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="70.7004%" y="405" width="0.0298%" height="15" fill="rgb(225,139,18)" fg:x="2372" fg:w="1"/><text x="70.9504%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="70.7303%" y="405" width="0.0298%" height="15" fill="rgb(230,137,11)" fg:x="2373" fg:w="1"/><text x="70.9803%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="70.8495%" y="357" width="0.0298%" height="15" fill="rgb(212,28,1)" fg:x="2377" fg:w="1"/><text x="71.0995%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.30%)</title><rect x="70.8793%" y="357" width="0.2981%" height="15" fill="rgb(248,164,17)" fg:x="2378" fg:w="10"/><text x="71.1293%" y="367.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.27%)</title><rect x="70.9091%" y="341" width="0.2683%" height="15" fill="rgb(222,171,42)" fg:x="2379" fg:w="9"/><text x="71.1591%" y="351.50"></text></g><g><title>tcache_get (5 samples, 0.15%)</title><rect x="71.0283%" y="325" width="0.1490%" height="15" fill="rgb(243,84,45)" fg:x="2383" fg:w="5"/><text x="71.2783%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.54%)</title><rect x="70.7601%" y="405" width="0.5365%" height="15" fill="rgb(252,49,23)" fg:x="2374" fg:w="18"/><text x="71.0101%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.51%)</title><rect x="70.7899%" y="389" width="0.5067%" height="15" fill="rgb(215,19,7)" fg:x="2375" fg:w="17"/><text x="71.0399%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.51%)</title><rect x="70.7899%" y="373" width="0.5067%" height="15" fill="rgb(238,81,41)" fg:x="2375" fg:w="17"/><text x="71.0399%" y="383.50"></text></g><g><title>core::cmp::max (4 samples, 0.12%)</title><rect x="71.1773%" y="357" width="0.1192%" height="15" fill="rgb(210,199,37)" fg:x="2388" fg:w="4"/><text x="71.4273%" y="367.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.12%)</title><rect x="71.1773%" y="341" width="0.1192%" height="15" fill="rgb(244,192,49)" fg:x="2388" fg:w="4"/><text x="71.4273%" y="351.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.12%)</title><rect x="71.1773%" y="325" width="0.1192%" height="15" fill="rgb(226,211,11)" fg:x="2388" fg:w="4"/><text x="71.4273%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.09%)</title><rect x="71.2966%" y="405" width="0.0894%" height="15" fill="rgb(236,162,54)" fg:x="2392" fg:w="3"/><text x="71.5466%" y="415.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.03%)</title><rect x="71.3860%" y="405" width="0.0298%" height="15" fill="rgb(220,229,9)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="415.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.03%)</title><rect x="71.3860%" y="389" width="0.0298%" height="15" fill="rgb(250,87,22)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.03%)</title><rect x="71.3860%" y="373" width="0.0298%" height="15" fill="rgb(239,43,17)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="71.3860%" y="357" width="0.0298%" height="15" fill="rgb(231,177,25)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.03%)</title><rect x="71.3860%" y="341" width="0.0298%" height="15" fill="rgb(219,179,1)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="71.3860%" y="325" width="0.0298%" height="15" fill="rgb(238,219,53)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="335.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.03%)</title><rect x="71.3860%" y="309" width="0.0298%" height="15" fill="rgb(232,167,36)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="319.50"></text></g><g><title>__rdl_alloc_zeroed (1 samples, 0.03%)</title><rect x="71.3860%" y="293" width="0.0298%" height="15" fill="rgb(244,19,51)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (1 samples, 0.03%)</title><rect x="71.3860%" y="277" width="0.0298%" height="15" fill="rgb(224,6,22)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="287.50"></text></g><g><title>__libc_calloc (1 samples, 0.03%)</title><rect x="71.3860%" y="261" width="0.0298%" height="15" fill="rgb(224,145,5)" fg:x="2395" fg:w="1"/><text x="71.6360%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.03%)</title><rect x="71.4158%" y="405" width="0.0298%" height="15" fill="rgb(234,130,49)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.03%)</title><rect x="71.4158%" y="389" width="0.0298%" height="15" fill="rgb(254,6,2)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="71.4158%" y="373" width="0.0298%" height="15" fill="rgb(208,96,46)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="71.4158%" y="357" width="0.0298%" height="15" fill="rgb(239,3,39)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="71.4158%" y="341" width="0.0298%" height="15" fill="rgb(233,210,1)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="351.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="71.4158%" y="325" width="0.0298%" height="15" fill="rgb(244,137,37)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="71.4158%" y="309" width="0.0298%" height="15" fill="rgb(240,136,2)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="71.4158%" y="293" width="0.0298%" height="15" fill="rgb(239,18,37)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="71.4158%" y="277" width="0.0298%" height="15" fill="rgb(218,185,22)" fg:x="2396" fg:w="1"/><text x="71.6658%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (28 samples, 0.83%)</title><rect x="70.6408%" y="421" width="0.8346%" height="15" fill="rgb(225,218,4)" fg:x="2370" fg:w="28"/><text x="70.8908%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (1 samples, 0.03%)</title><rect x="71.4456%" y="405" width="0.0298%" height="15" fill="rgb(230,182,32)" fg:x="2397" fg:w="1"/><text x="71.6956%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.09%)</title><rect x="71.4754%" y="405" width="0.0894%" height="15" fill="rgb(242,56,43)" fg:x="2398" fg:w="3"/><text x="71.7254%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="71.5648%" y="405" width="0.0298%" height="15" fill="rgb(233,99,24)" fg:x="2401" fg:w="1"/><text x="71.8148%" y="415.50"></text></g><g><title>[libm.so.6] (1 samples, 0.03%)</title><rect x="71.6244%" y="373" width="0.0298%" height="15" fill="rgb(234,209,42)" fg:x="2403" fg:w="1"/><text x="71.8744%" y="383.50"></text></g><g><title>do_cos (5 samples, 0.15%)</title><rect x="71.8033%" y="357" width="0.1490%" height="15" fill="rgb(227,7,12)" fg:x="2409" fg:w="5"/><text x="72.0533%" y="367.50"></text></g><g><title>do_sin (11 samples, 0.33%)</title><rect x="71.9523%" y="357" width="0.3279%" height="15" fill="rgb(245,203,43)" fg:x="2414" fg:w="11"/><text x="72.2023%" y="367.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.03%)</title><rect x="72.2802%" y="357" width="0.0298%" height="15" fill="rgb(238,205,33)" fg:x="2425" fg:w="1"/><text x="72.5302%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (25 samples, 0.75%)</title><rect x="71.5946%" y="405" width="0.7452%" height="15" fill="rgb(231,56,7)" fg:x="2402" fg:w="25"/><text x="71.8446%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (25 samples, 0.75%)</title><rect x="71.5946%" y="389" width="0.7452%" height="15" fill="rgb(244,186,29)" fg:x="2402" fg:w="25"/><text x="71.8446%" y="399.50"></text></g><g><title>__sincos (23 samples, 0.69%)</title><rect x="71.6542%" y="373" width="0.6855%" height="15" fill="rgb(234,111,31)" fg:x="2404" fg:w="23"/><text x="71.9042%" y="383.50"></text></g><g><title>reduce_sincos (1 samples, 0.03%)</title><rect x="72.3100%" y="357" width="0.0298%" height="15" fill="rgb(241,149,10)" fg:x="2426" fg:w="1"/><text x="72.5600%" y="367.50"></text></g><g><title>__ieee754_log_fma (6 samples, 0.18%)</title><rect x="72.3398%" y="341" width="0.1788%" height="15" fill="rgb(249,206,44)" fg:x="2427" fg:w="6"/><text x="72.5898%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::ln (7 samples, 0.21%)</title><rect x="72.3398%" y="405" width="0.2086%" height="15" fill="rgb(251,153,30)" fg:x="2427" fg:w="7"/><text x="72.5898%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (7 samples, 0.21%)</title><rect x="72.3398%" y="389" width="0.2086%" height="15" fill="rgb(239,152,38)" fg:x="2427" fg:w="7"/><text x="72.5898%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (7 samples, 0.21%)</title><rect x="72.3398%" y="373" width="0.2086%" height="15" fill="rgb(249,139,47)" fg:x="2427" fg:w="7"/><text x="72.5898%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (7 samples, 0.21%)</title><rect x="72.3398%" y="357" width="0.2086%" height="15" fill="rgb(244,64,35)" fg:x="2427" fg:w="7"/><text x="72.5898%" y="367.50"></text></g><g><title>__log (1 samples, 0.03%)</title><rect x="72.5186%" y="341" width="0.0298%" height="15" fill="rgb(216,46,15)" fg:x="2433" fg:w="1"/><text x="72.7686%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (4 samples, 0.12%)</title><rect x="72.5484%" y="405" width="0.1192%" height="15" fill="rgb(250,74,19)" fg:x="2434" fg:w="4"/><text x="72.7984%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 0.12%)</title><rect x="72.5484%" y="389" width="0.1192%" height="15" fill="rgb(249,42,33)" fg:x="2434" fg:w="4"/><text x="72.7984%" y="399.50"></text></g><g><title>fastiron::data::direction_cosine::DirectionCosine&lt;T&gt;::rotate_3d_vector (4 samples, 0.12%)</title><rect x="72.6677%" y="405" width="0.1192%" height="15" fill="rgb(242,149,17)" fg:x="2438" fg:w="4"/><text x="72.9177%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="72.7571%" y="389" width="0.0298%" height="15" fill="rgb(244,29,21)" fg:x="2441" fg:w="1"/><text x="73.0071%" y="399.50"></text></g><g><title>fastiron::simulation::collision_event::update_trajectory (45 samples, 1.34%)</title><rect x="71.4754%" y="421" width="1.3413%" height="15" fill="rgb(220,130,37)" fg:x="2398" fg:w="45"/><text x="71.7254%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (1 samples, 0.03%)</title><rect x="72.7869%" y="405" width="0.0298%" height="15" fill="rgb(211,67,2)" fg:x="2442" fg:w="1"/><text x="73.0369%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.06%)</title><rect x="74.7541%" y="405" width="0.0596%" height="15" fill="rgb(235,68,52)" fg:x="2508" fg:w="2"/><text x="75.0041%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="74.7541%" y="389" width="0.0596%" height="15" fill="rgb(246,142,3)" fg:x="2508" fg:w="2"/><text x="75.0041%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="74.7541%" y="373" width="0.0596%" height="15" fill="rgb(241,25,7)" fg:x="2508" fg:w="2"/><text x="75.0041%" y="383.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (54 samples, 1.61%)</title><rect x="74.8137%" y="405" width="1.6095%" height="15" fill="rgb(242,119,39)" fg:x="2510" fg:w="54"/><text x="75.0637%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (8 samples, 0.24%)</title><rect x="76.4232%" y="405" width="0.2385%" height="15" fill="rgb(241,98,45)" fg:x="2564" fg:w="8"/><text x="76.6732%" y="415.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_cross_section (167 samples, 4.98%)</title><rect x="72.8167%" y="421" width="4.9776%" height="15" fill="rgb(254,28,30)" fg:x="2443" fg:w="167"/><text x="73.0667%" y="431.50">fastir..</text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_reaction_cross_section (38 samples, 1.13%)</title><rect x="76.6617%" y="405" width="1.1326%" height="15" fill="rgb(241,142,54)" fg:x="2572" fg:w="38"/><text x="76.9117%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.45%)</title><rect x="77.3472%" y="389" width="0.4471%" height="15" fill="rgb(222,85,15)" fg:x="2595" fg:w="15"/><text x="77.5972%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.45%)</title><rect x="77.3472%" y="373" width="0.4471%" height="15" fill="rgb(210,85,47)" fg:x="2595" fg:w="15"/><text x="77.5972%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.45%)</title><rect x="77.3472%" y="357" width="0.4471%" height="15" fill="rgb(224,206,25)" fg:x="2595" fg:w="15"/><text x="77.5972%" y="367.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (350 samples, 10.43%)</title><rect x="67.3920%" y="437" width="10.4322%" height="15" fill="rgb(243,201,19)" fg:x="2261" fg:w="350"/><text x="67.6420%" y="447.50">fastiron::simul..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (1 samples, 0.03%)</title><rect x="77.7943%" y="421" width="0.0298%" height="15" fill="rgb(236,59,4)" fg:x="2610" fg:w="1"/><text x="78.0443%" y="431.50"></text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (5 samples, 0.15%)</title><rect x="77.8241%" y="437" width="0.1490%" height="15" fill="rgb(254,179,45)" fg:x="2611" fg:w="5"/><text x="78.0741%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.09%)</title><rect x="77.8838%" y="421" width="0.0894%" height="15" fill="rgb(226,14,10)" fg:x="2613" fg:w="3"/><text x="78.1338%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_sign_negative (3 samples, 0.09%)</title><rect x="79.2846%" y="421" width="0.0894%" height="15" fill="rgb(244,27,41)" fg:x="2660" fg:w="3"/><text x="79.5346%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_sign_negative (3 samples, 0.09%)</title><rect x="79.2846%" y="405" width="0.0894%" height="15" fill="rgb(235,35,32)" fg:x="2660" fg:w="3"/><text x="79.5346%" y="415.50"></text></g><g><title>&lt;fastiron::data::tallies::MCTallyEvent as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="79.3741%" y="421" width="0.0298%" height="15" fill="rgb(218,68,31)" fg:x="2663" fg:w="1"/><text x="79.6241%" y="431.50"></text></g><g><title>[libc.so.6] (11 samples, 0.33%)</title><rect x="79.4039%" y="421" width="0.3279%" height="15" fill="rgb(207,120,37)" fg:x="2664" fg:w="11"/><text x="79.6539%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (1 samples, 0.03%)</title><rect x="79.7317%" y="421" width="0.0298%" height="15" fill="rgb(227,98,0)" fg:x="2675" fg:w="1"/><text x="79.9817%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.09%)</title><rect x="79.9404%" y="405" width="0.0894%" height="15" fill="rgb(207,7,3)" fg:x="2682" fg:w="3"/><text x="80.1904%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.09%)</title><rect x="79.9404%" y="389" width="0.0894%" height="15" fill="rgb(206,98,19)" fg:x="2682" fg:w="3"/><text x="80.1904%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.09%)</title><rect x="79.9404%" y="373" width="0.0894%" height="15" fill="rgb(217,5,26)" fg:x="2682" fg:w="3"/><text x="80.1904%" y="383.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::tally_scalar_flux (46 samples, 1.37%)</title><rect x="79.7615%" y="421" width="1.3711%" height="15" fill="rgb(235,190,38)" fg:x="2676" fg:w="46"/><text x="80.0115%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (37 samples, 1.10%)</title><rect x="80.0298%" y="405" width="1.1028%" height="15" fill="rgb(247,86,24)" fg:x="2685" fg:w="37"/><text x="80.2798%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.03%)</title><rect x="82.2057%" y="341" width="0.0298%" height="15" fill="rgb(205,101,16)" fg:x="2758" fg:w="1"/><text x="82.4557%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="82.2355%" y="325" width="0.0298%" height="15" fill="rgb(246,168,33)" fg:x="2759" fg:w="1"/><text x="82.4855%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="82.2653%" y="277" width="0.0298%" height="15" fill="rgb(231,114,1)" fg:x="2760" fg:w="1"/><text x="82.5153%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="82.2653%" y="261" width="0.0298%" height="15" fill="rgb(207,184,53)" fg:x="2760" fg:w="1"/><text x="82.5153%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="82.2653%" y="245" width="0.0298%" height="15" fill="rgb(224,95,51)" fg:x="2760" fg:w="1"/><text x="82.5153%" y="255.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (42 samples, 1.25%)</title><rect x="81.1326%" y="421" width="1.2519%" height="15" fill="rgb(212,188,45)" fg:x="2722" fg:w="42"/><text x="81.3826%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.18%)</title><rect x="82.2057%" y="405" width="0.1788%" height="15" fill="rgb(223,154,38)" fg:x="2758" fg:w="6"/><text x="82.4557%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.18%)</title><rect x="82.2057%" y="389" width="0.1788%" height="15" fill="rgb(251,22,52)" fg:x="2758" fg:w="6"/><text x="82.4557%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.18%)</title><rect x="82.2057%" y="373" width="0.1788%" height="15" fill="rgb(229,209,22)" fg:x="2758" fg:w="6"/><text x="82.4557%" y="383.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section::{{closure}} (6 samples, 0.18%)</title><rect x="82.2057%" y="357" width="0.1788%" height="15" fill="rgb(234,138,34)" fg:x="2758" fg:w="6"/><text x="82.4557%" y="367.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_total_cross_section (5 samples, 0.15%)</title><rect x="82.2355%" y="341" width="0.1490%" height="15" fill="rgb(212,95,11)" fg:x="2759" fg:w="5"/><text x="82.4855%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section (4 samples, 0.12%)</title><rect x="82.2653%" y="325" width="0.1192%" height="15" fill="rgb(240,179,47)" fg:x="2760" fg:w="4"/><text x="82.5153%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="82.2653%" y="309" width="0.1192%" height="15" fill="rgb(240,163,11)" fg:x="2760" fg:w="4"/><text x="82.5153%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.12%)</title><rect x="82.2653%" y="293" width="0.1192%" height="15" fill="rgb(236,37,12)" fg:x="2760" fg:w="4"/><text x="82.5153%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="82.2951%" y="277" width="0.0894%" height="15" fill="rgb(232,164,16)" fg:x="2761" fg:w="3"/><text x="82.5451%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section::{{closure}} (3 samples, 0.09%)</title><rect x="82.2951%" y="261" width="0.0894%" height="15" fill="rgb(244,205,15)" fg:x="2761" fg:w="3"/><text x="82.5451%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.06%)</title><rect x="82.3249%" y="245" width="0.0596%" height="15" fill="rgb(223,117,47)" fg:x="2762" fg:w="2"/><text x="82.5749%" y="255.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min (2 samples, 0.06%)</title><rect x="82.3845%" y="421" width="0.0596%" height="15" fill="rgb(244,107,35)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="82.3845%" y="405" width="0.0596%" height="15" fill="rgb(205,140,8)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="82.3845%" y="389" width="0.0596%" height="15" fill="rgb(228,84,46)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="82.3845%" y="373" width="0.0596%" height="15" fill="rgb(254,188,9)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="383.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min::{{closure}} (2 samples, 0.06%)</title><rect x="82.3845%" y="357" width="0.0596%" height="15" fill="rgb(206,112,54)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (2 samples, 0.06%)</title><rect x="82.3845%" y="341" width="0.0596%" height="15" fill="rgb(216,84,49)" fg:x="2764" fg:w="2"/><text x="82.6345%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.69%)</title><rect x="82.4441%" y="357" width="0.6855%" height="15" fill="rgb(214,194,35)" fg:x="2766" fg:w="23"/><text x="82.6941%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.69%)</title><rect x="82.4441%" y="341" width="0.6855%" height="15" fill="rgb(249,28,3)" fg:x="2766" fg:w="23"/><text x="82.6941%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (23 samples, 0.69%)</title><rect x="82.4441%" y="325" width="0.6855%" height="15" fill="rgb(222,56,52)" fg:x="2766" fg:w="23"/><text x="82.6941%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.15%)</title><rect x="86.1699%" y="325" width="0.1490%" height="15" fill="rgb(245,217,50)" fg:x="2891" fg:w="5"/><text x="86.4199%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.15%)</title><rect x="86.1699%" y="309" width="0.1490%" height="15" fill="rgb(213,201,24)" fg:x="2891" fg:w="5"/><text x="86.4199%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.15%)</title><rect x="86.1699%" y="293" width="0.1490%" height="15" fill="rgb(248,116,28)" fg:x="2891" fg:w="5"/><text x="86.4199%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (24 samples, 0.72%)</title><rect x="86.3189%" y="325" width="0.7154%" height="15" fill="rgb(219,72,43)" fg:x="2896" fg:w="24"/><text x="86.5689%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (23 samples, 0.69%)</title><rect x="87.0343%" y="325" width="0.6855%" height="15" fill="rgb(209,138,14)" fg:x="2920" fg:w="23"/><text x="87.2843%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (6 samples, 0.18%)</title><rect x="87.7198%" y="325" width="0.1788%" height="15" fill="rgb(222,18,33)" fg:x="2943" fg:w="6"/><text x="87.9698%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (84 samples, 2.50%)</title><rect x="87.8987%" y="325" width="2.5037%" height="15" fill="rgb(213,199,7)" fg:x="2949" fg:w="84"/><text x="88.1487%" y="335.50">co..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (67 samples, 2.00%)</title><rect x="92.7869%" y="309" width="1.9970%" height="15" fill="rgb(250,110,10)" fg:x="3113" fg:w="67"/><text x="93.0369%" y="319.50">&lt;..</text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (17 samples, 0.51%)</title><rect x="94.7839%" y="309" width="0.5067%" height="15" fill="rgb(248,123,6)" fg:x="3180" fg:w="17"/><text x="95.0339%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (36 samples, 1.07%)</title><rect x="95.2906%" y="309" width="1.0730%" height="15" fill="rgb(206,91,31)" fg:x="3197" fg:w="36"/><text x="95.5406%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Neg&gt;::neg (3 samples, 0.09%)</title><rect x="96.3636%" y="309" width="0.0894%" height="15" fill="rgb(211,154,13)" fg:x="3233" fg:w="3"/><text x="96.6136%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (20 samples, 0.60%)</title><rect x="96.4531%" y="309" width="0.5961%" height="15" fill="rgb(225,148,7)" fg:x="3236" fg:w="20"/><text x="96.7031%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (3 samples, 0.09%)</title><rect x="97.0492%" y="309" width="0.0894%" height="15" fill="rgb(220,160,43)" fg:x="3256" fg:w="3"/><text x="97.2992%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (3 samples, 0.09%)</title><rect x="97.0492%" y="293" width="0.0894%" height="15" fill="rgb(213,52,39)" fg:x="3256" fg:w="3"/><text x="97.2992%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (11 samples, 0.33%)</title><rect x="97.1386%" y="309" width="0.3279%" height="15" fill="rgb(243,137,7)" fg:x="3259" fg:w="11"/><text x="97.3886%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (530 samples, 15.80%)</title><rect x="82.4441%" y="389" width="15.7973%" height="15" fill="rgb(230,79,13)" fg:x="2766" fg:w="530"/><text x="82.6941%" y="399.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (530 samples, 15.80%)</title><rect x="82.4441%" y="373" width="15.7973%" height="15" fill="rgb(247,105,23)" fg:x="2766" fg:w="530"/><text x="82.6941%" y="383.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (507 samples, 15.11%)</title><rect x="83.1297%" y="357" width="15.1118%" height="15" fill="rgb(223,179,41)" fg:x="2789" fg:w="507"/><text x="83.3797%" y="367.50">core::iter::traits::ite..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg::{{closure}} (507 samples, 15.11%)</title><rect x="83.1297%" y="341" width="15.1118%" height="15" fill="rgb(218,9,34)" fg:x="2789" fg:w="507"/><text x="83.3797%" y="351.50">fastiron::simulation::m..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg_dist_to_segment (263 samples, 7.84%)</title><rect x="90.4024%" y="325" width="7.8390%" height="15" fill="rgb(222,106,8)" fg:x="3033" fg:w="263"/><text x="90.6524%" y="335.50">fastiron::s..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (26 samples, 0.77%)</title><rect x="97.4665%" y="309" width="0.7750%" height="15" fill="rgb(211,220,0)" fg:x="3270" fg:w="26"/><text x="97.7165%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.06%)</title><rect x="98.6289%" y="293" width="0.0596%" height="15" fill="rgb(229,52,16)" fg:x="3309" fg:w="2"/><text x="98.8789%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.06%)</title><rect x="98.6289%" y="277" width="0.0596%" height="15" fill="rgb(212,155,18)" fg:x="3309" fg:w="2"/><text x="98.8789%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.21%)</title><rect x="98.5395%" y="325" width="0.2086%" height="15" fill="rgb(242,21,14)" fg:x="3306" fg:w="7"/><text x="98.7895%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.21%)</title><rect x="98.5395%" y="309" width="0.2086%" height="15" fill="rgb(222,19,48)" fg:x="3306" fg:w="7"/><text x="98.7895%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="98.6885%" y="293" width="0.0596%" height="15" fill="rgb(232,45,27)" fg:x="3311" fg:w="2"/><text x="98.9385%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (1 samples, 0.03%)</title><rect x="99.5231%" y="293" width="0.0298%" height="15" fill="rgb(249,103,42)" fg:x="3339" fg:w="1"/><text x="99.7731%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 1.40%)</title><rect x="98.5395%" y="341" width="1.4009%" height="15" fill="rgb(246,81,33)" fg:x="3306" fg:w="47"/><text x="98.7895%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (40 samples, 1.19%)</title><rect x="98.7481%" y="325" width="1.1923%" height="15" fill="rgb(252,33,42)" fg:x="3313" fg:w="40"/><text x="98.9981%" y="335.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest::{{closure}} (40 samples, 1.19%)</title><rect x="98.7481%" y="309" width="1.1923%" height="15" fill="rgb(209,212,41)" fg:x="3313" fg:w="40"/><text x="98.9981%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (13 samples, 0.39%)</title><rect x="99.5529%" y="293" width="0.3875%" height="15" fill="rgb(207,154,6)" fg:x="3340" fg:w="13"/><text x="99.8029%" y="303.50"></text></g><g><title>__libc_start_main_impl (3,335 samples, 99.40%)</title><rect x="0.5663%" y="581" width="99.4039%" height="15" fill="rgb(223,64,47)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="591.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,335 samples, 99.40%)</title><rect x="0.5663%" y="565" width="99.4039%" height="15" fill="rgb(211,161,38)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="575.50">__libc_start_call_main</text></g><g><title>main (3,335 samples, 99.40%)</title><rect x="0.5663%" y="549" width="99.4039%" height="15" fill="rgb(219,138,40)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="559.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,335 samples, 99.40%)</title><rect x="0.5663%" y="533" width="99.4039%" height="15" fill="rgb(241,228,46)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,335 samples, 99.40%)</title><rect x="0.5663%" y="517" width="99.4039%" height="15" fill="rgb(223,209,38)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>fastiron::main (3,335 samples, 99.40%)</title><rect x="0.5663%" y="501" width="99.4039%" height="15" fill="rgb(236,164,45)" fg:x="19" fg:w="3335"/><text x="0.8163%" y="511.50">fastiron::main</text></g><g><title>fastiron::cycle_tracking (1,156 samples, 34.46%)</title><rect x="65.5142%" y="485" width="34.4560%" height="15" fill="rgb(231,15,5)" fg:x="2198" fg:w="1156"/><text x="65.7642%" y="495.50">fastiron::cycle_tracking</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (1,149 samples, 34.25%)</title><rect x="65.7228%" y="469" width="34.2474%" height="15" fill="rgb(252,35,15)" fg:x="2205" fg:w="1149"/><text x="65.9728%" y="479.50">fastiron::simulation::cycle_tracking::cycle_tracking_guts</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (1,095 samples, 32.64%)</title><rect x="67.3323%" y="453" width="32.6379%" height="15" fill="rgb(248,181,18)" fg:x="2259" fg:w="1095"/><text x="67.5823%" y="463.50">fastiron::simulation::cycle_tracking::cycle_tracking_..</text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (738 samples, 22.00%)</title><rect x="77.9732%" y="437" width="21.9970%" height="15" fill="rgb(233,39,42)" fg:x="2616" fg:w="738"/><text x="78.2232%" y="447.50">fastiron::simulation::mc_segment_ou..</text></g><g><title>fastiron::simulation::mct::nearest_facet (588 samples, 17.53%)</title><rect x="82.4441%" y="421" width="17.5261%" height="15" fill="rgb(238,110,33)" fg:x="2766" fg:w="588"/><text x="82.6941%" y="431.50">fastiron::simulation::mct::..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg (588 samples, 17.53%)</title><rect x="82.4441%" y="405" width="17.5261%" height="15" fill="rgb(233,195,10)" fg:x="2766" fg:w="588"/><text x="82.6941%" y="415.50">fastiron::simulation::mct::..</text></g><g><title>fastiron::simulation::mct::mct_nf_find_nearest (58 samples, 1.73%)</title><rect x="98.2414%" y="389" width="1.7288%" height="15" fill="rgb(254,105,3)" fg:x="3296" fg:w="58"/><text x="98.4914%" y="399.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest (52 samples, 1.55%)</title><rect x="98.4203%" y="373" width="1.5499%" height="15" fill="rgb(221,225,9)" fg:x="3302" fg:w="52"/><text x="98.6703%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (48 samples, 1.43%)</title><rect x="98.5395%" y="357" width="1.4307%" height="15" fill="rgb(224,227,45)" fg:x="3306" fg:w="48"/><text x="98.7895%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (1 samples, 0.03%)</title><rect x="99.9404%" y="341" width="0.0298%" height="15" fill="rgb(229,198,43)" fg:x="3353" fg:w="1"/><text x="100.1904%" y="351.50"></text></g><g><title>all (3,355 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(206,209,35)" fg:x="0" fg:w="3355"/><text x="0.2500%" y="639.50"></text></g><g><title>fastiron (3,355 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(245,195,53)" fg:x="0" fg:w="3355"/><text x="0.2500%" y="623.50">fastiron</text></g><g><title>_start (3,340 samples, 99.55%)</title><rect x="0.4471%" y="597" width="99.5529%" height="15" fill="rgb(240,92,26)" fg:x="15" fg:w="3340"/><text x="0.6971%" y="607.50">_start</text></g><g><title>_dl_start (1 samples, 0.03%)</title><rect x="99.9702%" y="581" width="0.0298%" height="15" fill="rgb(207,40,23)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="591.50"></text></g><g><title>_dl_start_final (1 samples, 0.03%)</title><rect x="99.9702%" y="565" width="0.0298%" height="15" fill="rgb(223,111,35)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="575.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="99.9702%" y="549" width="0.0298%" height="15" fill="rgb(229,147,28)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="559.50"></text></g><g><title>dl_main (1 samples, 0.03%)</title><rect x="99.9702%" y="533" width="0.0298%" height="15" fill="rgb(211,29,28)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="543.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.03%)</title><rect x="99.9702%" y="517" width="0.0298%" height="15" fill="rgb(228,72,33)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="527.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.03%)</title><rect x="99.9702%" y="501" width="0.0298%" height="15" fill="rgb(205,214,31)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="511.50"></text></g><g><title>openaux (1 samples, 0.03%)</title><rect x="99.9702%" y="485" width="0.0298%" height="15" fill="rgb(224,111,15)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="495.50"></text></g><g><title>_dl_map_object (1 samples, 0.03%)</title><rect x="99.9702%" y="469" width="0.0298%" height="15" fill="rgb(253,21,26)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.9702%" y="453" width="0.0298%" height="15" fill="rgb(245,139,43)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="463.50"></text></g><g><title>open_verify (1 samples, 0.03%)</title><rect x="99.9702%" y="437" width="0.0298%" height="15" fill="rgb(252,170,7)" fg:x="3354" fg:w="1"/><text x="100.2202%" y="447.50"></text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="11486"><g><title>[[stack]] (2 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0174%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="0.0174%" y="581" width="0.0174%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.2674%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="0.0348%" y="581" width="0.0174%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="2"/><text x="0.2848%" y="591.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="0.0697%" y="581" width="0.0261%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="3"/><text x="0.3197%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="0.0958%" y="581" width="0.0435%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="5"/><text x="0.3458%" y="591.50"></text></g><g><title>fastiron::cycle_tracking (2 samples, 0.02%)</title><rect x="0.1393%" y="581" width="0.0174%" height="15" fill="rgb(232,128,0)" fg:x="16" fg:w="2"/><text x="0.3893%" y="591.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (2 samples, 0.02%)</title><rect x="0.1393%" y="565" width="0.0174%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="2"/><text x="0.3893%" y="575.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (2 samples, 0.02%)</title><rect x="0.1393%" y="549" width="0.0174%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="2"/><text x="0.3893%" y="559.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (2 samples, 0.02%)</title><rect x="0.1393%" y="533" width="0.0174%" height="15" fill="rgb(218,30,26)" fg:x="16" fg:w="2"/><text x="0.3893%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (2 samples, 0.02%)</title><rect x="0.1393%" y="517" width="0.0174%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="2"/><text x="0.3893%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (2 samples, 0.02%)</title><rect x="0.1393%" y="501" width="0.0174%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="2"/><text x="0.3893%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.1393%" y="485" width="0.0174%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="2"/><text x="0.3893%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="0.1393%" y="469" width="0.0174%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="2"/><text x="0.3893%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="0.1393%" y="453" width="0.0174%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="2"/><text x="0.3893%" y="463.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="0.1393%" y="437" width="0.0174%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="2"/><text x="0.3893%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="0.1393%" y="421" width="0.0174%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="2"/><text x="0.3893%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.15%)</title><rect x="0.0174%" y="597" width="0.1480%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="17"/><text x="0.2674%" y="607.50"></text></g><g><title>__GI___libc_free (5 samples, 0.04%)</title><rect x="0.1654%" y="597" width="0.0435%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="5"/><text x="0.4154%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.05%)</title><rect x="0.2525%" y="453" width="0.0522%" height="15" fill="rgb(221,200,47)" fg:x="29" fg:w="6"/><text x="0.5025%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.05%)</title><rect x="0.2525%" y="437" width="0.0522%" height="15" fill="rgb(226,26,5)" fg:x="29" fg:w="6"/><text x="0.5025%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.05%)</title><rect x="0.2525%" y="421" width="0.0522%" height="15" fill="rgb(249,33,26)" fg:x="29" fg:w="6"/><text x="0.5025%" y="431.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::cycle_finalize::{{closure}} (6 samples, 0.05%)</title><rect x="0.2525%" y="405" width="0.0522%" height="15" fill="rgb(235,183,28)" fg:x="29" fg:w="6"/><text x="0.5025%" y="415.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute (5 samples, 0.04%)</title><rect x="0.2612%" y="389" width="0.0435%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="5"/><text x="0.5112%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.04%)</title><rect x="0.2612%" y="373" width="0.0435%" height="15" fill="rgb(247,18,42)" fg:x="30" fg:w="5"/><text x="0.5112%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.04%)</title><rect x="0.2612%" y="357" width="0.0435%" height="15" fill="rgb(241,131,45)" fg:x="30" fg:w="5"/><text x="0.5112%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.04%)</title><rect x="0.2612%" y="341" width="0.0435%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="5"/><text x="0.5112%" y="351.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute::{{closure}} (5 samples, 0.04%)</title><rect x="0.2612%" y="325" width="0.0435%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="5"/><text x="0.5112%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.04%)</title><rect x="0.2612%" y="309" width="0.0435%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="5"/><text x="0.5112%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.04%)</title><rect x="0.2612%" y="293" width="0.0435%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="5"/><text x="0.5112%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.04%)</title><rect x="0.2612%" y="277" width="0.0435%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="5"/><text x="0.5112%" y="287.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute::{{closure}}::{{closure}} (5 samples, 0.04%)</title><rect x="0.2612%" y="261" width="0.0435%" height="15" fill="rgb(209,103,24)" fg:x="30" fg:w="5"/><text x="0.5112%" y="271.50"></text></g><g><title>fastiron::data::tallies::FluenceDomain&lt;T&gt;::add_cell (4 samples, 0.03%)</title><rect x="0.2699%" y="245" width="0.0348%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="4"/><text x="0.5199%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.03%)</title><rect x="0.2699%" y="229" width="0.0348%" height="15" fill="rgb(213,181,19)" fg:x="31" fg:w="4"/><text x="0.5199%" y="239.50"></text></g><g><title>fastiron::cycle_finalize (7 samples, 0.06%)</title><rect x="0.2525%" y="485" width="0.0609%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="7"/><text x="0.5025%" y="495.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::cycle_finalize (7 samples, 0.06%)</title><rect x="0.2525%" y="469" width="0.0609%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="7"/><text x="0.5025%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processed (2 samples, 0.02%)</title><rect x="0.3134%" y="469" width="0.0174%" height="15" fill="rgb(233,36,39)" fg:x="36" fg:w="2"/><text x="0.5634%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (2 samples, 0.02%)</title><rect x="0.3134%" y="453" width="0.0174%" height="15" fill="rgb(226,3,54)" fg:x="36" fg:w="2"/><text x="0.5634%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.02%)</title><rect x="0.3134%" y="437" width="0.0174%" height="15" fill="rgb(245,192,40)" fg:x="36" fg:w="2"/><text x="0.5634%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="0.3134%" y="421" width="0.0174%" height="15" fill="rgb(238,167,29)" fg:x="36" fg:w="2"/><text x="0.5634%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="0.3134%" y="405" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="36" fg:w="2"/><text x="0.5634%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="0.3134%" y="389" width="0.0174%" height="15" fill="rgb(231,60,39)" fg:x="36" fg:w="2"/><text x="0.5634%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="0.3134%" y="373" width="0.0174%" height="15" fill="rgb(208,69,12)" fg:x="36" fg:w="2"/><text x="0.5634%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="0.3134%" y="357" width="0.0174%" height="15" fill="rgb(235,93,37)" fg:x="36" fg:w="2"/><text x="0.5634%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="0.3918%" y="261" width="0.0435%" height="15" fill="rgb(213,116,39)" fg:x="45" fg:w="5"/><text x="0.6418%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (63 samples, 0.55%)</title><rect x="0.3570%" y="277" width="0.5485%" height="15" fill="rgb(222,207,29)" fg:x="41" fg:w="63"/><text x="0.6070%" y="287.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (54 samples, 0.47%)</title><rect x="0.4353%" y="261" width="0.4701%" height="15" fill="rgb(206,96,30)" fg:x="50" fg:w="54"/><text x="0.6853%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (54 samples, 0.47%)</title><rect x="0.4353%" y="245" width="0.4701%" height="15" fill="rgb(218,138,4)" fg:x="50" fg:w="54"/><text x="0.6853%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (54 samples, 0.47%)</title><rect x="0.4353%" y="229" width="0.4701%" height="15" fill="rgb(250,191,14)" fg:x="50" fg:w="54"/><text x="0.6853%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.09%)</title><rect x="0.9055%" y="181" width="0.0871%" height="15" fill="rgb(239,60,40)" fg:x="104" fg:w="10"/><text x="1.1555%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (86 samples, 0.75%)</title><rect x="0.9925%" y="165" width="0.7487%" height="15" fill="rgb(206,27,48)" fg:x="114" fg:w="86"/><text x="1.2425%" y="175.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (86 samples, 0.75%)</title><rect x="0.9925%" y="149" width="0.7487%" height="15" fill="rgb(225,35,8)" fg:x="114" fg:w="86"/><text x="1.2425%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (86 samples, 0.75%)</title><rect x="0.9925%" y="133" width="0.7487%" height="15" fill="rgb(250,213,24)" fg:x="114" fg:w="86"/><text x="1.2425%" y="143.50"></text></g><g><title>fastiron::simulation::population_control::population_control (164 samples, 1.43%)</title><rect x="0.3483%" y="469" width="1.4278%" height="15" fill="rgb(247,123,22)" fg:x="40" fg:w="164"/><text x="0.5983%" y="479.50"></text></g><g><title>fastiron::simulation::population_control::population_control_guts (164 samples, 1.43%)</title><rect x="0.3483%" y="453" width="1.4278%" height="15" fill="rgb(231,138,38)" fg:x="40" fg:w="164"/><text x="0.5983%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (164 samples, 1.43%)</title><rect x="0.3483%" y="437" width="1.4278%" height="15" fill="rgb(231,145,46)" fg:x="40" fg:w="164"/><text x="0.5983%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (164 samples, 1.43%)</title><rect x="0.3483%" y="421" width="1.4278%" height="15" fill="rgb(251,118,11)" fg:x="40" fg:w="164"/><text x="0.5983%" y="431.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (164 samples, 1.43%)</title><rect x="0.3483%" y="405" width="1.4278%" height="15" fill="rgb(217,147,25)" fg:x="40" fg:w="164"/><text x="0.5983%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (164 samples, 1.43%)</title><rect x="0.3483%" y="389" width="1.4278%" height="15" fill="rgb(247,81,37)" fg:x="40" fg:w="164"/><text x="0.5983%" y="399.50"></text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}} (164 samples, 1.43%)</title><rect x="0.3483%" y="373" width="1.4278%" height="15" fill="rgb(209,12,38)" fg:x="40" fg:w="164"/><text x="0.5983%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (163 samples, 1.42%)</title><rect x="0.3570%" y="357" width="1.4191%" height="15" fill="rgb(227,1,9)" fg:x="41" fg:w="163"/><text x="0.6070%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (163 samples, 1.42%)</title><rect x="0.3570%" y="341" width="1.4191%" height="15" fill="rgb(248,47,43)" fg:x="41" fg:w="163"/><text x="0.6070%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (163 samples, 1.42%)</title><rect x="0.3570%" y="325" width="1.4191%" height="15" fill="rgb(221,10,30)" fg:x="41" fg:w="163"/><text x="0.6070%" y="335.50"></text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}}::{{closure}} (163 samples, 1.42%)</title><rect x="0.3570%" y="309" width="1.4191%" height="15" fill="rgb(210,229,1)" fg:x="41" fg:w="163"/><text x="0.6070%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (163 samples, 1.42%)</title><rect x="0.3570%" y="293" width="1.4191%" height="15" fill="rgb(222,148,37)" fg:x="41" fg:w="163"/><text x="0.6070%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (100 samples, 0.87%)</title><rect x="0.9055%" y="277" width="0.8706%" height="15" fill="rgb(234,67,33)" fg:x="104" fg:w="100"/><text x="1.1555%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (100 samples, 0.87%)</title><rect x="0.9055%" y="261" width="0.8706%" height="15" fill="rgb(247,98,35)" fg:x="104" fg:w="100"/><text x="1.1555%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (100 samples, 0.87%)</title><rect x="0.9055%" y="245" width="0.8706%" height="15" fill="rgb(247,138,52)" fg:x="104" fg:w="100"/><text x="1.1555%" y="255.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (100 samples, 0.87%)</title><rect x="0.9055%" y="229" width="0.8706%" height="15" fill="rgb(213,79,30)" fg:x="104" fg:w="100"/><text x="1.1555%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.87%)</title><rect x="0.9055%" y="213" width="0.8706%" height="15" fill="rgb(246,177,23)" fg:x="104" fg:w="100"/><text x="1.1555%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 0.87%)</title><rect x="0.9055%" y="197" width="0.8706%" height="15" fill="rgb(230,62,27)" fg:x="104" fg:w="100"/><text x="1.1555%" y="207.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (90 samples, 0.78%)</title><rect x="0.9925%" y="181" width="0.7836%" height="15" fill="rgb(216,154,8)" fg:x="114" fg:w="90"/><text x="1.2425%" y="191.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (4 samples, 0.03%)</title><rect x="1.7413%" y="165" width="0.0348%" height="15" fill="rgb(244,35,45)" fg:x="200" fg:w="4"/><text x="1.9913%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="1.7848%" y="165" width="0.0174%" height="15" fill="rgb(251,115,12)" fg:x="205" fg:w="2"/><text x="2.0348%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (14 samples, 0.12%)</title><rect x="1.7761%" y="181" width="0.1219%" height="15" fill="rgb(240,54,50)" fg:x="204" fg:w="14"/><text x="2.0261%" y="191.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (11 samples, 0.10%)</title><rect x="1.8022%" y="165" width="0.0958%" height="15" fill="rgb(233,84,52)" fg:x="207" fg:w="11"/><text x="2.0522%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (11 samples, 0.10%)</title><rect x="1.8022%" y="149" width="0.0958%" height="15" fill="rgb(207,117,47)" fg:x="207" fg:w="11"/><text x="2.0522%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.10%)</title><rect x="1.8022%" y="133" width="0.0958%" height="15" fill="rgb(249,43,39)" fg:x="207" fg:w="11"/><text x="2.0522%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="1.8980%" y="85" width="0.0261%" height="15" fill="rgb(209,38,44)" fg:x="218" fg:w="3"/><text x="2.1480%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (22 samples, 0.19%)</title><rect x="1.9241%" y="69" width="0.1915%" height="15" fill="rgb(236,212,23)" fg:x="221" fg:w="22"/><text x="2.1741%" y="79.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (22 samples, 0.19%)</title><rect x="1.9241%" y="53" width="0.1915%" height="15" fill="rgb(242,79,21)" fg:x="221" fg:w="22"/><text x="2.1741%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (22 samples, 0.19%)</title><rect x="1.9241%" y="37" width="0.1915%" height="15" fill="rgb(211,96,35)" fg:x="221" fg:w="22"/><text x="2.1741%" y="47.50"></text></g><g><title>fastiron::cycle_init (210 samples, 1.83%)</title><rect x="0.3134%" y="485" width="1.8283%" height="15" fill="rgb(253,215,40)" fg:x="36" fg:w="210"/><text x="0.5634%" y="495.50">f..</text></g><g><title>fastiron::simulation::population_control::source_now (42 samples, 0.37%)</title><rect x="1.7761%" y="469" width="0.3657%" height="15" fill="rgb(211,81,21)" fg:x="204" fg:w="42"/><text x="2.0261%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (42 samples, 0.37%)</title><rect x="1.7761%" y="453" width="0.3657%" height="15" fill="rgb(208,190,38)" fg:x="204" fg:w="42"/><text x="2.0261%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.37%)</title><rect x="1.7761%" y="437" width="0.3657%" height="15" fill="rgb(235,213,38)" fg:x="204" fg:w="42"/><text x="2.0261%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.37%)</title><rect x="1.7761%" y="421" width="0.3657%" height="15" fill="rgb(237,122,38)" fg:x="204" fg:w="42"/><text x="2.0261%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="405" width="0.3657%" height="15" fill="rgb(244,218,35)" fg:x="204" fg:w="42"/><text x="2.0261%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="389" width="0.3657%" height="15" fill="rgb(240,68,47)" fg:x="204" fg:w="42"/><text x="2.0261%" y="399.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="373" width="0.3657%" height="15" fill="rgb(210,16,53)" fg:x="204" fg:w="42"/><text x="2.0261%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (42 samples, 0.37%)</title><rect x="1.7761%" y="357" width="0.3657%" height="15" fill="rgb(235,124,12)" fg:x="204" fg:w="42"/><text x="2.0261%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.37%)</title><rect x="1.7761%" y="341" width="0.3657%" height="15" fill="rgb(224,169,11)" fg:x="204" fg:w="42"/><text x="2.0261%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.37%)</title><rect x="1.7761%" y="325" width="0.3657%" height="15" fill="rgb(250,166,2)" fg:x="204" fg:w="42"/><text x="2.0261%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="309" width="0.3657%" height="15" fill="rgb(242,216,29)" fg:x="204" fg:w="42"/><text x="2.0261%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="293" width="0.3657%" height="15" fill="rgb(230,116,27)" fg:x="204" fg:w="42"/><text x="2.0261%" y="303.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="277" width="0.3657%" height="15" fill="rgb(228,99,48)" fg:x="204" fg:w="42"/><text x="2.0261%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (42 samples, 0.37%)</title><rect x="1.7761%" y="261" width="0.3657%" height="15" fill="rgb(253,11,6)" fg:x="204" fg:w="42"/><text x="2.0261%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.37%)</title><rect x="1.7761%" y="245" width="0.3657%" height="15" fill="rgb(247,143,39)" fg:x="204" fg:w="42"/><text x="2.0261%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="229" width="0.3657%" height="15" fill="rgb(236,97,10)" fg:x="204" fg:w="42"/><text x="2.0261%" y="239.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}}::{{closure}} (42 samples, 0.37%)</title><rect x="1.7761%" y="213" width="0.3657%" height="15" fill="rgb(233,208,19)" fg:x="204" fg:w="42"/><text x="2.0261%" y="223.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (42 samples, 0.37%)</title><rect x="1.7761%" y="197" width="0.3657%" height="15" fill="rgb(216,164,2)" fg:x="204" fg:w="42"/><text x="2.0261%" y="207.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (28 samples, 0.24%)</title><rect x="1.8980%" y="181" width="0.2438%" height="15" fill="rgb(220,129,5)" fg:x="218" fg:w="28"/><text x="2.1480%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (28 samples, 0.24%)</title><rect x="1.8980%" y="165" width="0.2438%" height="15" fill="rgb(242,17,10)" fg:x="218" fg:w="28"/><text x="2.1480%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (28 samples, 0.24%)</title><rect x="1.8980%" y="149" width="0.2438%" height="15" fill="rgb(242,107,0)" fg:x="218" fg:w="28"/><text x="2.1480%" y="159.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (28 samples, 0.24%)</title><rect x="1.8980%" y="133" width="0.2438%" height="15" fill="rgb(251,28,31)" fg:x="218" fg:w="28"/><text x="2.1480%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.24%)</title><rect x="1.8980%" y="117" width="0.2438%" height="15" fill="rgb(233,223,10)" fg:x="218" fg:w="28"/><text x="2.1480%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.24%)</title><rect x="1.8980%" y="101" width="0.2438%" height="15" fill="rgb(215,21,27)" fg:x="218" fg:w="28"/><text x="2.1480%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (25 samples, 0.22%)</title><rect x="1.9241%" y="85" width="0.2177%" height="15" fill="rgb(232,23,21)" fg:x="221" fg:w="25"/><text x="2.1741%" y="95.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.03%)</title><rect x="2.1156%" y="69" width="0.0261%" height="15" fill="rgb(244,5,23)" fg:x="243" fg:w="3"/><text x="2.3656%" y="79.50"></text></g><g><title>fastiron::particles::mc_particle_buffer::MCParticleBuffer&lt;T&gt;::test_done_new (12 samples, 0.10%)</title><rect x="2.1504%" y="469" width="0.1045%" height="15" fill="rgb(226,81,46)" fg:x="247" fg:w="12"/><text x="2.4004%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size (12 samples, 0.10%)</title><rect x="2.1504%" y="453" width="0.1045%" height="15" fill="rgb(247,70,30)" fg:x="247" fg:w="12"/><text x="2.4004%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (12 samples, 0.10%)</title><rect x="2.1504%" y="437" width="0.1045%" height="15" fill="rgb(212,68,19)" fg:x="247" fg:w="12"/><text x="2.4004%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size::{{closure}} (12 samples, 0.10%)</title><rect x="2.1504%" y="421" width="0.1045%" height="15" fill="rgb(240,187,13)" fg:x="247" fg:w="12"/><text x="2.4004%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (12 samples, 0.10%)</title><rect x="2.1504%" y="405" width="0.1045%" height="15" fill="rgb(223,113,26)" fg:x="247" fg:w="12"/><text x="2.4004%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (12 samples, 0.10%)</title><rect x="2.1504%" y="389" width="0.1045%" height="15" fill="rgb(206,192,2)" fg:x="247" fg:w="12"/><text x="2.4004%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12 samples, 0.10%)</title><rect x="2.1504%" y="373" width="0.1045%" height="15" fill="rgb(241,108,4)" fg:x="247" fg:w="12"/><text x="2.4004%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12 samples, 0.10%)</title><rect x="2.1504%" y="357" width="0.1045%" height="15" fill="rgb(247,173,49)" fg:x="247" fg:w="12"/><text x="2.4004%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.10%)</title><rect x="2.1504%" y="341" width="0.1045%" height="15" fill="rgb(224,114,35)" fg:x="247" fg:w="12"/><text x="2.4004%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.10%)</title><rect x="2.1504%" y="325" width="0.1045%" height="15" fill="rgb(245,159,27)" fg:x="247" fg:w="12"/><text x="2.4004%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.10%)</title><rect x="2.1592%" y="309" width="0.0958%" height="15" fill="rgb(245,172,44)" fg:x="248" fg:w="11"/><text x="2.4092%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (11 samples, 0.10%)</title><rect x="2.1592%" y="293" width="0.0958%" height="15" fill="rgb(236,23,11)" fg:x="248" fg:w="11"/><text x="2.4092%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (11 samples, 0.10%)</title><rect x="2.1592%" y="277" width="0.0958%" height="15" fill="rgb(205,117,38)" fg:x="248" fg:w="11"/><text x="2.4092%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.10%)</title><rect x="2.1592%" y="261" width="0.0958%" height="15" fill="rgb(237,72,25)" fg:x="248" fg:w="11"/><text x="2.4092%" y="271.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (21 samples, 0.18%)</title><rect x="2.2549%" y="469" width="0.1828%" height="15" fill="rgb(244,70,9)" fg:x="259" fg:w="21"/><text x="2.5049%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (21 samples, 0.18%)</title><rect x="2.2549%" y="453" width="0.1828%" height="15" fill="rgb(217,125,39)" fg:x="259" fg:w="21"/><text x="2.5049%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (21 samples, 0.18%)</title><rect x="2.2549%" y="437" width="0.1828%" height="15" fill="rgb(235,36,10)" fg:x="259" fg:w="21"/><text x="2.5049%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (21 samples, 0.18%)</title><rect x="2.2549%" y="421" width="0.1828%" height="15" fill="rgb(251,123,47)" fg:x="259" fg:w="21"/><text x="2.5049%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.18%)</title><rect x="2.2549%" y="405" width="0.1828%" height="15" fill="rgb(221,13,13)" fg:x="259" fg:w="21"/><text x="2.5049%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.18%)</title><rect x="2.2549%" y="389" width="0.1828%" height="15" fill="rgb(238,131,9)" fg:x="259" fg:w="21"/><text x="2.5049%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 0.18%)</title><rect x="2.2549%" y="373" width="0.1828%" height="15" fill="rgb(211,50,8)" fg:x="259" fg:w="21"/><text x="2.5049%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (21 samples, 0.18%)</title><rect x="2.2549%" y="357" width="0.1828%" height="15" fill="rgb(245,182,24)" fg:x="259" fg:w="21"/><text x="2.5049%" y="367.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (21 samples, 0.18%)</title><rect x="2.2549%" y="341" width="0.1828%" height="15" fill="rgb(242,14,37)" fg:x="259" fg:w="21"/><text x="2.5049%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (21 samples, 0.18%)</title><rect x="2.2549%" y="325" width="0.1828%" height="15" fill="rgb(246,228,12)" fg:x="259" fg:w="21"/><text x="2.5049%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.23%)</title><rect x="2.4378%" y="309" width="0.2264%" height="15" fill="rgb(213,55,15)" fg:x="280" fg:w="26"/><text x="2.6878%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,368 samples, 11.91%)</title><rect x="2.6641%" y="309" width="11.9102%" height="15" fill="rgb(209,9,3)" fg:x="306" fg:w="1368"/><text x="2.9141%" y="319.50">&lt;core::option::Opt..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.11%)</title><rect x="14.5743%" y="309" width="0.1132%" height="15" fill="rgb(230,59,30)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.11%)</title><rect x="14.5743%" y="293" width="0.1132%" height="15" fill="rgb(209,121,21)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.11%)</title><rect x="14.5743%" y="277" width="0.1132%" height="15" fill="rgb(220,109,13)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.11%)</title><rect x="14.5743%" y="261" width="0.1132%" height="15" fill="rgb(232,18,1)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.11%)</title><rect x="14.5743%" y="245" width="0.1132%" height="15" fill="rgb(215,41,42)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="255.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.11%)</title><rect x="14.5743%" y="229" width="0.1132%" height="15" fill="rgb(224,123,36)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="239.50"></text></g><g><title>__rdl_alloc (13 samples, 0.11%)</title><rect x="14.5743%" y="213" width="0.1132%" height="15" fill="rgb(240,125,3)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.11%)</title><rect x="14.5743%" y="197" width="0.1132%" height="15" fill="rgb(205,98,50)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="207.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.11%)</title><rect x="14.5743%" y="181" width="0.1132%" height="15" fill="rgb(205,185,37)" fg:x="1674" fg:w="13"/><text x="14.8243%" y="191.50"></text></g><g><title>_int_malloc (12 samples, 0.10%)</title><rect x="14.5830%" y="165" width="0.1045%" height="15" fill="rgb(238,207,15)" fg:x="1675" fg:w="12"/><text x="14.8330%" y="175.50"></text></g><g><title>unlink_chunk (4 samples, 0.03%)</title><rect x="14.6526%" y="149" width="0.0348%" height="15" fill="rgb(213,199,42)" fg:x="1683" fg:w="4"/><text x="14.9026%" y="159.50"></text></g><g><title>&lt;fastiron::particles::particle_vault::ParticleVault&lt;T&gt; as core::clone::Clone&gt;::clone (1,547 samples, 13.47%)</title><rect x="2.4378%" y="389" width="13.4686%" height="15" fill="rgb(235,201,11)" fg:x="280" fg:w="1547"/><text x="2.6878%" y="399.50">&lt;fastiron::particles..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,547 samples, 13.47%)</title><rect x="2.4378%" y="373" width="13.4686%" height="15" fill="rgb(207,46,11)" fg:x="280" fg:w="1547"/><text x="2.6878%" y="383.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,547 samples, 13.47%)</title><rect x="2.4378%" y="357" width="13.4686%" height="15" fill="rgb(241,35,35)" fg:x="280" fg:w="1547"/><text x="2.6878%" y="367.50">alloc::slice::&lt;impl ..</text></g><g><title>alloc::slice::hack::to_vec (1,547 samples, 13.47%)</title><rect x="2.4378%" y="341" width="13.4686%" height="15" fill="rgb(243,32,47)" fg:x="280" fg:w="1547"/><text x="2.6878%" y="351.50">alloc::slice::hack::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,547 samples, 13.47%)</title><rect x="2.4378%" y="325" width="13.4686%" height="15" fill="rgb(247,202,23)" fg:x="280" fg:w="1547"/><text x="2.6878%" y="335.50">&lt;T as alloc::slice::..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (140 samples, 1.22%)</title><rect x="14.6874%" y="309" width="1.2189%" height="15" fill="rgb(219,102,11)" fg:x="1687" fg:w="140"/><text x="14.9374%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,548 samples, 13.48%)</title><rect x="2.4378%" y="453" width="13.4773%" height="15" fill="rgb(243,110,44)" fg:x="280" fg:w="1548"/><text x="2.6878%" y="463.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,548 samples, 13.48%)</title><rect x="2.4378%" y="437" width="13.4773%" height="15" fill="rgb(222,74,54)" fg:x="280" fg:w="1548"/><text x="2.6878%" y="447.50">alloc::slice::&lt;impl ..</text></g><g><title>alloc::slice::hack::to_vec (1,548 samples, 13.48%)</title><rect x="2.4378%" y="421" width="13.4773%" height="15" fill="rgb(216,99,12)" fg:x="280" fg:w="1548"/><text x="2.6878%" y="431.50">alloc::slice::hack::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,548 samples, 13.48%)</title><rect x="2.4378%" y="405" width="13.4773%" height="15" fill="rgb(226,22,26)" fg:x="280" fg:w="1548"/><text x="2.6878%" y="415.50">&lt;T as alloc::slice::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.06%)</title><rect x="15.9150%" y="357" width="0.0609%" height="15" fill="rgb(217,163,10)" fg:x="1828" fg:w="7"/><text x="16.1650%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.06%)</title><rect x="15.9150%" y="341" width="0.0609%" height="15" fill="rgb(213,25,53)" fg:x="1828" fg:w="7"/><text x="16.1650%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (34 samples, 0.30%)</title><rect x="15.9760%" y="357" width="0.2960%" height="15" fill="rgb(252,105,26)" fg:x="1835" fg:w="34"/><text x="16.2260%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (34 samples, 0.30%)</title><rect x="15.9760%" y="341" width="0.2960%" height="15" fill="rgb(220,39,43)" fg:x="1835" fg:w="34"/><text x="16.2260%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (976 samples, 8.50%)</title><rect x="15.9150%" y="373" width="8.4973%" height="15" fill="rgb(229,68,48)" fg:x="1828" fg:w="976"/><text x="16.1650%" y="383.50">alloc::vec::..</text></g><g><title>core::ptr::write (935 samples, 8.14%)</title><rect x="16.2720%" y="357" width="8.1403%" height="15" fill="rgb(252,8,32)" fg:x="1869" fg:w="935"/><text x="16.5220%" y="367.50">core::ptr::..</text></g><g><title>alloc::vec::from_elem (977 samples, 8.51%)</title><rect x="15.9150%" y="405" width="8.5060%" height="15" fill="rgb(223,20,43)" fg:x="1828" fg:w="977"/><text x="16.1650%" y="415.50">alloc::vec::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (977 samples, 8.51%)</title><rect x="15.9150%" y="389" width="8.5060%" height="15" fill="rgb(229,81,49)" fg:x="1828" fg:w="977"/><text x="16.1650%" y="399.50">&lt;T as alloc:..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (989 samples, 8.61%)</title><rect x="15.9150%" y="453" width="8.6105%" height="15" fill="rgb(236,28,36)" fg:x="1828" fg:w="989"/><text x="16.1650%" y="463.50">&lt;core::slice..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (989 samples, 8.61%)</title><rect x="15.9150%" y="437" width="8.6105%" height="15" fill="rgb(249,185,26)" fg:x="1828" fg:w="989"/><text x="16.1650%" y="447.50">fastiron::pa..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::clear (989 samples, 8.61%)</title><rect x="15.9150%" y="421" width="8.6105%" height="15" fill="rgb(249,174,33)" fg:x="1828" fg:w="989"/><text x="16.1650%" y="431.50">fastiron::pa..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (12 samples, 0.10%)</title><rect x="24.4210%" y="405" width="0.1045%" height="15" fill="rgb(233,201,37)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (12 samples, 0.10%)</title><rect x="24.4210%" y="389" width="0.1045%" height="15" fill="rgb(221,78,26)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.10%)</title><rect x="24.4210%" y="373" width="0.1045%" height="15" fill="rgb(250,127,30)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.10%)</title><rect x="24.4210%" y="357" width="0.1045%" height="15" fill="rgb(230,49,44)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.10%)</title><rect x="24.4210%" y="341" width="0.1045%" height="15" fill="rgb(229,67,23)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="351.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.10%)</title><rect x="24.4210%" y="325" width="0.1045%" height="15" fill="rgb(249,83,47)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.10%)</title><rect x="24.4210%" y="309" width="0.1045%" height="15" fill="rgb(215,43,3)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="319.50"></text></g><g><title>__GI___libc_free (12 samples, 0.10%)</title><rect x="24.4210%" y="293" width="0.1045%" height="15" fill="rgb(238,154,13)" fg:x="2805" fg:w="12"/><text x="24.6710%" y="303.50"></text></g><g><title>_int_free (7 samples, 0.06%)</title><rect x="24.4646%" y="277" width="0.0609%" height="15" fill="rgb(219,56,2)" fg:x="2810" fg:w="7"/><text x="24.7146%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.52%)</title><rect x="25.2307%" y="229" width="0.5224%" height="15" fill="rgb(233,0,4)" fg:x="2898" fg:w="60"/><text x="25.4807%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (622 samples, 5.42%)</title><rect x="24.6126%" y="245" width="5.4153%" height="15" fill="rgb(235,30,7)" fg:x="2827" fg:w="622"/><text x="24.8626%" y="255.50">&lt;core::..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (491 samples, 4.27%)</title><rect x="25.7531%" y="229" width="4.2748%" height="15" fill="rgb(250,79,13)" fg:x="2958" fg:w="491"/><text x="26.0031%" y="239.50">fasti..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (491 samples, 4.27%)</title><rect x="25.7531%" y="213" width="4.2748%" height="15" fill="rgb(211,146,34)" fg:x="2958" fg:w="491"/><text x="26.0031%" y="223.50">core:..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (491 samples, 4.27%)</title><rect x="25.7531%" y="197" width="4.2748%" height="15" fill="rgb(228,22,38)" fg:x="2958" fg:w="491"/><text x="26.0031%" y="207.50">core:..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 1.48%)</title><rect x="30.0279%" y="149" width="1.4801%" height="15" fill="rgb(235,168,5)" fg:x="3449" fg:w="170"/><text x="30.2779%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1,103 samples, 9.60%)</title><rect x="31.5079%" y="133" width="9.6030%" height="15" fill="rgb(221,155,16)" fg:x="3619" fg:w="1103"/><text x="31.7579%" y="143.50">&lt;core::iter::a..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (1,103 samples, 9.60%)</title><rect x="31.5079%" y="117" width="9.6030%" height="15" fill="rgb(215,215,53)" fg:x="3619" fg:w="1103"/><text x="31.7579%" y="127.50">fastiron::part..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,103 samples, 9.60%)</title><rect x="31.5079%" y="101" width="9.6030%" height="15" fill="rgb(223,4,10)" fg:x="3619" fg:w="1103"/><text x="31.7579%" y="111.50">core::option::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,014 samples, 17.53%)</title><rect x="24.5255%" y="293" width="17.5344%" height="15" fill="rgb(234,103,6)" fg:x="2817" fg:w="2014"/><text x="24.7755%" y="303.50">core::iter::traits::iterato..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}}::{{closure}} (2,014 samples, 17.53%)</title><rect x="24.5255%" y="277" width="17.5344%" height="15" fill="rgb(227,97,0)" fg:x="2817" fg:w="2014"/><text x="24.7755%" y="287.50">fastiron::particles::partic..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (2,013 samples, 17.53%)</title><rect x="24.5342%" y="261" width="17.5257%" height="15" fill="rgb(234,150,53)" fg:x="2818" fg:w="2013"/><text x="24.7842%" y="271.50">fastiron::particles::partic..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (1,382 samples, 12.03%)</title><rect x="30.0279%" y="245" width="12.0320%" height="15" fill="rgb(228,201,54)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="255.50">fastiron::particle..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,382 samples, 12.03%)</title><rect x="30.0279%" y="229" width="12.0320%" height="15" fill="rgb(222,22,37)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="239.50">&lt;core::iter::adapt..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,382 samples, 12.03%)</title><rect x="30.0279%" y="213" width="12.0320%" height="15" fill="rgb(237,53,32)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="223.50">core::iter::traits..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,382 samples, 12.03%)</title><rect x="30.0279%" y="197" width="12.0320%" height="15" fill="rgb(233,25,53)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="207.50">&lt;usize as core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,382 samples, 12.03%)</title><rect x="30.0279%" y="181" width="12.0320%" height="15" fill="rgb(210,40,34)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="191.50">&lt;core::iter::adapt..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,382 samples, 12.03%)</title><rect x="30.0279%" y="165" width="12.0320%" height="15" fill="rgb(241,220,44)" fg:x="3449" fg:w="1382"/><text x="30.2779%" y="175.50">core::iter::traits..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,212 samples, 10.55%)</title><rect x="31.5079%" y="149" width="10.5520%" height="15" fill="rgb(235,28,35)" fg:x="3619" fg:w="1212"/><text x="31.7579%" y="159.50">core::iter::ada..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (109 samples, 0.95%)</title><rect x="41.1109%" y="133" width="0.9490%" height="15" fill="rgb(210,56,17)" fg:x="4722" fg:w="109"/><text x="41.3609%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,023 samples, 17.61%)</title><rect x="24.5255%" y="389" width="17.6127%" height="15" fill="rgb(224,130,29)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="399.50">core::iter::traits::iterato..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (2,023 samples, 17.61%)</title><rect x="24.5255%" y="373" width="17.6127%" height="15" fill="rgb(235,212,8)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="383.50">fastiron::particles::partic..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,023 samples, 17.61%)</title><rect x="24.5255%" y="357" width="17.6127%" height="15" fill="rgb(223,33,50)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="367.50">core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,023 samples, 17.61%)</title><rect x="24.5255%" y="341" width="17.6127%" height="15" fill="rgb(219,149,13)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="351.50">&lt;core::iter::adapters::filt..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,023 samples, 17.61%)</title><rect x="24.5255%" y="325" width="17.6127%" height="15" fill="rgb(250,156,29)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="335.50">core::iter::traits::iterato..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2,023 samples, 17.61%)</title><rect x="24.5255%" y="309" width="17.6127%" height="15" fill="rgb(216,193,19)" fg:x="2817" fg:w="2023"/><text x="24.7755%" y="319.50">core::iter::adapters::filte..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}}::{{closure}} (9 samples, 0.08%)</title><rect x="42.0599%" y="293" width="0.0784%" height="15" fill="rgb(216,135,14)" fg:x="4831" fg:w="9"/><text x="42.3099%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.08%)</title><rect x="42.0599%" y="277" width="0.0784%" height="15" fill="rgb(241,47,5)" fg:x="4831" fg:w="9"/><text x="42.3099%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.10%)</title><rect x="42.1383%" y="277" width="0.0958%" height="15" fill="rgb(233,42,35)" fg:x="4840" fg:w="11"/><text x="42.3883%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (435 samples, 3.79%)</title><rect x="42.2340%" y="261" width="3.7872%" height="15" fill="rgb(231,13,6)" fg:x="4851" fg:w="435"/><text x="42.4840%" y="271.50">&lt;cor..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (435 samples, 3.79%)</title><rect x="42.2340%" y="245" width="3.7872%" height="15" fill="rgb(207,181,40)" fg:x="4851" fg:w="435"/><text x="42.4840%" y="255.50">fast..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (435 samples, 3.79%)</title><rect x="42.2340%" y="229" width="3.7872%" height="15" fill="rgb(254,173,49)" fg:x="4851" fg:w="435"/><text x="42.4840%" y="239.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,476 samples, 21.56%)</title><rect x="24.5255%" y="453" width="21.5567%" height="15" fill="rgb(221,1,38)" fg:x="2817" fg:w="2476"/><text x="24.7755%" y="463.50">core::iter::traits::iterator::Iter..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,476 samples, 21.56%)</title><rect x="24.5255%" y="437" width="21.5567%" height="15" fill="rgb(206,124,46)" fg:x="2817" fg:w="2476"/><text x="24.7755%" y="447.50">&lt;core::iter::adapters::filter::Fil..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,476 samples, 21.56%)</title><rect x="24.5255%" y="421" width="21.5567%" height="15" fill="rgb(249,21,11)" fg:x="2817" fg:w="2476"/><text x="24.7755%" y="431.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2,476 samples, 21.56%)</title><rect x="24.5255%" y="405" width="21.5567%" height="15" fill="rgb(222,201,40)" fg:x="2817" fg:w="2476"/><text x="24.7755%" y="415.50">core::iter::adapters::filter::filt..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (453 samples, 3.94%)</title><rect x="42.1383%" y="389" width="3.9439%" height="15" fill="rgb(235,61,29)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="399.50">fast..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (453 samples, 3.94%)</title><rect x="42.1383%" y="373" width="3.9439%" height="15" fill="rgb(219,207,3)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="383.50">fast..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (453 samples, 3.94%)</title><rect x="42.1383%" y="357" width="3.9439%" height="15" fill="rgb(222,56,46)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="367.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (453 samples, 3.94%)</title><rect x="42.1383%" y="341" width="3.9439%" height="15" fill="rgb(239,76,54)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="351.50">core..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (453 samples, 3.94%)</title><rect x="42.1383%" y="325" width="3.9439%" height="15" fill="rgb(231,124,27)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="335.50">&lt;usi..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (453 samples, 3.94%)</title><rect x="42.1383%" y="309" width="3.9439%" height="15" fill="rgb(249,195,6)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="319.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (453 samples, 3.94%)</title><rect x="42.1383%" y="293" width="3.9439%" height="15" fill="rgb(237,174,47)" fg:x="4840" fg:w="453"/><text x="42.3883%" y="303.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (442 samples, 3.85%)</title><rect x="42.2340%" y="277" width="3.8482%" height="15" fill="rgb(206,201,31)" fg:x="4851" fg:w="442"/><text x="42.4840%" y="287.50">core..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.06%)</title><rect x="46.0212%" y="261" width="0.0609%" height="15" fill="rgb(231,57,52)" fg:x="5286" fg:w="7"/><text x="46.2712%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="46.0822%" y="453" width="0.0261%" height="15" fill="rgb(248,177,22)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="46.0822%" y="437" width="0.0261%" height="15" fill="rgb(215,211,37)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;]&gt; (3 samples, 0.03%)</title><rect x="46.0822%" y="421" width="0.0261%" height="15" fill="rgb(241,128,51)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;&gt; (3 samples, 0.03%)</title><rect x="46.0822%" y="405" width="0.0261%" height="15" fill="rgb(227,165,31)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="46.0822%" y="389" width="0.0261%" height="15" fill="rgb(228,167,24)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="46.0822%" y="373" width="0.0261%" height="15" fill="rgb(228,143,12)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="46.0822%" y="357" width="0.0261%" height="15" fill="rgb(249,149,8)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="46.0822%" y="341" width="0.0261%" height="15" fill="rgb(243,35,44)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="46.0822%" y="325" width="0.0261%" height="15" fill="rgb(246,89,9)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="335.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.03%)</title><rect x="46.0822%" y="309" width="0.0261%" height="15" fill="rgb(233,213,13)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.03%)</title><rect x="46.0822%" y="293" width="0.0261%" height="15" fill="rgb(233,141,41)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="303.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="46.0822%" y="277" width="0.0261%" height="15" fill="rgb(239,167,4)" fg:x="5293" fg:w="3"/><text x="46.3322%" y="287.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.0909%" y="261" width="0.0174%" height="15" fill="rgb(209,217,16)" fg:x="5294" fg:w="2"/><text x="46.3409%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.71%)</title><rect x="46.1083%" y="309" width="0.7052%" height="15" fill="rgb(219,88,35)" fg:x="5296" fg:w="81"/><text x="46.3583%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (2,621 samples, 22.82%)</title><rect x="46.8135%" y="293" width="22.8191%" height="15" fill="rgb(220,193,23)" fg:x="5377" fg:w="2621"/><text x="47.0635%" y="303.50">&lt;core::iter::adapters::filter::Filte..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (2,621 samples, 22.82%)</title><rect x="46.8135%" y="277" width="22.8191%" height="15" fill="rgb(230,90,52)" fg:x="5377" fg:w="2621"/><text x="47.0635%" y="287.50">fastiron::particles::particle_vault:..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,621 samples, 22.82%)</title><rect x="46.8135%" y="261" width="22.8191%" height="15" fill="rgb(252,106,19)" fg:x="5377" fg:w="2621"/><text x="47.0635%" y="271.50">core::option::Option&lt;T&gt;::is_some</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults (7,800 samples, 67.91%)</title><rect x="2.4378%" y="469" width="67.9088%" height="15" fill="rgb(206,74,20)" fg:x="280" fg:w="7800"/><text x="2.6878%" y="479.50">fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size (2,784 samples, 24.24%)</title><rect x="46.1083%" y="453" width="24.2382%" height="15" fill="rgb(230,138,44)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="463.50">fastiron::particles::particle_vault_con..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2,784 samples, 24.24%)</title><rect x="46.1083%" y="437" width="24.2382%" height="15" fill="rgb(235,182,43)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="447.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::it..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size::{{closure}} (2,784 samples, 24.24%)</title><rect x="46.1083%" y="421" width="24.2382%" height="15" fill="rgb(242,16,51)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="431.50">fastiron::particles::particle_vault_con..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (2,784 samples, 24.24%)</title><rect x="46.1083%" y="405" width="24.2382%" height="15" fill="rgb(248,9,4)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="415.50">fastiron::particles::particle_vault::Pa..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2,784 samples, 24.24%)</title><rect x="46.1083%" y="389" width="24.2382%" height="15" fill="rgb(210,31,22)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="399.50">&lt;core::iter::adapters::filter::Filter&lt;I..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,784 samples, 24.24%)</title><rect x="46.1083%" y="373" width="24.2382%" height="15" fill="rgb(239,54,39)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="383.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,784 samples, 24.24%)</title><rect x="46.1083%" y="357" width="24.2382%" height="15" fill="rgb(230,99,41)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="367.50">&lt;usize as core::iter::traits::accum::Su..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,784 samples, 24.24%)</title><rect x="46.1083%" y="341" width="24.2382%" height="15" fill="rgb(253,106,12)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="351.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,784 samples, 24.24%)</title><rect x="46.1083%" y="325" width="24.2382%" height="15" fill="rgb(213,46,41)" fg:x="5296" fg:w="2784"/><text x="46.3583%" y="335.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,703 samples, 23.53%)</title><rect x="46.8135%" y="309" width="23.5330%" height="15" fill="rgb(215,133,35)" fg:x="5377" fg:w="2703"/><text x="47.0635%" y="319.50">core::iter::adapters::map::map_fold::..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (82 samples, 0.71%)</title><rect x="69.6326%" y="293" width="0.7139%" height="15" fill="rgb(213,28,5)" fg:x="7998" fg:w="82"/><text x="69.8826%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (16 samples, 0.14%)</title><rect x="70.3465%" y="341" width="0.1393%" height="15" fill="rgb(215,77,49)" fg:x="8080" fg:w="16"/><text x="70.5965%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (16 samples, 0.14%)</title><rect x="70.3465%" y="325" width="0.1393%" height="15" fill="rgb(248,100,22)" fg:x="8080" fg:w="16"/><text x="70.5965%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (16 samples, 0.14%)</title><rect x="70.3465%" y="309" width="0.1393%" height="15" fill="rgb(208,67,9)" fg:x="8080" fg:w="16"/><text x="70.5965%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processed (17 samples, 0.15%)</title><rect x="70.3465%" y="469" width="0.1480%" height="15" fill="rgb(219,133,21)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (17 samples, 0.15%)</title><rect x="70.3465%" y="453" width="0.1480%" height="15" fill="rgb(246,46,29)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (17 samples, 0.15%)</title><rect x="70.3465%" y="437" width="0.1480%" height="15" fill="rgb(246,185,52)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (17 samples, 0.15%)</title><rect x="70.3465%" y="421" width="0.1480%" height="15" fill="rgb(252,136,11)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (17 samples, 0.15%)</title><rect x="70.3465%" y="405" width="0.1480%" height="15" fill="rgb(219,138,53)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.15%)</title><rect x="70.3465%" y="389" width="0.1480%" height="15" fill="rgb(211,51,23)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.15%)</title><rect x="70.3465%" y="373" width="0.1480%" height="15" fill="rgb(247,221,28)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 0.15%)</title><rect x="70.3465%" y="357" width="0.1480%" height="15" fill="rgb(251,222,45)" fg:x="8080" fg:w="17"/><text x="70.5965%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (9 samples, 0.08%)</title><rect x="70.5032%" y="341" width="0.0784%" height="15" fill="rgb(217,162,53)" fg:x="8098" fg:w="9"/><text x="70.7532%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (9 samples, 0.08%)</title><rect x="70.5032%" y="325" width="0.0784%" height="15" fill="rgb(229,93,14)" fg:x="8098" fg:w="9"/><text x="70.7532%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.08%)</title><rect x="70.5032%" y="309" width="0.0784%" height="15" fill="rgb(209,67,49)" fg:x="8098" fg:w="9"/><text x="70.7532%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processing (12 samples, 0.10%)</title><rect x="70.4945%" y="469" width="0.1045%" height="15" fill="rgb(213,87,29)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (12 samples, 0.10%)</title><rect x="70.4945%" y="453" width="0.1045%" height="15" fill="rgb(205,151,52)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (12 samples, 0.10%)</title><rect x="70.4945%" y="437" width="0.1045%" height="15" fill="rgb(253,215,39)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12 samples, 0.10%)</title><rect x="70.4945%" y="421" width="0.1045%" height="15" fill="rgb(221,220,41)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12 samples, 0.10%)</title><rect x="70.4945%" y="405" width="0.1045%" height="15" fill="rgb(218,133,21)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.10%)</title><rect x="70.4945%" y="389" width="0.1045%" height="15" fill="rgb(221,193,43)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.10%)</title><rect x="70.4945%" y="373" width="0.1045%" height="15" fill="rgb(240,128,52)" fg:x="8097" fg:w="12"/><text x="70.7445%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.10%)</title><rect x="70.5032%" y="357" width="0.0958%" height="15" fill="rgb(253,114,12)" fg:x="8098" fg:w="11"/><text x="70.7532%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="70.5816%" y="341" width="0.0174%" height="15" fill="rgb(215,223,47)" fg:x="8107" fg:w="2"/><text x="70.8316%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (8 samples, 0.07%)</title><rect x="70.6512%" y="453" width="0.0697%" height="15" fill="rgb(248,225,23)" fg:x="8115" fg:w="8"/><text x="70.9012%" y="463.50"></text></g><g><title>fastiron::particles::load_particle::load_particle (7 samples, 0.06%)</title><rect x="70.7209%" y="453" width="0.0609%" height="15" fill="rgb(250,108,0)" fg:x="8123" fg:w="7"/><text x="70.9709%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::get_base_particle (7 samples, 0.06%)</title><rect x="70.7209%" y="437" width="0.0609%" height="15" fill="rgb(228,208,7)" fg:x="8123" fg:w="7"/><text x="70.9709%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.06%)</title><rect x="70.7209%" y="421" width="0.0609%" height="15" fill="rgb(244,45,10)" fg:x="8123" fg:w="7"/><text x="70.9709%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (12 samples, 0.10%)</title><rect x="70.7905%" y="437" width="0.1045%" height="15" fill="rgb(207,125,25)" fg:x="8131" fg:w="12"/><text x="71.0405%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed::{{closure}} (9 samples, 0.08%)</title><rect x="70.8166%" y="421" width="0.0784%" height="15" fill="rgb(210,195,18)" fg:x="8134" fg:w="9"/><text x="71.0666%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (9 samples, 0.08%)</title><rect x="70.8166%" y="405" width="0.0784%" height="15" fill="rgb(249,80,12)" fg:x="8134" fg:w="9"/><text x="71.0666%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.08%)</title><rect x="70.8166%" y="389" width="0.0784%" height="15" fill="rgb(221,65,9)" fg:x="8134" fg:w="9"/><text x="71.0666%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="70.8950%" y="341" width="0.0174%" height="15" fill="rgb(235,49,36)" fg:x="8143" fg:w="2"/><text x="71.1450%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (54 samples, 0.47%)</title><rect x="70.9124%" y="325" width="0.4701%" height="15" fill="rgb(225,32,20)" fg:x="8145" fg:w="54"/><text x="71.1624%" y="335.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (54 samples, 0.47%)</title><rect x="70.9124%" y="309" width="0.4701%" height="15" fill="rgb(215,141,46)" fg:x="8145" fg:w="54"/><text x="71.1624%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (54 samples, 0.47%)</title><rect x="70.9124%" y="293" width="0.4701%" height="15" fill="rgb(250,160,47)" fg:x="8145" fg:w="54"/><text x="71.1624%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed (73 samples, 0.64%)</title><rect x="70.7905%" y="453" width="0.6356%" height="15" fill="rgb(216,222,40)" fg:x="8131" fg:w="73"/><text x="71.0405%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (61 samples, 0.53%)</title><rect x="70.8950%" y="437" width="0.5311%" height="15" fill="rgb(234,217,39)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (61 samples, 0.53%)</title><rect x="70.8950%" y="421" width="0.5311%" height="15" fill="rgb(207,178,40)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (61 samples, 0.53%)</title><rect x="70.8950%" y="405" width="0.5311%" height="15" fill="rgb(221,136,13)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (61 samples, 0.53%)</title><rect x="70.8950%" y="389" width="0.5311%" height="15" fill="rgb(249,199,10)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.53%)</title><rect x="70.8950%" y="373" width="0.5311%" height="15" fill="rgb(249,222,13)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (61 samples, 0.53%)</title><rect x="70.8950%" y="357" width="0.5311%" height="15" fill="rgb(244,185,38)" fg:x="8143" fg:w="61"/><text x="71.1450%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (59 samples, 0.51%)</title><rect x="70.9124%" y="341" width="0.5137%" height="15" fill="rgb(236,202,9)" fg:x="8145" fg:w="59"/><text x="71.1624%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (5 samples, 0.04%)</title><rect x="71.3826%" y="325" width="0.0435%" height="15" fill="rgb(250,229,37)" fg:x="8199" fg:w="5"/><text x="71.6326%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.04%)</title><rect x="71.8788%" y="421" width="0.0435%" height="15" fill="rgb(206,174,23)" fg:x="8256" fg:w="5"/><text x="72.1288%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.04%)</title><rect x="71.8788%" y="405" width="0.0435%" height="15" fill="rgb(211,33,43)" fg:x="8256" fg:w="5"/><text x="72.1288%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.04%)</title><rect x="71.8788%" y="389" width="0.0435%" height="15" fill="rgb(245,58,50)" fg:x="8256" fg:w="5"/><text x="72.1288%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (95 samples, 0.83%)</title><rect x="71.9310%" y="421" width="0.8271%" height="15" fill="rgb(244,68,36)" fg:x="8262" fg:w="95"/><text x="72.1810%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_sign_negative (85 samples, 0.74%)</title><rect x="72.7581%" y="421" width="0.7400%" height="15" fill="rgb(232,229,15)" fg:x="8357" fg:w="85"/><text x="73.0081%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_sign_negative (85 samples, 0.74%)</title><rect x="72.7581%" y="405" width="0.7400%" height="15" fill="rgb(254,30,23)" fg:x="8357" fg:w="85"/><text x="73.0081%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (30 samples, 0.26%)</title><rect x="73.5069%" y="421" width="0.2612%" height="15" fill="rgb(235,160,14)" fg:x="8443" fg:w="30"/><text x="73.7569%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (30 samples, 0.26%)</title><rect x="73.5069%" y="405" width="0.2612%" height="15" fill="rgb(212,155,44)" fg:x="8443" fg:w="30"/><text x="73.7569%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (29 samples, 0.25%)</title><rect x="73.5156%" y="389" width="0.2525%" height="15" fill="rgb(226,2,50)" fg:x="8444" fg:w="29"/><text x="73.7656%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (11 samples, 0.10%)</title><rect x="73.7681%" y="421" width="0.0958%" height="15" fill="rgb(234,177,6)" fg:x="8473" fg:w="11"/><text x="74.0181%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (11 samples, 0.10%)</title><rect x="73.7681%" y="405" width="0.0958%" height="15" fill="rgb(217,24,9)" fg:x="8473" fg:w="11"/><text x="74.0181%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.10%)</title><rect x="73.7681%" y="389" width="0.0958%" height="15" fill="rgb(220,13,46)" fg:x="8473" fg:w="11"/><text x="74.0181%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.09%)</title><rect x="73.7768%" y="373" width="0.0871%" height="15" fill="rgb(239,221,27)" fg:x="8474" fg:w="10"/><text x="74.0268%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.09%)</title><rect x="73.7768%" y="357" width="0.0871%" height="15" fill="rgb(222,198,25)" fg:x="8474" fg:w="10"/><text x="74.0268%" y="367.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.09%)</title><rect x="73.7768%" y="341" width="0.0871%" height="15" fill="rgb(211,99,13)" fg:x="8474" fg:w="10"/><text x="74.0268%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.09%)</title><rect x="73.7768%" y="325" width="0.0871%" height="15" fill="rgb(232,111,31)" fg:x="8474" fg:w="10"/><text x="74.0268%" y="335.50"></text></g><g><title>__GI___libc_free (10 samples, 0.09%)</title><rect x="73.7768%" y="309" width="0.0871%" height="15" fill="rgb(245,82,37)" fg:x="8474" fg:w="10"/><text x="74.0268%" y="319.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="73.8290%" y="293" width="0.0348%" height="15" fill="rgb(227,149,46)" fg:x="8480" fg:w="4"/><text x="74.0790%" y="303.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="73.8377%" y="277" width="0.0261%" height="15" fill="rgb(218,36,50)" fg:x="8481" fg:w="3"/><text x="74.0877%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (29 samples, 0.25%)</title><rect x="73.8638%" y="421" width="0.2525%" height="15" fill="rgb(226,80,48)" fg:x="8484" fg:w="29"/><text x="74.1138%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (2 samples, 0.02%)</title><rect x="74.0989%" y="405" width="0.0174%" height="15" fill="rgb(238,224,15)" fg:x="8511" fg:w="2"/><text x="74.3489%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.04%)</title><rect x="74.1511%" y="405" width="0.0435%" height="15" fill="rgb(241,136,10)" fg:x="8517" fg:w="5"/><text x="74.4011%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.04%)</title><rect x="74.1511%" y="389" width="0.0435%" height="15" fill="rgb(208,32,45)" fg:x="8517" fg:w="5"/><text x="74.4011%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.04%)</title><rect x="74.1511%" y="373" width="0.0435%" height="15" fill="rgb(207,135,9)" fg:x="8517" fg:w="5"/><text x="74.4011%" y="383.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_number_reactions (15 samples, 0.13%)</title><rect x="74.1163%" y="421" width="0.1306%" height="15" fill="rgb(206,86,44)" fg:x="8513" fg:w="15"/><text x="74.3663%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (6 samples, 0.05%)</title><rect x="74.1947%" y="405" width="0.0522%" height="15" fill="rgb(245,177,15)" fg:x="8522" fg:w="6"/><text x="74.4447%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="74.2730%" y="405" width="0.0174%" height="15" fill="rgb(206,64,50)" fg:x="8531" fg:w="2"/><text x="74.5230%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.29%)</title><rect x="74.3079%" y="357" width="0.2873%" height="15" fill="rgb(234,36,40)" fg:x="8535" fg:w="33"/><text x="74.5579%" y="367.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.24%)</title><rect x="74.3601%" y="341" width="0.2351%" height="15" fill="rgb(213,64,8)" fg:x="8541" fg:w="27"/><text x="74.6101%" y="351.50"></text></g><g><title>tcache_get (11 samples, 0.10%)</title><rect x="74.4994%" y="325" width="0.0958%" height="15" fill="rgb(210,75,36)" fg:x="8557" fg:w="11"/><text x="74.7494%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (37 samples, 0.32%)</title><rect x="74.2991%" y="389" width="0.3221%" height="15" fill="rgb(229,88,21)" fg:x="8534" fg:w="37"/><text x="74.5491%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.32%)</title><rect x="74.2991%" y="373" width="0.3221%" height="15" fill="rgb(252,204,47)" fg:x="8534" fg:w="37"/><text x="74.5491%" y="383.50"></text></g><g><title>core::cmp::max (3 samples, 0.03%)</title><rect x="74.5952%" y="357" width="0.0261%" height="15" fill="rgb(208,77,27)" fg:x="8568" fg:w="3"/><text x="74.8452%" y="367.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.03%)</title><rect x="74.5952%" y="341" width="0.0261%" height="15" fill="rgb(221,76,26)" fg:x="8568" fg:w="3"/><text x="74.8452%" y="351.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.03%)</title><rect x="74.5952%" y="325" width="0.0261%" height="15" fill="rgb(225,139,18)" fg:x="8568" fg:w="3"/><text x="74.8452%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.33%)</title><rect x="74.2991%" y="405" width="0.3308%" height="15" fill="rgb(230,137,11)" fg:x="8534" fg:w="38"/><text x="74.5491%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="74.6300%" y="405" width="0.0261%" height="15" fill="rgb(212,28,1)" fg:x="8572" fg:w="3"/><text x="74.8800%" y="415.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.03%)</title><rect x="74.6561%" y="405" width="0.0261%" height="15" fill="rgb(248,164,17)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="415.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.03%)</title><rect x="74.6561%" y="389" width="0.0261%" height="15" fill="rgb(222,171,42)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3 samples, 0.03%)</title><rect x="74.6561%" y="373" width="0.0261%" height="15" fill="rgb(243,84,45)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="74.6561%" y="357" width="0.0261%" height="15" fill="rgb(252,49,23)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3 samples, 0.03%)</title><rect x="74.6561%" y="341" width="0.0261%" height="15" fill="rgb(215,19,7)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="74.6561%" y="325" width="0.0261%" height="15" fill="rgb(238,81,41)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="335.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.03%)</title><rect x="74.6561%" y="309" width="0.0261%" height="15" fill="rgb(210,199,37)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="319.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.03%)</title><rect x="74.6561%" y="293" width="0.0261%" height="15" fill="rgb(244,192,49)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.03%)</title><rect x="74.6561%" y="277" width="0.0261%" height="15" fill="rgb(226,211,11)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="287.50"></text></g><g><title>__libc_calloc (3 samples, 0.03%)</title><rect x="74.6561%" y="261" width="0.0261%" height="15" fill="rgb(236,162,54)" fg:x="8575" fg:w="3"/><text x="74.9061%" y="271.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (55 samples, 0.48%)</title><rect x="74.2469%" y="421" width="0.4788%" height="15" fill="rgb(220,229,9)" fg:x="8528" fg:w="55"/><text x="74.4969%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (4 samples, 0.03%)</title><rect x="74.6909%" y="405" width="0.0348%" height="15" fill="rgb(250,87,22)" fg:x="8579" fg:w="4"/><text x="74.9409%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.30%)</title><rect x="75.1611%" y="373" width="0.3047%" height="15" fill="rgb(239,43,17)" fg:x="8633" fg:w="35"/><text x="75.4111%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (263 samples, 2.29%)</title><rect x="74.7693%" y="389" width="2.2897%" height="15" fill="rgb(231,177,25)" fg:x="8588" fg:w="263"/><text x="75.0193%" y="399.50">&lt;..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::push_particle::{{closure}} (183 samples, 1.59%)</title><rect x="75.4658%" y="373" width="1.5932%" height="15" fill="rgb(219,179,1)" fg:x="8668" fg:w="183"/><text x="75.7158%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (183 samples, 1.59%)</title><rect x="75.4658%" y="357" width="1.5932%" height="15" fill="rgb(238,219,53)" fg:x="8668" fg:w="183"/><text x="75.7158%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (183 samples, 1.59%)</title><rect x="75.4658%" y="341" width="1.5932%" height="15" fill="rgb(232,167,36)" fg:x="8668" fg:w="183"/><text x="75.7158%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::push_particle (269 samples, 2.34%)</title><rect x="74.7345%" y="405" width="2.3420%" height="15" fill="rgb(244,19,51)" fg:x="8584" fg:w="269"/><text x="74.9845%" y="415.50">f..</text></g><g><title>fastiron::particles::mc_base_particle::MCBaseParticle&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="77.0590%" y="389" width="0.0174%" height="15" fill="rgb(224,6,22)" fg:x="8851" fg:w="2"/><text x="77.3090%" y="399.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_extra_particle (273 samples, 2.38%)</title><rect x="74.7258%" y="421" width="2.3768%" height="15" fill="rgb(224,145,5)" fg:x="8583" fg:w="273"/><text x="74.9758%" y="431.50">fa..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::reserve (3 samples, 0.03%)</title><rect x="77.0764%" y="405" width="0.0261%" height="15" fill="rgb(234,130,49)" fg:x="8853" fg:w="3"/><text x="77.3264%" y="415.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.03%)</title><rect x="77.0764%" y="389" width="0.0261%" height="15" fill="rgb(254,6,2)" fg:x="8853" fg:w="3"/><text x="77.3264%" y="399.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.03%)</title><rect x="77.0764%" y="373" width="0.0261%" height="15" fill="rgb(208,96,46)" fg:x="8853" fg:w="3"/><text x="77.3264%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.03%)</title><rect x="77.0764%" y="357" width="0.0261%" height="15" fill="rgb(239,3,39)" fg:x="8853" fg:w="3"/><text x="77.3264%" y="367.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="77.0764%" y="341" width="0.0261%" height="15" fill="rgb(233,210,1)" fg:x="8853" fg:w="3"/><text x="77.3264%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (5 samples, 0.04%)</title><rect x="77.1026%" y="405" width="0.0435%" height="15" fill="rgb(244,137,37)" fg:x="8856" fg:w="5"/><text x="77.3526%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="77.1461%" y="405" width="0.0174%" height="15" fill="rgb(240,136,2)" fg:x="8861" fg:w="2"/><text x="77.3961%" y="415.50"></text></g><g><title>do_cos (10 samples, 0.09%)</title><rect x="77.2854%" y="357" width="0.0871%" height="15" fill="rgb(239,18,37)" fg:x="8877" fg:w="10"/><text x="77.5354%" y="367.50"></text></g><g><title>do_sin (18 samples, 0.16%)</title><rect x="77.3725%" y="357" width="0.1567%" height="15" fill="rgb(218,185,22)" fg:x="8887" fg:w="18"/><text x="77.6225%" y="367.50"></text></g><g><title>libc_feholdsetround_sse_ctx (2 samples, 0.02%)</title><rect x="77.5292%" y="357" width="0.0174%" height="15" fill="rgb(225,218,4)" fg:x="8905" fg:w="2"/><text x="77.7792%" y="367.50"></text></g><g><title>libc_feresetround_sse_ctx (3 samples, 0.03%)</title><rect x="77.5466%" y="357" width="0.0261%" height="15" fill="rgb(230,182,32)" fg:x="8907" fg:w="3"/><text x="77.7966%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (53 samples, 0.46%)</title><rect x="77.1635%" y="405" width="0.4614%" height="15" fill="rgb(242,56,43)" fg:x="8863" fg:w="53"/><text x="77.4135%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (53 samples, 0.46%)</title><rect x="77.1635%" y="389" width="0.4614%" height="15" fill="rgb(233,99,24)" fg:x="8863" fg:w="53"/><text x="77.4135%" y="399.50"></text></g><g><title>__sincos (52 samples, 0.45%)</title><rect x="77.1722%" y="373" width="0.4527%" height="15" fill="rgb(234,209,42)" fg:x="8864" fg:w="52"/><text x="77.4222%" y="383.50"></text></g><g><title>reduce_sincos (6 samples, 0.05%)</title><rect x="77.5727%" y="357" width="0.0522%" height="15" fill="rgb(227,7,12)" fg:x="8910" fg:w="6"/><text x="77.8227%" y="367.50"></text></g><g><title>__ieee754_log_fma (19 samples, 0.17%)</title><rect x="77.6249%" y="341" width="0.1654%" height="15" fill="rgb(245,203,43)" fg:x="8916" fg:w="19"/><text x="77.8749%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::ln (21 samples, 0.18%)</title><rect x="77.6249%" y="405" width="0.1828%" height="15" fill="rgb(238,205,33)" fg:x="8916" fg:w="21"/><text x="77.8749%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (21 samples, 0.18%)</title><rect x="77.6249%" y="389" width="0.1828%" height="15" fill="rgb(231,56,7)" fg:x="8916" fg:w="21"/><text x="77.8749%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (21 samples, 0.18%)</title><rect x="77.6249%" y="373" width="0.1828%" height="15" fill="rgb(244,186,29)" fg:x="8916" fg:w="21"/><text x="77.8749%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (21 samples, 0.18%)</title><rect x="77.6249%" y="357" width="0.1828%" height="15" fill="rgb(234,111,31)" fg:x="8916" fg:w="21"/><text x="77.8749%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (2 samples, 0.02%)</title><rect x="77.8078%" y="405" width="0.0174%" height="15" fill="rgb(241,149,10)" fg:x="8937" fg:w="2"/><text x="78.0578%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2 samples, 0.02%)</title><rect x="77.8078%" y="389" width="0.0174%" height="15" fill="rgb(249,206,44)" fg:x="8937" fg:w="2"/><text x="78.0578%" y="399.50"></text></g><g><title>fastiron::simulation::collision_event::update_trajectory (90 samples, 0.78%)</title><rect x="77.1026%" y="421" width="0.7836%" height="15" fill="rgb(251,153,30)" fg:x="8856" fg:w="90"/><text x="77.3526%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (6 samples, 0.05%)</title><rect x="77.8339%" y="405" width="0.0522%" height="15" fill="rgb(239,152,38)" fg:x="8940" fg:w="6"/><text x="78.0839%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (2 samples, 0.02%)</title><rect x="77.8687%" y="389" width="0.0174%" height="15" fill="rgb(249,139,47)" fg:x="8944" fg:w="2"/><text x="78.1187%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.09%)</title><rect x="79.7493%" y="405" width="0.0871%" height="15" fill="rgb(244,64,35)" fg:x="9160" fg:w="10"/><text x="79.9993%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.09%)</title><rect x="79.7493%" y="389" width="0.0871%" height="15" fill="rgb(216,46,15)" fg:x="9160" fg:w="10"/><text x="79.9993%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.09%)</title><rect x="79.7493%" y="373" width="0.0871%" height="15" fill="rgb(250,74,19)" fg:x="9160" fg:w="10"/><text x="79.9993%" y="383.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (398 samples, 3.47%)</title><rect x="79.8363%" y="405" width="3.4651%" height="15" fill="rgb(249,42,33)" fg:x="9170" fg:w="398"/><text x="80.0863%" y="415.50">&lt;f6..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (33 samples, 0.29%)</title><rect x="83.3014%" y="405" width="0.2873%" height="15" fill="rgb(242,149,17)" fg:x="9568" fg:w="33"/><text x="83.5514%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (58 samples, 0.50%)</title><rect x="84.4071%" y="389" width="0.5050%" height="15" fill="rgb(244,29,21)" fg:x="9695" fg:w="58"/><text x="84.6571%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (58 samples, 0.50%)</title><rect x="84.4071%" y="373" width="0.5050%" height="15" fill="rgb(220,130,37)" fg:x="9695" fg:w="58"/><text x="84.6571%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (58 samples, 0.50%)</title><rect x="84.4071%" y="357" width="0.5050%" height="15" fill="rgb(211,67,2)" fg:x="9695" fg:w="58"/><text x="84.6571%" y="367.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_cross_section (816 samples, 7.10%)</title><rect x="77.8861%" y="421" width="7.1043%" height="15" fill="rgb(235,68,52)" fg:x="8946" fg:w="816"/><text x="78.1361%" y="431.50">fastiron::..</text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_reaction_cross_section (161 samples, 1.40%)</title><rect x="83.5887%" y="405" width="1.4017%" height="15" fill="rgb(246,142,3)" fg:x="9601" fg:w="161"/><text x="83.8387%" y="415.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::get_cross_section (9 samples, 0.08%)</title><rect x="84.9121%" y="389" width="0.0784%" height="15" fill="rgb(241,25,7)" fg:x="9753" fg:w="9"/><text x="85.1621%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.08%)</title><rect x="84.9121%" y="373" width="0.0784%" height="15" fill="rgb(242,119,39)" fg:x="9753" fg:w="9"/><text x="85.1621%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.08%)</title><rect x="84.9121%" y="357" width="0.0784%" height="15" fill="rgb(241,98,45)" fg:x="9753" fg:w="9"/><text x="85.1621%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.08%)</title><rect x="84.9121%" y="341" width="0.0784%" height="15" fill="rgb(254,28,30)" fg:x="9753" fg:w="9"/><text x="85.1621%" y="351.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (1,553 samples, 13.52%)</title><rect x="71.4870%" y="437" width="13.5208%" height="15" fill="rgb(241,142,54)" fg:x="8211" fg:w="1553"/><text x="71.7370%" y="447.50">fastiron::simulation..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (2 samples, 0.02%)</title><rect x="84.9904%" y="421" width="0.0174%" height="15" fill="rgb(222,85,15)" fg:x="9762" fg:w="2"/><text x="85.2404%" y="431.50"></text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (2 samples, 0.02%)</title><rect x="85.0078%" y="437" width="0.0174%" height="15" fill="rgb(210,85,47)" fg:x="9764" fg:w="2"/><text x="85.2578%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_sign_negative (6 samples, 0.05%)</title><rect x="85.4780%" y="421" width="0.0522%" height="15" fill="rgb(224,206,25)" fg:x="9818" fg:w="6"/><text x="85.7280%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_sign_negative (6 samples, 0.05%)</title><rect x="85.4780%" y="405" width="0.0522%" height="15" fill="rgb(243,201,19)" fg:x="9818" fg:w="6"/><text x="85.7280%" y="415.50"></text></g><g><title>[libc.so.6] (19 samples, 0.17%)</title><rect x="85.5389%" y="421" width="0.1654%" height="15" fill="rgb(236,59,4)" fg:x="9825" fg:w="19"/><text x="85.7889%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (3 samples, 0.03%)</title><rect x="85.7043%" y="421" width="0.0261%" height="15" fill="rgb(254,179,45)" fg:x="9844" fg:w="3"/><text x="85.9543%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.03%)</title><rect x="86.2180%" y="405" width="0.0348%" height="15" fill="rgb(226,14,10)" fg:x="9903" fg:w="4"/><text x="86.4680%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.03%)</title><rect x="86.2180%" y="389" width="0.0348%" height="15" fill="rgb(244,27,41)" fg:x="9903" fg:w="4"/><text x="86.4680%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.03%)</title><rect x="86.2180%" y="373" width="0.0348%" height="15" fill="rgb(235,35,32)" fg:x="9903" fg:w="4"/><text x="86.4680%" y="383.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::tally_scalar_flux (215 samples, 1.87%)</title><rect x="85.7305%" y="421" width="1.8718%" height="15" fill="rgb(218,68,31)" fg:x="9847" fg:w="215"/><text x="85.9805%" y="431.50">f..</text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (155 samples, 1.35%)</title><rect x="86.2528%" y="405" width="1.3495%" height="15" fill="rgb(207,120,37)" fg:x="9907" fg:w="155"/><text x="86.5028%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (2 samples, 0.02%)</title><rect x="88.7776%" y="405" width="0.0174%" height="15" fill="rgb(227,98,0)" fg:x="10197" fg:w="2"/><text x="89.0276%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (6 samples, 0.05%)</title><rect x="88.8038%" y="341" width="0.0522%" height="15" fill="rgb(207,7,3)" fg:x="10200" fg:w="6"/><text x="89.0538%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.03%)</title><rect x="88.8560%" y="325" width="0.0261%" height="15" fill="rgb(206,98,19)" fg:x="10206" fg:w="3"/><text x="89.1060%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="88.8995%" y="309" width="0.0174%" height="15" fill="rgb(217,5,26)" fg:x="10211" fg:w="2"/><text x="89.1495%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="88.8995%" y="293" width="0.0174%" height="15" fill="rgb(235,190,38)" fg:x="10211" fg:w="2"/><text x="89.1495%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="88.8995%" y="277" width="0.0174%" height="15" fill="rgb(247,86,24)" fg:x="10211" fg:w="2"/><text x="89.1495%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.03%)</title><rect x="88.9169%" y="277" width="0.0261%" height="15" fill="rgb(205,101,16)" fg:x="10213" fg:w="3"/><text x="89.1669%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.03%)</title><rect x="88.9169%" y="261" width="0.0261%" height="15" fill="rgb(246,168,33)" fg:x="10213" fg:w="3"/><text x="89.1669%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.03%)</title><rect x="88.9169%" y="245" width="0.0261%" height="15" fill="rgb(231,114,1)" fg:x="10213" fg:w="3"/><text x="89.1669%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (30 samples, 0.26%)</title><rect x="89.0737%" y="245" width="0.2612%" height="15" fill="rgb(207,184,53)" fg:x="10231" fg:w="30"/><text x="89.3237%" y="255.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (207 samples, 1.80%)</title><rect x="87.6023%" y="421" width="1.8022%" height="15" fill="rgb(224,95,51)" fg:x="10062" fg:w="207"/><text x="87.8523%" y="431.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (70 samples, 0.61%)</title><rect x="88.7951%" y="405" width="0.6094%" height="15" fill="rgb(212,188,45)" fg:x="10199" fg:w="70"/><text x="89.0451%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (70 samples, 0.61%)</title><rect x="88.7951%" y="389" width="0.6094%" height="15" fill="rgb(223,154,38)" fg:x="10199" fg:w="70"/><text x="89.0451%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (69 samples, 0.60%)</title><rect x="88.8038%" y="373" width="0.6007%" height="15" fill="rgb(251,22,52)" fg:x="10200" fg:w="69"/><text x="89.0538%" y="383.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section::{{closure}} (69 samples, 0.60%)</title><rect x="88.8038%" y="357" width="0.6007%" height="15" fill="rgb(229,209,22)" fg:x="10200" fg:w="69"/><text x="89.0538%" y="367.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_total_cross_section (63 samples, 0.55%)</title><rect x="88.8560%" y="341" width="0.5485%" height="15" fill="rgb(234,138,34)" fg:x="10206" fg:w="63"/><text x="89.1060%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section (59 samples, 0.51%)</title><rect x="88.8908%" y="325" width="0.5137%" height="15" fill="rgb(212,95,11)" fg:x="10210" fg:w="59"/><text x="89.1408%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.49%)</title><rect x="88.9169%" y="309" width="0.4876%" height="15" fill="rgb(240,179,47)" fg:x="10213" fg:w="56"/><text x="89.1669%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 0.49%)</title><rect x="88.9169%" y="293" width="0.4876%" height="15" fill="rgb(240,163,11)" fg:x="10213" fg:w="56"/><text x="89.1669%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (53 samples, 0.46%)</title><rect x="88.9431%" y="277" width="0.4614%" height="15" fill="rgb(236,37,12)" fg:x="10216" fg:w="53"/><text x="89.1931%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section::{{closure}} (53 samples, 0.46%)</title><rect x="88.9431%" y="261" width="0.4614%" height="15" fill="rgb(232,164,16)" fg:x="10216" fg:w="53"/><text x="89.1931%" y="271.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::get_cross_section (8 samples, 0.07%)</title><rect x="89.3348%" y="245" width="0.0697%" height="15" fill="rgb(244,205,15)" fg:x="10261" fg:w="8"/><text x="89.5848%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.07%)</title><rect x="89.3348%" y="229" width="0.0697%" height="15" fill="rgb(223,117,47)" fg:x="10261" fg:w="8"/><text x="89.5848%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.07%)</title><rect x="89.3348%" y="213" width="0.0697%" height="15" fill="rgb(244,107,35)" fg:x="10261" fg:w="8"/><text x="89.5848%" y="223.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.07%)</title><rect x="89.3348%" y="197" width="0.0697%" height="15" fill="rgb(205,140,8)" fg:x="10261" fg:w="8"/><text x="89.5848%" y="207.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min (3 samples, 0.03%)</title><rect x="89.4045%" y="421" width="0.0261%" height="15" fill="rgb(228,84,46)" fg:x="10269" fg:w="3"/><text x="89.6545%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="89.4045%" y="405" width="0.0261%" height="15" fill="rgb(254,188,9)" fg:x="10269" fg:w="3"/><text x="89.6545%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="89.4045%" y="389" width="0.0261%" height="15" fill="rgb(206,112,54)" fg:x="10269" fg:w="3"/><text x="89.6545%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="89.4045%" y="373" width="0.0261%" height="15" fill="rgb(216,84,49)" fg:x="10269" fg:w="3"/><text x="89.6545%" y="383.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min::{{closure}} (3 samples, 0.03%)</title><rect x="89.4045%" y="357" width="0.0261%" height="15" fill="rgb(214,194,35)" fg:x="10269" fg:w="3"/><text x="89.6545%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (2 samples, 0.02%)</title><rect x="89.4480%" y="405" width="0.0174%" height="15" fill="rgb(249,28,3)" fg:x="10274" fg:w="2"/><text x="89.6980%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.28%)</title><rect x="89.4654%" y="357" width="0.2786%" height="15" fill="rgb(222,56,52)" fg:x="10276" fg:w="32"/><text x="89.7154%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (32 samples, 0.28%)</title><rect x="89.4654%" y="341" width="0.2786%" height="15" fill="rgb(245,217,50)" fg:x="10276" fg:w="32"/><text x="89.7154%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (32 samples, 0.28%)</title><rect x="89.4654%" y="325" width="0.2786%" height="15" fill="rgb(213,201,24)" fg:x="10276" fg:w="32"/><text x="89.7154%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.10%)</title><rect x="92.3298%" y="325" width="0.1045%" height="15" fill="rgb(248,116,28)" fg:x="10605" fg:w="12"/><text x="92.5798%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.10%)</title><rect x="92.3298%" y="309" width="0.1045%" height="15" fill="rgb(219,72,43)" fg:x="10605" fg:w="12"/><text x="92.5798%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.10%)</title><rect x="92.3298%" y="293" width="0.1045%" height="15" fill="rgb(209,138,14)" fg:x="10605" fg:w="12"/><text x="92.5798%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (57 samples, 0.50%)</title><rect x="92.4343%" y="325" width="0.4963%" height="15" fill="rgb(222,18,33)" fg:x="10617" fg:w="57"/><text x="92.6843%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (29 samples, 0.25%)</title><rect x="92.9305%" y="325" width="0.2525%" height="15" fill="rgb(213,199,7)" fg:x="10674" fg:w="29"/><text x="93.1805%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (16 samples, 0.14%)</title><rect x="93.1830%" y="325" width="0.1393%" height="15" fill="rgb(250,110,10)" fg:x="10703" fg:w="16"/><text x="93.4330%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (293 samples, 2.55%)</title><rect x="93.3223%" y="325" width="2.5509%" height="15" fill="rgb(248,123,6)" fg:x="10719" fg:w="293"/><text x="93.5723%" y="335.50">co..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (63 samples, 0.55%)</title><rect x="97.0660%" y="309" width="0.5485%" height="15" fill="rgb(206,91,31)" fg:x="11149" fg:w="63"/><text x="97.3160%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (32 samples, 0.28%)</title><rect x="97.6145%" y="309" width="0.2786%" height="15" fill="rgb(211,154,13)" fg:x="11212" fg:w="32"/><text x="97.8645%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (51 samples, 0.44%)</title><rect x="97.8931%" y="309" width="0.4440%" height="15" fill="rgb(225,148,7)" fg:x="11244" fg:w="51"/><text x="98.1431%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Neg&gt;::neg (5 samples, 0.04%)</title><rect x="98.3371%" y="309" width="0.0435%" height="15" fill="rgb(220,160,43)" fg:x="11295" fg:w="5"/><text x="98.5871%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (29 samples, 0.25%)</title><rect x="98.3806%" y="309" width="0.2525%" height="15" fill="rgb(213,52,39)" fg:x="11300" fg:w="29"/><text x="98.6306%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (3 samples, 0.03%)</title><rect x="98.6331%" y="309" width="0.0261%" height="15" fill="rgb(243,137,7)" fg:x="11329" fg:w="3"/><text x="98.8831%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (3 samples, 0.03%)</title><rect x="98.6331%" y="293" width="0.0261%" height="15" fill="rgb(230,79,13)" fg:x="11329" fg:w="3"/><text x="98.8831%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (9 samples, 0.08%)</title><rect x="98.6592%" y="309" width="0.0784%" height="15" fill="rgb(247,105,23)" fg:x="11332" fg:w="9"/><text x="98.9092%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,096 samples, 9.54%)</title><rect x="89.4654%" y="389" width="9.5421%" height="15" fill="rgb(223,179,41)" fg:x="10276" fg:w="1096"/><text x="89.7154%" y="399.50">core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,096 samples, 9.54%)</title><rect x="89.4654%" y="373" width="9.5421%" height="15" fill="rgb(218,9,34)" fg:x="10276" fg:w="1096"/><text x="89.7154%" y="383.50">core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,064 samples, 9.26%)</title><rect x="89.7440%" y="357" width="9.2635%" height="15" fill="rgb(222,106,8)" fg:x="10308" fg:w="1064"/><text x="89.9940%" y="367.50">core::iter::t..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg::{{closure}} (1,064 samples, 9.26%)</title><rect x="89.7440%" y="341" width="9.2635%" height="15" fill="rgb(211,220,0)" fg:x="10308" fg:w="1064"/><text x="89.9940%" y="351.50">fastiron::sim..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg_dist_to_segment (360 samples, 3.13%)</title><rect x="95.8732%" y="325" width="3.1343%" height="15" fill="rgb(229,52,16)" fg:x="11012" fg:w="360"/><text x="96.1232%" y="335.50">fas..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (31 samples, 0.27%)</title><rect x="98.7376%" y="309" width="0.2699%" height="15" fill="rgb(212,155,18)" fg:x="11341" fg:w="31"/><text x="98.9876%" y="319.50"></text></g><g><title>&lt;fastiron::geometry::mc_nearest_facet::MCNearestFacet&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.03%)</title><rect x="99.1120%" y="357" width="0.0261%" height="15" fill="rgb(242,21,14)" fg:x="11384" fg:w="3"/><text x="99.3620%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (3 samples, 0.03%)</title><rect x="99.1381%" y="357" width="0.0261%" height="15" fill="rgb(222,19,48)" fg:x="11387" fg:w="3"/><text x="99.3881%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8 samples, 0.07%)</title><rect x="99.2338%" y="293" width="0.0697%" height="15" fill="rgb(232,45,27)" fg:x="11398" fg:w="8"/><text x="99.4838%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8 samples, 0.07%)</title><rect x="99.2338%" y="277" width="0.0697%" height="15" fill="rgb(249,103,42)" fg:x="11398" fg:w="8"/><text x="99.4838%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (35 samples, 0.30%)</title><rect x="99.1642%" y="325" width="0.3047%" height="15" fill="rgb(246,81,33)" fg:x="11390" fg:w="35"/><text x="99.4142%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (35 samples, 0.30%)</title><rect x="99.1642%" y="309" width="0.3047%" height="15" fill="rgb(252,33,42)" fg:x="11390" fg:w="35"/><text x="99.4142%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (19 samples, 0.17%)</title><rect x="99.3035%" y="293" width="0.1654%" height="15" fill="rgb(209,212,41)" fg:x="11406" fg:w="19"/><text x="99.5535%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (8 samples, 0.07%)</title><rect x="99.7736%" y="293" width="0.0697%" height="15" fill="rgb(207,154,6)" fg:x="11460" fg:w="8"/><text x="100.0236%" y="303.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (3,369 samples, 29.33%)</title><rect x="70.5990%" y="469" width="29.3314%" height="15" fill="rgb(223,64,47)" fg:x="8109" fg:w="3369"/><text x="70.8490%" y="479.50">fastiron::simulation::cycle_tracking::cycle_tra..</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (3,274 samples, 28.50%)</title><rect x="71.4261%" y="453" width="28.5043%" height="15" fill="rgb(211,161,38)" fg:x="8204" fg:w="3274"/><text x="71.6761%" y="463.50">fastiron::simulation::cycle_tracking::cycle_tr..</text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (1,712 samples, 14.91%)</title><rect x="85.0252%" y="437" width="14.9051%" height="15" fill="rgb(219,138,40)" fg:x="9766" fg:w="1712"/><text x="85.2752%" y="447.50">fastiron::simulation::m..</text></g><g><title>fastiron::simulation::mct::nearest_facet (1,206 samples, 10.50%)</title><rect x="89.4306%" y="421" width="10.4997%" height="15" fill="rgb(241,228,46)" fg:x="10272" fg:w="1206"/><text x="89.6806%" y="431.50">fastiron::simul..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg (1,202 samples, 10.46%)</title><rect x="89.4654%" y="405" width="10.4649%" height="15" fill="rgb(223,209,38)" fg:x="10276" fg:w="1202"/><text x="89.7154%" y="415.50">fastiron::simul..</text></g><g><title>fastiron::simulation::mct::mct_nf_find_nearest (106 samples, 0.92%)</title><rect x="99.0075%" y="389" width="0.9229%" height="15" fill="rgb(236,164,45)" fg:x="11372" fg:w="106"/><text x="99.2575%" y="399.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest (97 samples, 0.84%)</title><rect x="99.0858%" y="373" width="0.8445%" height="15" fill="rgb(231,15,5)" fg:x="11381" fg:w="97"/><text x="99.3358%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (88 samples, 0.77%)</title><rect x="99.1642%" y="357" width="0.7662%" height="15" fill="rgb(252,35,15)" fg:x="11390" fg:w="88"/><text x="99.4142%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (88 samples, 0.77%)</title><rect x="99.1642%" y="341" width="0.7662%" height="15" fill="rgb(248,181,18)" fg:x="11390" fg:w="88"/><text x="99.4142%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (53 samples, 0.46%)</title><rect x="99.4689%" y="325" width="0.4614%" height="15" fill="rgb(233,39,42)" fg:x="11425" fg:w="53"/><text x="99.7189%" y="335.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest::{{closure}} (53 samples, 0.46%)</title><rect x="99.4689%" y="309" width="0.4614%" height="15" fill="rgb(238,110,33)" fg:x="11425" fg:w="53"/><text x="99.7189%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (10 samples, 0.09%)</title><rect x="99.8433%" y="293" width="0.0871%" height="15" fill="rgb(233,195,10)" fg:x="11468" fg:w="10"/><text x="100.0933%" y="303.50"></text></g><g><title>fastiron::cycle_tracking (11,233 samples, 97.80%)</title><rect x="2.1417%" y="485" width="97.7973%" height="15" fill="rgb(254,105,3)" fg:x="246" fg:w="11233"/><text x="2.3917%" y="495.50">fastiron::cycle_tracking</text></g><g><title>all (11,486 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(221,225,9)" fg:x="0" fg:w="11486"/><text x="0.2500%" y="639.50"></text></g><g><title>fastiron (11,486 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="11486"/><text x="0.2500%" y="623.50">fastiron</text></g><g><title>_start (11,461 samples, 99.78%)</title><rect x="0.2177%" y="597" width="99.7823%" height="15" fill="rgb(229,198,43)" fg:x="25" fg:w="11461"/><text x="0.4677%" y="607.50">_start</text></g><g><title>__libc_start_main_impl (11,457 samples, 99.75%)</title><rect x="0.2525%" y="581" width="99.7475%" height="15" fill="rgb(206,209,35)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="591.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (11,457 samples, 99.75%)</title><rect x="0.2525%" y="565" width="99.7475%" height="15" fill="rgb(245,195,53)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="575.50">__libc_start_call_main</text></g><g><title>main (11,457 samples, 99.75%)</title><rect x="0.2525%" y="549" width="99.7475%" height="15" fill="rgb(240,92,26)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="559.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,457 samples, 99.75%)</title><rect x="0.2525%" y="533" width="99.7475%" height="15" fill="rgb(207,40,23)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (11,457 samples, 99.75%)</title><rect x="0.2525%" y="517" width="99.7475%" height="15" fill="rgb(223,111,35)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>fastiron::main (11,457 samples, 99.75%)</title><rect x="0.2525%" y="501" width="99.7475%" height="15" fill="rgb(229,147,28)" fg:x="29" fg:w="11457"/><text x="0.5025%" y="511.50">fastiron::main</text></g><g><title>fastiron::init_mc::init_mc (7 samples, 0.06%)</title><rect x="99.9391%" y="485" width="0.0609%" height="15" fill="rgb(211,29,28)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="495.50"></text></g><g><title>fastiron::init_mc::init_mesh (7 samples, 0.06%)</title><rect x="99.9391%" y="469" width="0.0609%" height="15" fill="rgb(228,72,33)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.06%)</title><rect x="99.9391%" y="453" width="0.0609%" height="15" fill="rgb(205,214,31)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.06%)</title><rect x="99.9391%" y="437" width="0.0609%" height="15" fill="rgb(224,111,15)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="421" width="0.0609%" height="15" fill="rgb(253,21,26)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="431.50"></text></g><g><title>fastiron::init_mc::init_mesh::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="405" width="0.0609%" height="15" fill="rgb(245,139,43)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="415.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::build_mesh_partition (7 samples, 0.06%)</title><rect x="99.9391%" y="389" width="0.0609%" height="15" fill="rgb(252,170,7)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="399.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::assign_cells_to_domain (7 samples, 0.06%)</title><rect x="99.9391%" y="373" width="0.0609%" height="15" fill="rgb(231,118,14)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="383.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood (7 samples, 0.06%)</title><rect x="99.9391%" y="357" width="0.0609%" height="15" fill="rgb(238,83,0)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.06%)</title><rect x="99.9391%" y="341" width="0.0609%" height="15" fill="rgb(221,39,39)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.06%)</title><rect x="99.9391%" y="325" width="0.0609%" height="15" fill="rgb(222,119,46)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="309" width="0.0609%" height="15" fill="rgb(222,165,49)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="319.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="293" width="0.0609%" height="15" fill="rgb(219,113,52)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.06%)</title><rect x="99.9391%" y="277" width="0.0609%" height="15" fill="rgb(214,7,15)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.06%)</title><rect x="99.9391%" y="261" width="0.0609%" height="15" fill="rgb(235,32,4)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="245" width="0.0609%" height="15" fill="rgb(238,90,54)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="255.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="229" width="0.0609%" height="15" fill="rgb(213,208,19)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.06%)</title><rect x="99.9391%" y="213" width="0.0609%" height="15" fill="rgb(233,156,4)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.06%)</title><rect x="99.9391%" y="197" width="0.0609%" height="15" fill="rgb(207,194,5)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="181" width="0.0609%" height="15" fill="rgb(206,111,30)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="191.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.06%)</title><rect x="99.9391%" y="165" width="0.0609%" height="15" fill="rgb(243,70,54)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (7 samples, 0.06%)</title><rect x="99.9391%" y="149" width="0.0609%" height="15" fill="rgb(242,28,8)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="159.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (7 samples, 0.06%)</title><rect x="99.9391%" y="133" width="0.0609%" height="15" fill="rgb(219,106,18)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (7 samples, 0.06%)</title><rect x="99.9391%" y="117" width="0.0609%" height="15" fill="rgb(244,222,10)" fg:x="11479" fg:w="7"/><text x="100.1891%" y="127.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (2 samples, 0.02%)</title><rect x="99.9826%" y="101" width="0.0174%" height="15" fill="rgb(236,179,52)" fg:x="11484" fg:w="2"/><text x="100.2326%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (2 samples, 0.02%)</title><rect x="99.9826%" y="85" width="0.0174%" height="15" fill="rgb(213,23,39)" fg:x="11484" fg:w="2"/><text x="100.2326%" y="95.50"></text></g></svg></svg>
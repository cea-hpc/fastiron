<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="298501"><g><title>alloc::raw_vec::finish_grow (359 samples, 0.12%)</title><rect x="0.0077%" y="565" width="0.1203%" height="15" fill="rgb(227,0,7)" fg:x="23" fg:w="359"/><text x="0.2577%" y="575.50"></text></g><g><title>[[heap]] (383 samples, 0.13%)</title><rect x="0.0000%" y="581" width="0.1283%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="383"/><text x="0.2500%" y="591.50"></text></g><g><title>_int_free (179 samples, 0.06%)</title><rect x="0.1313%" y="565" width="0.0600%" height="15" fill="rgb(221,193,54)" fg:x="392" fg:w="179"/><text x="0.3813%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (71 samples, 0.02%)</title><rect x="0.2000%" y="565" width="0.0238%" height="15" fill="rgb(248,212,6)" fg:x="597" fg:w="71"/><text x="0.4500%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (71 samples, 0.02%)</title><rect x="0.2000%" y="549" width="0.0238%" height="15" fill="rgb(208,68,35)" fg:x="597" fg:w="71"/><text x="0.4500%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (71 samples, 0.02%)</title><rect x="0.2000%" y="533" width="0.0238%" height="15" fill="rgb(232,128,0)" fg:x="597" fg:w="71"/><text x="0.4500%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (71 samples, 0.02%)</title><rect x="0.2000%" y="517" width="0.0238%" height="15" fill="rgb(207,160,47)" fg:x="597" fg:w="71"/><text x="0.4500%" y="527.50"></text></g><g><title>[anon] (303 samples, 0.10%)</title><rect x="0.1307%" y="581" width="0.1015%" height="15" fill="rgb(228,23,34)" fg:x="390" fg:w="303"/><text x="0.3807%" y="591.50"></text></g><g><title>__GI___libc_free (299 samples, 0.10%)</title><rect x="0.2322%" y="565" width="0.1002%" height="15" fill="rgb(218,30,26)" fg:x="693" fg:w="299"/><text x="0.4822%" y="575.50"></text></g><g><title>__GI___libc_malloc (190 samples, 0.06%)</title><rect x="0.3323%" y="565" width="0.0637%" height="15" fill="rgb(220,122,19)" fg:x="992" fg:w="190"/><text x="0.5823%" y="575.50"></text></g><g><title>__sincos (263 samples, 0.09%)</title><rect x="0.4054%" y="565" width="0.0881%" height="15" fill="rgb(250,228,42)" fg:x="1210" fg:w="263"/><text x="0.6554%" y="575.50"></text></g><g><title>_int_free (236 samples, 0.08%)</title><rect x="0.4935%" y="565" width="0.0791%" height="15" fill="rgb(240,193,28)" fg:x="1473" fg:w="236"/><text x="0.7435%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (149 samples, 0.05%)</title><rect x="0.5839%" y="565" width="0.0499%" height="15" fill="rgb(216,20,37)" fg:x="1743" fg:w="149"/><text x="0.8339%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.02%)</title><rect x="0.6188%" y="549" width="0.0151%" height="15" fill="rgb(206,188,39)" fg:x="1847" fg:w="45"/><text x="0.8688%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (34 samples, 0.01%)</title><rect x="0.6224%" y="533" width="0.0114%" height="15" fill="rgb(217,207,13)" fg:x="1858" fg:w="34"/><text x="0.8724%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (34 samples, 0.01%)</title><rect x="0.6224%" y="517" width="0.0114%" height="15" fill="rgb(231,73,38)" fg:x="1858" fg:w="34"/><text x="0.8724%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (372 samples, 0.12%)</title><rect x="0.6338%" y="565" width="0.1246%" height="15" fill="rgb(225,20,46)" fg:x="1892" fg:w="372"/><text x="0.8838%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (109 samples, 0.04%)</title><rect x="0.7585%" y="437" width="0.0365%" height="15" fill="rgb(210,31,41)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (109 samples, 0.04%)</title><rect x="0.7585%" y="421" width="0.0365%" height="15" fill="rgb(221,200,47)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 0.04%)</title><rect x="0.7585%" y="405" width="0.0365%" height="15" fill="rgb(226,26,5)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (109 samples, 0.04%)</title><rect x="0.7585%" y="389" width="0.0365%" height="15" fill="rgb(249,33,26)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (109 samples, 0.04%)</title><rect x="0.7585%" y="373" width="0.0365%" height="15" fill="rgb(235,183,28)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="383.50"></text></g><g><title>__rdl_dealloc (109 samples, 0.04%)</title><rect x="0.7585%" y="357" width="0.0365%" height="15" fill="rgb(221,5,38)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (109 samples, 0.04%)</title><rect x="0.7585%" y="341" width="0.0365%" height="15" fill="rgb(247,18,42)" fg:x="2264" fg:w="109"/><text x="1.0085%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (95 samples, 0.03%)</title><rect x="0.7993%" y="421" width="0.0318%" height="15" fill="rgb(241,131,45)" fg:x="2386" fg:w="95"/><text x="1.0493%" y="431.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (121 samples, 0.04%)</title><rect x="0.7950%" y="437" width="0.0405%" height="15" fill="rgb(249,31,29)" fg:x="2373" fg:w="121"/><text x="1.0450%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sin (56 samples, 0.02%)</title><rect x="0.8355%" y="421" width="0.0188%" height="15" fill="rgb(225,111,53)" fg:x="2494" fg:w="56"/><text x="1.0855%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sin (56 samples, 0.02%)</title><rect x="0.8355%" y="405" width="0.0188%" height="15" fill="rgb(238,160,17)" fg:x="2494" fg:w="56"/><text x="1.0855%" y="415.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (340 samples, 0.11%)</title><rect x="0.7585%" y="453" width="0.1139%" height="15" fill="rgb(214,148,48)" fg:x="2264" fg:w="340"/><text x="1.0085%" y="463.50"></text></g><g><title>fastiron::simulation::collision_event::update_trajectory (110 samples, 0.04%)</title><rect x="0.8355%" y="437" width="0.0369%" height="15" fill="rgb(232,36,49)" fg:x="2494" fg:w="110"/><text x="1.0855%" y="447.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_num_mfp (54 samples, 0.02%)</title><rect x="0.8543%" y="421" width="0.0181%" height="15" fill="rgb(209,103,24)" fg:x="2550" fg:w="54"/><text x="1.1043%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::ln (54 samples, 0.02%)</title><rect x="0.8543%" y="405" width="0.0181%" height="15" fill="rgb(229,88,8)" fg:x="2550" fg:w="54"/><text x="1.1043%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (54 samples, 0.02%)</title><rect x="0.8543%" y="389" width="0.0181%" height="15" fill="rgb(213,181,19)" fg:x="2550" fg:w="54"/><text x="1.1043%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (54 samples, 0.02%)</title><rect x="0.8543%" y="373" width="0.0181%" height="15" fill="rgb(254,191,54)" fg:x="2550" fg:w="54"/><text x="1.1043%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (54 samples, 0.02%)</title><rect x="0.8543%" y="357" width="0.0181%" height="15" fill="rgb(241,83,37)" fg:x="2550" fg:w="54"/><text x="1.1043%" y="367.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles (389 samples, 0.13%)</title><rect x="0.7585%" y="533" width="0.1303%" height="15" fill="rgb(233,36,39)" fg:x="2264" fg:w="389"/><text x="1.0085%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (389 samples, 0.13%)</title><rect x="0.7585%" y="517" width="0.1303%" height="15" fill="rgb(226,3,54)" fg:x="2264" fg:w="389"/><text x="1.0085%" y="527.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}} (389 samples, 0.13%)</title><rect x="0.7585%" y="501" width="0.1303%" height="15" fill="rgb(245,192,40)" fg:x="2264" fg:w="389"/><text x="1.0085%" y="511.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (389 samples, 0.13%)</title><rect x="0.7585%" y="485" width="0.1303%" height="15" fill="rgb(238,167,29)" fg:x="2264" fg:w="389"/><text x="1.0085%" y="495.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (389 samples, 0.13%)</title><rect x="0.7585%" y="469" width="0.1303%" height="15" fill="rgb(232,182,51)" fg:x="2264" fg:w="389"/><text x="1.0085%" y="479.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (49 samples, 0.02%)</title><rect x="0.8724%" y="453" width="0.0164%" height="15" fill="rgb(231,60,39)" fg:x="2604" fg:w="49"/><text x="1.1224%" y="463.50"></text></g><g><title>fastiron::simulation::mct::nearest_facet (49 samples, 0.02%)</title><rect x="0.8724%" y="437" width="0.0164%" height="15" fill="rgb(208,69,12)" fg:x="2604" fg:w="49"/><text x="1.1224%" y="447.50"></text></g><g><title>fastiron::main (49 samples, 0.02%)</title><rect x="0.8724%" y="421" width="0.0164%" height="15" fill="rgb(235,93,37)" fg:x="2604" fg:w="49"/><text x="1.1224%" y="431.50"></text></g><g><title>fastiron::cycle_process (390 samples, 0.13%)</title><rect x="0.7585%" y="549" width="0.1307%" height="15" fill="rgb(213,116,39)" fg:x="2264" fg:w="390"/><text x="1.0085%" y="559.50"></text></g><g><title>fastiron::main (408 samples, 0.14%)</title><rect x="0.7585%" y="565" width="0.1367%" height="15" fill="rgb(222,207,29)" fg:x="2264" fg:w="408"/><text x="1.0085%" y="575.50"></text></g><g><title>[unknown] (1,980 samples, 0.66%)</title><rect x="0.2322%" y="581" width="0.6633%" height="15" fill="rgb(206,96,30)" fg:x="693" fg:w="1980"/><text x="0.4822%" y="591.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::clean_extra_vaults (741 samples, 0.25%)</title><rect x="0.8985%" y="453" width="0.2482%" height="15" fill="rgb(218,138,4)" fg:x="2682" fg:w="741"/><text x="1.1485%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (741 samples, 0.25%)</title><rect x="0.8985%" y="437" width="0.2482%" height="15" fill="rgb(250,191,14)" fg:x="2682" fg:w="741"/><text x="1.1485%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (741 samples, 0.25%)</title><rect x="0.8985%" y="421" width="0.2482%" height="15" fill="rgb(239,60,40)" fg:x="2682" fg:w="741"/><text x="1.1485%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (741 samples, 0.25%)</title><rect x="0.8985%" y="405" width="0.2482%" height="15" fill="rgb(206,27,48)" fg:x="2682" fg:w="741"/><text x="1.1485%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (741 samples, 0.25%)</title><rect x="0.8985%" y="389" width="0.2482%" height="15" fill="rgb(225,35,8)" fg:x="2682" fg:w="741"/><text x="1.1485%" y="399.50"></text></g><g><title>fastiron::main (39 samples, 0.01%)</title><rect x="1.1497%" y="405" width="0.0131%" height="15" fill="rgb(250,213,24)" fg:x="3432" fg:w="39"/><text x="1.3997%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (68 samples, 0.02%)</title><rect x="1.2265%" y="389" width="0.0228%" height="15" fill="rgb(247,123,22)" fg:x="3661" fg:w="68"/><text x="1.4765%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (43 samples, 0.01%)</title><rect x="1.3652%" y="373" width="0.0144%" height="15" fill="rgb(231,138,38)" fg:x="4075" fg:w="43"/><text x="1.6152%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.01%)</title><rect x="1.3652%" y="357" width="0.0144%" height="15" fill="rgb(231,145,46)" fg:x="4075" fg:w="43"/><text x="1.6152%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.01%)</title><rect x="1.3652%" y="341" width="0.0144%" height="15" fill="rgb(251,118,11)" fg:x="4075" fg:w="43"/><text x="1.6152%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (508 samples, 0.17%)</title><rect x="1.2492%" y="389" width="0.1702%" height="15" fill="rgb(217,147,25)" fg:x="3729" fg:w="508"/><text x="1.4992%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (114 samples, 0.04%)</title><rect x="1.3812%" y="373" width="0.0382%" height="15" fill="rgb(247,81,37)" fg:x="4123" fg:w="114"/><text x="1.6312%" y="383.50"></text></g><g><title>fastiron::main (520 samples, 0.17%)</title><rect x="1.4194%" y="389" width="0.1742%" height="15" fill="rgb(209,12,38)" fg:x="4237" fg:w="520"/><text x="1.6694%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (102 samples, 0.03%)</title><rect x="1.7879%" y="373" width="0.0342%" height="15" fill="rgb(227,1,9)" fg:x="5337" fg:w="102"/><text x="2.0379%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (102 samples, 0.03%)</title><rect x="1.7879%" y="357" width="0.0342%" height="15" fill="rgb(248,47,43)" fg:x="5337" fg:w="102"/><text x="2.0379%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (102 samples, 0.03%)</title><rect x="1.7879%" y="341" width="0.0342%" height="15" fill="rgb(221,10,30)" fg:x="5337" fg:w="102"/><text x="2.0379%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (104 samples, 0.03%)</title><rect x="1.8221%" y="373" width="0.0348%" height="15" fill="rgb(210,229,1)" fg:x="5439" fg:w="104"/><text x="2.0721%" y="383.50"></text></g><g><title>fastiron::main (11,363 samples, 3.81%)</title><rect x="1.8569%" y="373" width="3.8067%" height="15" fill="rgb(222,148,37)" fg:x="5543" fg:w="11363"/><text x="2.1069%" y="383.50">fast..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (427 samples, 0.14%)</title><rect x="8.2975%" y="357" width="0.1430%" height="15" fill="rgb(234,67,33)" fg:x="24768" fg:w="427"/><text x="8.5475%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (427 samples, 0.14%)</title><rect x="8.2975%" y="341" width="0.1430%" height="15" fill="rgb(247,98,35)" fg:x="24768" fg:w="427"/><text x="8.5475%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (427 samples, 0.14%)</title><rect x="8.2975%" y="325" width="0.1430%" height="15" fill="rgb(247,138,52)" fg:x="24768" fg:w="427"/><text x="8.5475%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (6,684 samples, 2.24%)</title><rect x="8.4405%" y="357" width="2.2392%" height="15" fill="rgb(213,79,30)" fg:x="25195" fg:w="6684"/><text x="8.6905%" y="367.50">&lt;..</text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::clone::Clone&gt;::clone (78 samples, 0.03%)</title><rect x="10.6921%" y="341" width="0.0261%" height="15" fill="rgb(246,177,23)" fg:x="31916" fg:w="78"/><text x="10.9421%" y="351.50"></text></g><g><title>&lt;fastiron::particles::mc_particle::MCParticle&lt;T&gt; as core::clone::Clone&gt;::clone (147 samples, 0.05%)</title><rect x="10.6797%" y="357" width="0.0492%" height="15" fill="rgb(230,62,27)" fg:x="31879" fg:w="147"/><text x="10.9297%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (202 samples, 0.07%)</title><rect x="10.7289%" y="357" width="0.0677%" height="15" fill="rgb(216,154,8)" fg:x="32026" fg:w="202"/><text x="10.9789%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (182 samples, 0.06%)</title><rect x="10.7966%" y="357" width="0.0610%" height="15" fill="rgb(244,35,45)" fg:x="32228" fg:w="182"/><text x="11.0466%" y="367.50"></text></g><g><title>core::ptr::write (167 samples, 0.06%)</title><rect x="10.8016%" y="341" width="0.0559%" height="15" fill="rgb(251,115,12)" fg:x="32243" fg:w="167"/><text x="11.0516%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (1,936 samples, 0.65%)</title><rect x="10.8576%" y="357" width="0.6486%" height="15" fill="rgb(240,54,50)" fg:x="32410" fg:w="1936"/><text x="11.1076%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (828 samples, 0.28%)</title><rect x="11.5115%" y="325" width="0.2774%" height="15" fill="rgb(233,84,52)" fg:x="34362" fg:w="828"/><text x="11.7615%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (828 samples, 0.28%)</title><rect x="11.5115%" y="309" width="0.2774%" height="15" fill="rgb(207,117,47)" fg:x="34362" fg:w="828"/><text x="11.7615%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,066 samples, 0.36%)</title><rect x="11.5062%" y="357" width="0.3571%" height="15" fill="rgb(249,43,39)" fg:x="34346" fg:w="1066"/><text x="11.7562%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,066 samples, 0.36%)</title><rect x="11.5062%" y="341" width="0.3571%" height="15" fill="rgb(209,38,44)" fg:x="34346" fg:w="1066"/><text x="11.7562%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (222 samples, 0.07%)</title><rect x="11.7889%" y="325" width="0.0744%" height="15" fill="rgb(236,212,23)" fg:x="35190" fg:w="222"/><text x="12.0389%" y="335.50"></text></g><g><title>_int_free (1,342 samples, 0.45%)</title><rect x="12.1561%" y="229" width="0.4496%" height="15" fill="rgb(242,79,21)" fg:x="36286" fg:w="1342"/><text x="12.4061%" y="239.50"></text></g><g><title>tcache_put (311 samples, 0.10%)</title><rect x="12.5015%" y="213" width="0.1042%" height="15" fill="rgb(211,96,35)" fg:x="37317" fg:w="311"/><text x="12.7515%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,236 samples, 0.75%)</title><rect x="11.8633%" y="309" width="0.7491%" height="15" fill="rgb(253,215,40)" fg:x="35412" fg:w="2236"/><text x="12.1133%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2,236 samples, 0.75%)</title><rect x="11.8633%" y="293" width="0.7491%" height="15" fill="rgb(211,81,21)" fg:x="35412" fg:w="2236"/><text x="12.1133%" y="303.50"></text></g><g><title>__rdl_dealloc (2,236 samples, 0.75%)</title><rect x="11.8633%" y="277" width="0.7491%" height="15" fill="rgb(208,190,38)" fg:x="35412" fg:w="2236"/><text x="12.1133%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,236 samples, 0.75%)</title><rect x="11.8633%" y="261" width="0.7491%" height="15" fill="rgb(235,213,38)" fg:x="35412" fg:w="2236"/><text x="12.1133%" y="271.50"></text></g><g><title>__GI___libc_free (2,236 samples, 0.75%)</title><rect x="11.8633%" y="245" width="0.7491%" height="15" fill="rgb(237,122,38)" fg:x="35412" fg:w="2236"/><text x="12.1133%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,426 samples, 0.81%)</title><rect x="11.8633%" y="325" width="0.8127%" height="15" fill="rgb(244,218,35)" fg:x="35412" fg:w="2426"/><text x="12.1133%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (190 samples, 0.06%)</title><rect x="12.6124%" y="309" width="0.0637%" height="15" fill="rgb(240,68,47)" fg:x="37648" fg:w="190"/><text x="12.8624%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (2,434 samples, 0.82%)</title><rect x="11.8633%" y="357" width="0.8154%" height="15" fill="rgb(210,16,53)" fg:x="35412" fg:w="2434"/><text x="12.1133%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (2,434 samples, 0.82%)</title><rect x="11.8633%" y="341" width="0.8154%" height="15" fill="rgb(235,124,12)" fg:x="35412" fg:w="2434"/><text x="12.1133%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (263 samples, 0.09%)</title><rect x="13.4311%" y="341" width="0.0881%" height="15" fill="rgb(224,169,11)" fg:x="40092" fg:w="263"/><text x="13.6811%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (263 samples, 0.09%)</title><rect x="13.4311%" y="325" width="0.0881%" height="15" fill="rgb(250,166,2)" fg:x="40092" fg:w="263"/><text x="13.6811%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (263 samples, 0.09%)</title><rect x="13.4311%" y="309" width="0.0881%" height="15" fill="rgb(242,216,29)" fg:x="40092" fg:w="263"/><text x="13.6811%" y="319.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (3,010 samples, 1.01%)</title><rect x="12.6787%" y="357" width="1.0084%" height="15" fill="rgb(230,116,27)" fg:x="37846" fg:w="3010"/><text x="12.9287%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (498 samples, 0.17%)</title><rect x="13.5202%" y="341" width="0.1668%" height="15" fill="rgb(228,99,48)" fg:x="40358" fg:w="498"/><text x="13.7702%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,160 samples, 0.39%)</title><rect x="13.6874%" y="341" width="0.3886%" height="15" fill="rgb(253,11,6)" fg:x="40857" fg:w="1160"/><text x="13.9374%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,160 samples, 0.39%)</title><rect x="13.6874%" y="325" width="0.3886%" height="15" fill="rgb(247,143,39)" fg:x="40857" fg:w="1160"/><text x="13.9374%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,160 samples, 0.39%)</title><rect x="13.6874%" y="309" width="0.3886%" height="15" fill="rgb(236,97,10)" fg:x="40857" fg:w="1160"/><text x="13.9374%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (597 samples, 0.20%)</title><rect x="14.0760%" y="341" width="0.2000%" height="15" fill="rgb(233,208,19)" fg:x="42017" fg:w="597"/><text x="14.3260%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_number_reactions (1,811 samples, 0.61%)</title><rect x="13.6871%" y="357" width="0.6067%" height="15" fill="rgb(216,164,2)" fg:x="40856" fg:w="1811"/><text x="13.9371%" y="367.50"></text></g><g><title>fastiron::main (53 samples, 0.02%)</title><rect x="14.2760%" y="341" width="0.0178%" height="15" fill="rgb(220,129,5)" fg:x="42614" fg:w="53"/><text x="14.5260%" y="351.50"></text></g><g><title>__GI___libc_malloc (160 samples, 0.05%)</title><rect x="14.3534%" y="213" width="0.0536%" height="15" fill="rgb(242,17,10)" fg:x="42845" fg:w="160"/><text x="14.6034%" y="223.50"></text></g><g><title>tcache_get (78 samples, 0.03%)</title><rect x="14.3809%" y="197" width="0.0261%" height="15" fill="rgb(242,107,0)" fg:x="42927" fg:w="78"/><text x="14.6309%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (194 samples, 0.06%)</title><rect x="14.3450%" y="229" width="0.0650%" height="15" fill="rgb(251,28,31)" fg:x="42820" fg:w="194"/><text x="14.5950%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (240 samples, 0.08%)</title><rect x="14.3397%" y="245" width="0.0804%" height="15" fill="rgb(233,223,10)" fg:x="42804" fg:w="240"/><text x="14.5897%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (255 samples, 0.09%)</title><rect x="14.3363%" y="293" width="0.0854%" height="15" fill="rgb(215,21,27)" fg:x="42794" fg:w="255"/><text x="14.5863%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (255 samples, 0.09%)</title><rect x="14.3363%" y="277" width="0.0854%" height="15" fill="rgb(232,23,21)" fg:x="42794" fg:w="255"/><text x="14.5863%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (245 samples, 0.08%)</title><rect x="14.3397%" y="261" width="0.0821%" height="15" fill="rgb(244,5,23)" fg:x="42804" fg:w="245"/><text x="14.5897%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.01%)</title><rect x="14.4217%" y="293" width="0.0147%" height="15" fill="rgb(226,81,46)" fg:x="43049" fg:w="44"/><text x="14.6717%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.01%)</title><rect x="14.4241%" y="277" width="0.0124%" height="15" fill="rgb(247,70,30)" fg:x="43056" fg:w="37"/><text x="14.6741%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (312 samples, 0.10%)</title><rect x="14.3326%" y="341" width="0.1045%" height="15" fill="rgb(212,68,19)" fg:x="42783" fg:w="312"/><text x="14.5826%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (312 samples, 0.10%)</title><rect x="14.3326%" y="325" width="0.1045%" height="15" fill="rgb(240,187,13)" fg:x="42783" fg:w="312"/><text x="14.5826%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (312 samples, 0.10%)</title><rect x="14.3326%" y="309" width="0.1045%" height="15" fill="rgb(223,113,26)" fg:x="42783" fg:w="312"/><text x="14.5826%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (49 samples, 0.02%)</title><rect x="14.4412%" y="341" width="0.0164%" height="15" fill="rgb(206,192,2)" fg:x="43107" fg:w="49"/><text x="14.6912%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (79 samples, 0.03%)</title><rect x="14.4576%" y="341" width="0.0265%" height="15" fill="rgb(241,108,4)" fg:x="43156" fg:w="79"/><text x="14.7076%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (78 samples, 0.03%)</title><rect x="14.4840%" y="341" width="0.0261%" height="15" fill="rgb(247,173,49)" fg:x="43235" fg:w="78"/><text x="14.7340%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_usize (41 samples, 0.01%)</title><rect x="14.5102%" y="341" width="0.0137%" height="15" fill="rgb(224,114,35)" fg:x="43313" fg:w="41"/><text x="14.7602%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (100 samples, 0.03%)</title><rect x="14.5598%" y="293" width="0.0335%" height="15" fill="rgb(245,159,27)" fg:x="43461" fg:w="100"/><text x="14.8098%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (32 samples, 0.01%)</title><rect x="14.5976%" y="293" width="0.0107%" height="15" fill="rgb(245,172,44)" fg:x="43574" fg:w="32"/><text x="14.8476%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.04%)</title><rect x="14.6867%" y="277" width="0.0385%" height="15" fill="rgb(236,23,11)" fg:x="43840" fg:w="115"/><text x="14.9367%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.04%)</title><rect x="14.6867%" y="261" width="0.0385%" height="15" fill="rgb(205,117,38)" fg:x="43840" fg:w="115"/><text x="14.9367%" y="271.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.03%)</title><rect x="14.6961%" y="245" width="0.0291%" height="15" fill="rgb(237,72,25)" fg:x="43868" fg:w="87"/><text x="14.9461%" y="255.50"></text></g><g><title>__rdl_alloc (87 samples, 0.03%)</title><rect x="14.6961%" y="229" width="0.0291%" height="15" fill="rgb(244,70,9)" fg:x="43868" fg:w="87"/><text x="14.9461%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (87 samples, 0.03%)</title><rect x="14.6961%" y="213" width="0.0291%" height="15" fill="rgb(217,125,39)" fg:x="43868" fg:w="87"/><text x="14.9461%" y="223.50"></text></g><g><title>checked_request2size (96 samples, 0.03%)</title><rect x="15.3018%" y="261" width="0.0322%" height="15" fill="rgb(235,36,10)" fg:x="45676" fg:w="96"/><text x="15.5518%" y="271.50"></text></g><g><title>__GI___libc_malloc (2,520 samples, 0.84%)</title><rect x="14.7252%" y="277" width="0.8442%" height="15" fill="rgb(251,123,47)" fg:x="43955" fg:w="2520"/><text x="14.9752%" y="287.50"></text></g><g><title>tcache_get (703 samples, 0.24%)</title><rect x="15.3340%" y="261" width="0.2355%" height="15" fill="rgb(221,13,13)" fg:x="45772" fg:w="703"/><text x="15.5840%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,979 samples, 1.00%)</title><rect x="14.6083%" y="293" width="0.9980%" height="15" fill="rgb(238,131,9)" fg:x="43606" fg:w="2979"/><text x="14.8583%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (110 samples, 0.04%)</title><rect x="15.5695%" y="277" width="0.0369%" height="15" fill="rgb(211,50,8)" fg:x="46475" fg:w="110"/><text x="15.8195%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (89 samples, 0.03%)</title><rect x="15.6063%" y="293" width="0.0298%" height="15" fill="rgb(245,182,24)" fg:x="46585" fg:w="89"/><text x="15.8563%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (89 samples, 0.03%)</title><rect x="15.6063%" y="277" width="0.0298%" height="15" fill="rgb(242,14,37)" fg:x="46585" fg:w="89"/><text x="15.8563%" y="287.50"></text></g><g><title>core::cmp::max (225 samples, 0.08%)</title><rect x="15.6361%" y="293" width="0.0754%" height="15" fill="rgb(246,228,12)" fg:x="46674" fg:w="225"/><text x="15.8861%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (225 samples, 0.08%)</title><rect x="15.6361%" y="277" width="0.0754%" height="15" fill="rgb(213,55,15)" fg:x="46674" fg:w="225"/><text x="15.8861%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,505 samples, 1.17%)</title><rect x="14.5393%" y="309" width="1.1742%" height="15" fill="rgb(209,9,3)" fg:x="43400" fg:w="3505"/><text x="14.7893%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3,619 samples, 1.21%)</title><rect x="14.5393%" y="325" width="1.2124%" height="15" fill="rgb(230,59,30)" fg:x="43400" fg:w="3619"/><text x="14.7893%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (114 samples, 0.04%)</title><rect x="15.7135%" y="309" width="0.0382%" height="15" fill="rgb(209,121,21)" fg:x="46905" fg:w="114"/><text x="15.9635%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (49 samples, 0.02%)</title><rect x="15.7517%" y="325" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="47019" fg:w="49"/><text x="16.0017%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (49 samples, 0.02%)</title><rect x="15.7517%" y="309" width="0.0164%" height="15" fill="rgb(232,18,1)" fg:x="47019" fg:w="49"/><text x="16.0017%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,755 samples, 1.26%)</title><rect x="14.5239%" y="341" width="1.2580%" height="15" fill="rgb(215,41,42)" fg:x="43354" fg:w="3755"/><text x="14.7739%" y="351.50"></text></g><g><title>core::ptr::write (41 samples, 0.01%)</title><rect x="15.7681%" y="325" width="0.0137%" height="15" fill="rgb(224,123,36)" fg:x="47068" fg:w="41"/><text x="16.0181%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (153 samples, 0.05%)</title><rect x="15.7819%" y="341" width="0.0513%" height="15" fill="rgb(240,125,3)" fg:x="47109" fg:w="153"/><text x="16.0319%" y="351.50"></text></g><g><title>_int_malloc (158 samples, 0.05%)</title><rect x="15.8998%" y="181" width="0.0529%" height="15" fill="rgb(205,98,50)" fg:x="47461" fg:w="158"/><text x="16.1498%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (372 samples, 0.12%)</title><rect x="15.8331%" y="293" width="0.1246%" height="15" fill="rgb(205,185,37)" fg:x="47262" fg:w="372"/><text x="16.0831%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (363 samples, 0.12%)</title><rect x="15.8361%" y="277" width="0.1216%" height="15" fill="rgb(238,207,15)" fg:x="47271" fg:w="363"/><text x="16.0861%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (363 samples, 0.12%)</title><rect x="15.8361%" y="261" width="0.1216%" height="15" fill="rgb(213,199,42)" fg:x="47271" fg:w="363"/><text x="16.0861%" y="271.50"></text></g><g><title>alloc::alloc::alloc_zeroed (363 samples, 0.12%)</title><rect x="15.8361%" y="245" width="0.1216%" height="15" fill="rgb(235,201,11)" fg:x="47271" fg:w="363"/><text x="16.0861%" y="255.50"></text></g><g><title>__rdl_alloc_zeroed (363 samples, 0.12%)</title><rect x="15.8361%" y="229" width="0.1216%" height="15" fill="rgb(207,46,11)" fg:x="47271" fg:w="363"/><text x="16.0861%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (363 samples, 0.12%)</title><rect x="15.8361%" y="213" width="0.1216%" height="15" fill="rgb(241,35,35)" fg:x="47271" fg:w="363"/><text x="16.0861%" y="223.50"></text></g><g><title>__libc_calloc (356 samples, 0.12%)</title><rect x="15.8385%" y="197" width="0.1193%" height="15" fill="rgb(243,32,47)" fg:x="47278" fg:w="356"/><text x="16.0885%" y="207.50"></text></g><g><title>alloc::vec::from_elem (373 samples, 0.12%)</title><rect x="15.8331%" y="341" width="0.1250%" height="15" fill="rgb(247,202,23)" fg:x="47262" fg:w="373"/><text x="16.0831%" y="351.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (373 samples, 0.12%)</title><rect x="15.8331%" y="325" width="0.1250%" height="15" fill="rgb(219,102,11)" fg:x="47262" fg:w="373"/><text x="16.0831%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (373 samples, 0.12%)</title><rect x="15.8331%" y="309" width="0.1250%" height="15" fill="rgb(243,110,44)" fg:x="47262" fg:w="373"/><text x="16.0831%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (74 samples, 0.02%)</title><rect x="15.9809%" y="277" width="0.0248%" height="15" fill="rgb(222,74,54)" fg:x="47703" fg:w="74"/><text x="16.2309%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (221 samples, 0.07%)</title><rect x="15.9581%" y="325" width="0.0740%" height="15" fill="rgb(216,99,12)" fg:x="47635" fg:w="221"/><text x="16.2081%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (221 samples, 0.07%)</title><rect x="15.9581%" y="309" width="0.0740%" height="15" fill="rgb(226,22,26)" fg:x="47635" fg:w="221"/><text x="16.2081%" y="319.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision::{{closure}} (221 samples, 0.07%)</title><rect x="15.9581%" y="293" width="0.0740%" height="15" fill="rgb(217,163,10)" fg:x="47635" fg:w="221"/><text x="16.2081%" y="303.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (79 samples, 0.03%)</title><rect x="16.0056%" y="277" width="0.0265%" height="15" fill="rgb(213,25,53)" fg:x="47777" fg:w="79"/><text x="16.2556%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (233 samples, 0.08%)</title><rect x="15.9581%" y="341" width="0.0781%" height="15" fill="rgb(252,105,26)" fg:x="47635" fg:w="233"/><text x="16.2081%" y="351.50"></text></g><g><title>_int_free (134 samples, 0.04%)</title><rect x="16.0549%" y="213" width="0.0449%" height="15" fill="rgb(220,39,43)" fg:x="47924" fg:w="134"/><text x="16.3049%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (193 samples, 0.06%)</title><rect x="16.0378%" y="341" width="0.0647%" height="15" fill="rgb(229,68,48)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (193 samples, 0.06%)</title><rect x="16.0378%" y="325" width="0.0647%" height="15" fill="rgb(252,8,32)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.06%)</title><rect x="16.0378%" y="309" width="0.0647%" height="15" fill="rgb(223,20,43)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (193 samples, 0.06%)</title><rect x="16.0378%" y="293" width="0.0647%" height="15" fill="rgb(229,81,49)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (193 samples, 0.06%)</title><rect x="16.0378%" y="277" width="0.0647%" height="15" fill="rgb(236,28,36)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="287.50"></text></g><g><title>__rdl_dealloc (193 samples, 0.06%)</title><rect x="16.0378%" y="261" width="0.0647%" height="15" fill="rgb(249,185,26)" fg:x="47873" fg:w="193"/><text x="16.2878%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (188 samples, 0.06%)</title><rect x="16.0395%" y="245" width="0.0630%" height="15" fill="rgb(249,174,33)" fg:x="47878" fg:w="188"/><text x="16.2895%" y="255.50"></text></g><g><title>__GI___libc_free (180 samples, 0.06%)</title><rect x="16.0422%" y="229" width="0.0603%" height="15" fill="rgb(233,201,37)" fg:x="47886" fg:w="180"/><text x="16.2922%" y="239.50"></text></g><g><title>fastiron::main (77 samples, 0.03%)</title><rect x="16.1025%" y="341" width="0.0258%" height="15" fill="rgb(221,78,26)" fg:x="48066" fg:w="77"/><text x="16.3525%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (73 samples, 0.02%)</title><rect x="16.2334%" y="325" width="0.0245%" height="15" fill="rgb(250,127,30)" fg:x="48457" fg:w="73"/><text x="16.4834%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (77 samples, 0.03%)</title><rect x="16.2579%" y="325" width="0.0258%" height="15" fill="rgb(230,49,44)" fg:x="48530" fg:w="77"/><text x="16.5079%" y="335.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (5,958 samples, 2.00%)</title><rect x="14.2938%" y="357" width="1.9960%" height="15" fill="rgb(229,67,23)" fg:x="42667" fg:w="5958"/><text x="14.5438%" y="367.50">f..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (482 samples, 0.16%)</title><rect x="16.1283%" y="341" width="0.1615%" height="15" fill="rgb(249,83,47)" fg:x="48143" fg:w="482"/><text x="16.3783%" y="351.50"></text></g><g><title>fastiron::main (2,312 samples, 0.77%)</title><rect x="16.2897%" y="357" width="0.7745%" height="15" fill="rgb(215,43,3)" fg:x="48625" fg:w="2312"/><text x="16.5397%" y="367.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::get_current_xs (150 samples, 0.05%)</title><rect x="17.0643%" y="357" width="0.0503%" height="15" fill="rgb(238,154,13)" fg:x="50937" fg:w="150"/><text x="17.3143%" y="367.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (143 samples, 0.05%)</title><rect x="17.0666%" y="341" width="0.0479%" height="15" fill="rgb(219,56,2)" fg:x="50944" fg:w="143"/><text x="17.3166%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (45 samples, 0.02%)</title><rect x="17.0994%" y="325" width="0.0151%" height="15" fill="rgb(233,0,4)" fg:x="51042" fg:w="45"/><text x="17.3494%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (58 samples, 0.02%)</title><rect x="17.1145%" y="341" width="0.0194%" height="15" fill="rgb(235,30,7)" fg:x="51087" fg:w="58"/><text x="17.3645%" y="351.50"></text></g><g><title>fastiron::main (44 samples, 0.01%)</title><rect x="17.1373%" y="325" width="0.0147%" height="15" fill="rgb(250,79,13)" fg:x="51155" fg:w="44"/><text x="17.3873%" y="335.50"></text></g><g><title>do_cos (1,484 samples, 0.50%)</title><rect x="17.5028%" y="293" width="0.4972%" height="15" fill="rgb(211,146,34)" fg:x="52246" fg:w="1484"/><text x="17.7528%" y="303.50"></text></g><g><title>do_sin (3,241 samples, 1.09%)</title><rect x="17.9999%" y="293" width="1.0858%" height="15" fill="rgb(228,22,38)" fg:x="53730" fg:w="3241"/><text x="18.2499%" y="303.50"></text></g><g><title>libc_feholdsetround_sse_ctx (121 samples, 0.04%)</title><rect x="19.0857%" y="293" width="0.0405%" height="15" fill="rgb(235,168,5)" fg:x="56971" fg:w="121"/><text x="19.3357%" y="303.50"></text></g><g><title>libc_feresetround_sse_ctx (57 samples, 0.02%)</title><rect x="19.1262%" y="293" width="0.0191%" height="15" fill="rgb(221,155,16)" fg:x="57092" fg:w="57"/><text x="19.3762%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sin (7,077 samples, 2.37%)</title><rect x="17.1373%" y="341" width="2.3708%" height="15" fill="rgb(215,215,53)" fg:x="51155" fg:w="7077"/><text x="17.3873%" y="351.50">&lt;f..</text></g><g><title>std::f64::&lt;impl f64&gt;::sin (7,033 samples, 2.36%)</title><rect x="17.1520%" y="325" width="2.3561%" height="15" fill="rgb(223,4,10)" fg:x="51199" fg:w="7033"/><text x="17.4020%" y="335.50">s..</text></g><g><title>__sincos (7,020 samples, 2.35%)</title><rect x="17.1564%" y="309" width="2.3518%" height="15" fill="rgb(234,103,6)" fg:x="51212" fg:w="7020"/><text x="17.4064%" y="319.50">_..</text></g><g><title>reduce_sincos (1,083 samples, 0.36%)</title><rect x="19.1453%" y="293" width="0.3628%" height="15" fill="rgb(227,97,0)" fg:x="57149" fg:w="1083"/><text x="19.3953%" y="303.50"></text></g><g><title>fastiron::main (38 samples, 0.01%)</title><rect x="19.5081%" y="325" width="0.0127%" height="15" fill="rgb(234,150,53)" fg:x="58232" fg:w="38"/><text x="19.7581%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (474 samples, 0.16%)</title><rect x="19.5081%" y="341" width="0.1588%" height="15" fill="rgb(228,201,54)" fg:x="58232" fg:w="474"/><text x="19.7581%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (436 samples, 0.15%)</title><rect x="19.5209%" y="325" width="0.1461%" height="15" fill="rgb(222,22,37)" fg:x="58270" fg:w="436"/><text x="19.7709%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (209 samples, 0.07%)</title><rect x="19.6924%" y="325" width="0.0700%" height="15" fill="rgb(237,53,32)" fg:x="58782" fg:w="209"/><text x="19.9424%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (240 samples, 0.08%)</title><rect x="19.7624%" y="325" width="0.0804%" height="15" fill="rgb(233,25,53)" fg:x="58991" fg:w="240"/><text x="20.0124%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (310 samples, 0.10%)</title><rect x="19.8428%" y="325" width="0.1039%" height="15" fill="rgb(210,40,34)" fg:x="59231" fg:w="310"/><text x="20.0928%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (205 samples, 0.07%)</title><rect x="19.9467%" y="325" width="0.0687%" height="15" fill="rgb(241,220,44)" fg:x="59541" fg:w="205"/><text x="20.1967%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (49 samples, 0.02%)</title><rect x="20.0153%" y="325" width="0.0164%" height="15" fill="rgb(235,28,35)" fg:x="59746" fg:w="49"/><text x="20.2653%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (49 samples, 0.02%)</title><rect x="20.0153%" y="309" width="0.0164%" height="15" fill="rgb(210,56,17)" fg:x="59746" fg:w="49"/><text x="20.2653%" y="319.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::rotate_direction (1,129 samples, 0.38%)</title><rect x="19.6710%" y="341" width="0.3782%" height="15" fill="rgb(224,130,29)" fg:x="58718" fg:w="1129"/><text x="19.9210%" y="351.50"></text></g><g><title>fastiron::main (49 samples, 0.02%)</title><rect x="20.0328%" y="325" width="0.0164%" height="15" fill="rgb(235,212,8)" fg:x="59798" fg:w="49"/><text x="20.2828%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (48 samples, 0.02%)</title><rect x="20.0763%" y="325" width="0.0161%" height="15" fill="rgb(223,33,50)" fg:x="59928" fg:w="48"/><text x="20.3263%" y="335.50"></text></g><g><title>[libm.so.6] (54 samples, 0.02%)</title><rect x="20.0934%" y="261" width="0.0181%" height="15" fill="rgb(219,149,13)" fg:x="59979" fg:w="54"/><text x="20.3434%" y="271.50"></text></g><g><title>__ieee754_log_fma (1,886 samples, 0.63%)</title><rect x="20.1115%" y="261" width="0.6318%" height="15" fill="rgb(250,156,29)" fg:x="60033" fg:w="1886"/><text x="20.3615%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::ln (2,013 samples, 0.67%)</title><rect x="20.0924%" y="325" width="0.6744%" height="15" fill="rgb(216,193,19)" fg:x="59976" fg:w="2013"/><text x="20.3424%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (2,013 samples, 0.67%)</title><rect x="20.0924%" y="309" width="0.6744%" height="15" fill="rgb(216,135,14)" fg:x="59976" fg:w="2013"/><text x="20.3424%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (2,013 samples, 0.67%)</title><rect x="20.0924%" y="293" width="0.6744%" height="15" fill="rgb(241,47,5)" fg:x="59976" fg:w="2013"/><text x="20.3424%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (2,010 samples, 0.67%)</title><rect x="20.0934%" y="277" width="0.6734%" height="15" fill="rgb(233,42,35)" fg:x="59979" fg:w="2010"/><text x="20.3434%" y="287.50"></text></g><g><title>__log (70 samples, 0.02%)</title><rect x="20.7433%" y="261" width="0.0235%" height="15" fill="rgb(231,13,6)" fg:x="61919" fg:w="70"/><text x="20.9933%" y="271.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_num_mfp (2,313 samples, 0.77%)</title><rect x="20.0492%" y="341" width="0.7749%" height="15" fill="rgb(207,181,40)" fg:x="59847" fg:w="2313"/><text x="20.2992%" y="351.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (171 samples, 0.06%)</title><rect x="20.7668%" y="325" width="0.0573%" height="15" fill="rgb(254,173,49)" fg:x="61989" fg:w="171"/><text x="21.0168%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (49 samples, 0.02%)</title><rect x="20.8076%" y="309" width="0.0164%" height="15" fill="rgb(221,1,38)" fg:x="62111" fg:w="49"/><text x="21.0576%" y="319.50"></text></g><g><title>fastiron::simulation::collision_event::update_trajectory (11,315 samples, 3.79%)</title><rect x="17.1145%" y="357" width="3.7906%" height="15" fill="rgb(206,124,46)" fg:x="51087" fg:w="11315"/><text x="17.3645%" y="367.50">fast..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (242 samples, 0.08%)</title><rect x="20.8241%" y="341" width="0.0811%" height="15" fill="rgb(249,21,11)" fg:x="62160" fg:w="242"/><text x="21.0741%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (41 samples, 0.01%)</title><rect x="20.8914%" y="325" width="0.0137%" height="15" fill="rgb(222,201,40)" fg:x="62361" fg:w="41"/><text x="21.1414%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (8,754 samples, 2.93%)</title><rect x="22.2475%" y="341" width="2.9327%" height="15" fill="rgb(235,61,29)" fg:x="66409" fg:w="8754"/><text x="22.4975%" y="351.50">&lt;f..</text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_reaction_cross_section (6,616 samples, 2.22%)</title><rect x="25.1802%" y="341" width="2.2164%" height="15" fill="rgb(219,207,3)" fg:x="75163" fg:w="6616"/><text x="25.4302%" y="351.50">f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,676 samples, 1.57%)</title><rect x="25.8301%" y="325" width="1.5665%" height="15" fill="rgb(222,56,46)" fg:x="77103" fg:w="4676"/><text x="26.0801%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,676 samples, 1.57%)</title><rect x="25.8301%" y="309" width="1.5665%" height="15" fill="rgb(239,76,54)" fg:x="77103" fg:w="4676"/><text x="26.0801%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,676 samples, 1.57%)</title><rect x="25.8301%" y="293" width="1.5665%" height="15" fill="rgb(231,124,27)" fg:x="77103" fg:w="4676"/><text x="26.0801%" y="303.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_cross_section (24,394 samples, 8.17%)</title><rect x="20.9051%" y="357" width="8.1722%" height="15" fill="rgb(249,195,6)" fg:x="62402" fg:w="24394"/><text x="21.1551%" y="367.50">fastiron::s..</text></g><g><title>fastiron::main (5,017 samples, 1.68%)</title><rect x="27.3966%" y="341" width="1.6807%" height="15" fill="rgb(237,174,47)" fg:x="81779" fg:w="5017"/><text x="27.6466%" y="351.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (69,894 samples, 23.41%)</title><rect x="5.6636%" y="373" width="23.4150%" height="15" fill="rgb(206,201,31)" fg:x="16906" fg:w="69894"/><text x="5.9136%" y="383.50">fastiron::simulation::collision_event..</text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (537 samples, 0.18%)</title><rect x="29.0786%" y="373" width="0.1799%" height="15" fill="rgb(231,57,52)" fg:x="86800" fg:w="537"/><text x="29.3286%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (268 samples, 0.09%)</title><rect x="29.1687%" y="357" width="0.0898%" height="15" fill="rgb(248,177,22)" fg:x="87069" fg:w="268"/><text x="29.4187%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (163 samples, 0.05%)</title><rect x="36.9416%" y="357" width="0.0546%" height="15" fill="rgb(215,211,37)" fg:x="110271" fg:w="163"/><text x="37.1916%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (163 samples, 0.05%)</title><rect x="36.9416%" y="341" width="0.0546%" height="15" fill="rgb(241,128,51)" fg:x="110271" fg:w="163"/><text x="37.1916%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (163 samples, 0.05%)</title><rect x="36.9416%" y="325" width="0.0546%" height="15" fill="rgb(227,165,31)" fg:x="110271" fg:w="163"/><text x="37.1916%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (309 samples, 0.10%)</title><rect x="36.9962%" y="357" width="0.1035%" height="15" fill="rgb(228,167,24)" fg:x="110434" fg:w="309"/><text x="37.2462%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (309 samples, 0.10%)</title><rect x="36.9962%" y="341" width="0.1035%" height="15" fill="rgb(228,143,12)" fg:x="110434" fg:w="309"/><text x="37.2462%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (309 samples, 0.10%)</title><rect x="36.9962%" y="325" width="0.1035%" height="15" fill="rgb(249,149,8)" fg:x="110434" fg:w="309"/><text x="37.2462%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (19,776 samples, 6.63%)</title><rect x="37.0997%" y="357" width="6.6251%" height="15" fill="rgb(243,35,44)" fg:x="110743" fg:w="19776"/><text x="37.3497%" y="367.50">&lt;f64 as c..</text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (1,638 samples, 0.55%)</title><rect x="43.7248%" y="357" width="0.5487%" height="15" fill="rgb(246,89,9)" fg:x="130519" fg:w="1638"/><text x="43.9748%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (58 samples, 0.02%)</title><rect x="44.2736%" y="357" width="0.0194%" height="15" fill="rgb(233,213,13)" fg:x="132157" fg:w="58"/><text x="44.5236%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (946 samples, 0.32%)</title><rect x="44.2930%" y="357" width="0.3169%" height="15" fill="rgb(233,141,41)" fg:x="132215" fg:w="946"/><text x="44.5430%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (110 samples, 0.04%)</title><rect x="44.6102%" y="357" width="0.0369%" height="15" fill="rgb(239,167,4)" fg:x="133162" fg:w="110"/><text x="44.8602%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (216 samples, 0.07%)</title><rect x="44.6471%" y="357" width="0.0724%" height="15" fill="rgb(209,217,16)" fg:x="133272" fg:w="216"/><text x="44.8971%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (764 samples, 0.26%)</title><rect x="44.7194%" y="357" width="0.2559%" height="15" fill="rgb(219,88,35)" fg:x="133488" fg:w="764"/><text x="44.9694%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (288 samples, 0.10%)</title><rect x="45.0089%" y="341" width="0.0965%" height="15" fill="rgb(220,193,23)" fg:x="134352" fg:w="288"/><text x="45.2589%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (702 samples, 0.24%)</title><rect x="45.1054%" y="341" width="0.2352%" height="15" fill="rgb(230,90,52)" fg:x="134640" fg:w="702"/><text x="45.3554%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (732 samples, 0.25%)</title><rect x="45.3406%" y="341" width="0.2452%" height="15" fill="rgb(252,106,19)" fg:x="135342" fg:w="732"/><text x="45.5906%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (1,172 samples, 0.39%)</title><rect x="45.5858%" y="341" width="0.3926%" height="15" fill="rgb(206,74,20)" fg:x="136074" fg:w="1172"/><text x="45.8358%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1,172 samples, 0.39%)</title><rect x="45.5858%" y="325" width="0.3926%" height="15" fill="rgb(230,138,44)" fg:x="136074" fg:w="1172"/><text x="45.8358%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::get_speed (3,069 samples, 1.03%)</title><rect x="44.9771%" y="357" width="1.0281%" height="15" fill="rgb(235,182,43)" fg:x="134257" fg:w="3069"/><text x="45.2271%" y="367.50"></text></g><g><title>fastiron::main (80 samples, 0.03%)</title><rect x="45.9784%" y="341" width="0.0268%" height="15" fill="rgb(242,16,51)" fg:x="137246" fg:w="80"/><text x="46.2284%" y="351.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::AddAssign&gt;::add_assign (402 samples, 0.13%)</title><rect x="46.0183%" y="341" width="0.1347%" height="15" fill="rgb(248,9,4)" fg:x="137365" fg:w="402"/><text x="46.2683%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (402 samples, 0.13%)</title><rect x="46.0183%" y="325" width="0.1347%" height="15" fill="rgb(210,31,22)" fg:x="137365" fg:w="402"/><text x="46.2683%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::move_particle_along_segment (658 samples, 0.22%)</title><rect x="46.0052%" y="357" width="0.2204%" height="15" fill="rgb(239,54,39)" fg:x="137326" fg:w="658"/><text x="46.2552%" y="367.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (217 samples, 0.07%)</title><rect x="46.1529%" y="341" width="0.0727%" height="15" fill="rgb(230,99,41)" fg:x="137767" fg:w="217"/><text x="46.4029%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (217 samples, 0.07%)</title><rect x="46.1529%" y="325" width="0.0727%" height="15" fill="rgb(253,106,12)" fg:x="137767" fg:w="217"/><text x="46.4029%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (39 samples, 0.01%)</title><rect x="46.2327%" y="341" width="0.0131%" height="15" fill="rgb(213,46,41)" fg:x="138005" fg:w="39"/><text x="46.4827%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (193 samples, 0.06%)</title><rect x="46.2457%" y="309" width="0.0647%" height="15" fill="rgb(215,133,35)" fg:x="138044" fg:w="193"/><text x="46.4957%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (193 samples, 0.06%)</title><rect x="46.2457%" y="293" width="0.0647%" height="15" fill="rgb(213,28,5)" fg:x="138044" fg:w="193"/><text x="46.4957%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (779 samples, 0.26%)</title><rect x="46.3104%" y="277" width="0.2610%" height="15" fill="rgb(215,77,49)" fg:x="138237" fg:w="779"/><text x="46.5604%" y="287.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (724 samples, 0.24%)</title><rect x="46.6467%" y="261" width="0.2425%" height="15" fill="rgb(248,100,22)" fg:x="139241" fg:w="724"/><text x="46.8967%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (431 samples, 0.14%)</title><rect x="46.8990%" y="245" width="0.1444%" height="15" fill="rgb(208,67,9)" fg:x="139994" fg:w="431"/><text x="47.1490%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (431 samples, 0.14%)</title><rect x="46.8990%" y="229" width="0.1444%" height="15" fill="rgb(219,133,21)" fg:x="139994" fg:w="431"/><text x="47.1490%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (431 samples, 0.14%)</title><rect x="46.8990%" y="213" width="0.1444%" height="15" fill="rgb(246,46,29)" fg:x="139994" fg:w="431"/><text x="47.1490%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (177 samples, 0.06%)</title><rect x="47.0434%" y="245" width="0.0593%" height="15" fill="rgb(246,185,52)" fg:x="140425" fg:w="177"/><text x="47.2934%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (546 samples, 0.18%)</title><rect x="47.1027%" y="213" width="0.1829%" height="15" fill="rgb(252,136,11)" fg:x="140602" fg:w="546"/><text x="47.3527%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (546 samples, 0.18%)</title><rect x="47.1027%" y="197" width="0.1829%" height="15" fill="rgb(219,138,53)" fg:x="140602" fg:w="546"/><text x="47.3527%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (454 samples, 0.15%)</title><rect x="47.1335%" y="181" width="0.1521%" height="15" fill="rgb(211,51,23)" fg:x="140694" fg:w="454"/><text x="47.3835%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,044 samples, 0.35%)</title><rect x="47.5767%" y="181" width="0.3497%" height="15" fill="rgb(247,221,28)" fg:x="142017" fg:w="1044"/><text x="47.8267%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,044 samples, 0.35%)</title><rect x="47.5767%" y="165" width="0.3497%" height="15" fill="rgb(251,222,45)" fg:x="142017" fg:w="1044"/><text x="47.8267%" y="175.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,044 samples, 0.35%)</title><rect x="47.5767%" y="149" width="0.3497%" height="15" fill="rgb(217,162,53)" fg:x="142017" fg:w="1044"/><text x="47.8267%" y="159.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section::{{closure}} (6,016 samples, 2.02%)</title><rect x="47.2856%" y="197" width="2.0154%" height="15" fill="rgb(229,93,14)" fg:x="141148" fg:w="6016"/><text x="47.5356%" y="207.50">f..</text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (4,103 samples, 1.37%)</title><rect x="47.9265%" y="181" width="1.3745%" height="15" fill="rgb(209,67,49)" fg:x="143061" fg:w="4103"/><text x="48.1765%" y="191.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section (7,488 samples, 2.51%)</title><rect x="46.8987%" y="261" width="2.5085%" height="15" fill="rgb(213,87,29)" fg:x="139993" fg:w="7488"/><text x="47.1487%" y="271.50">fa..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6,879 samples, 2.30%)</title><rect x="47.1027%" y="245" width="2.3045%" height="15" fill="rgb(205,151,52)" fg:x="140602" fg:w="6879"/><text x="47.3527%" y="255.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,879 samples, 2.30%)</title><rect x="47.1027%" y="229" width="2.3045%" height="15" fill="rgb(253,215,39)" fg:x="140602" fg:w="6879"/><text x="47.3527%" y="239.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6,333 samples, 2.12%)</title><rect x="47.2856%" y="213" width="2.1216%" height="15" fill="rgb(221,220,41)" fg:x="141148" fg:w="6333"/><text x="47.5356%" y="223.50">c..</text></g><g><title>fastiron::main (317 samples, 0.11%)</title><rect x="49.3010%" y="197" width="0.1062%" height="15" fill="rgb(218,133,21)" fg:x="147164" fg:w="317"/><text x="49.5510%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,440 samples, 3.16%)</title><rect x="46.2457%" y="325" width="3.1625%" height="15" fill="rgb(221,193,43)" fg:x="138044" fg:w="9440"/><text x="46.4957%" y="335.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9,247 samples, 3.10%)</title><rect x="46.3104%" y="309" width="3.0978%" height="15" fill="rgb(240,128,52)" fg:x="138237" fg:w="9247"/><text x="46.5604%" y="319.50">cor..</text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section::{{closure}} (9,247 samples, 3.10%)</title><rect x="46.3104%" y="293" width="3.0978%" height="15" fill="rgb(253,114,12)" fg:x="138237" fg:w="9247"/><text x="46.5604%" y="303.50">fas..</text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_total_cross_section (8,468 samples, 2.84%)</title><rect x="46.5714%" y="277" width="2.8368%" height="15" fill="rgb(215,223,47)" fg:x="139016" fg:w="8468"/><text x="46.8214%" y="287.50">fa..</text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (9,506 samples, 3.18%)</title><rect x="46.2256%" y="357" width="3.1846%" height="15" fill="rgb(248,225,23)" fg:x="137984" fg:w="9506"/><text x="46.4756%" y="367.50">fas..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,446 samples, 3.16%)</title><rect x="46.2457%" y="341" width="3.1645%" height="15" fill="rgb(250,108,0)" fg:x="138044" fg:w="9446"/><text x="46.4957%" y="351.50">cor..</text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min (355 samples, 0.12%)</title><rect x="49.4102%" y="357" width="0.1189%" height="15" fill="rgb(228,208,7)" fg:x="147490" fg:w="355"/><text x="49.6602%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (355 samples, 0.12%)</title><rect x="49.4102%" y="341" width="0.1189%" height="15" fill="rgb(244,45,10)" fg:x="147490" fg:w="355"/><text x="49.6602%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (355 samples, 0.12%)</title><rect x="49.4102%" y="325" width="0.1189%" height="15" fill="rgb(207,125,25)" fg:x="147490" fg:w="355"/><text x="49.6602%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (355 samples, 0.12%)</title><rect x="49.4102%" y="309" width="0.1189%" height="15" fill="rgb(210,195,18)" fg:x="147490" fg:w="355"/><text x="49.6602%" y="319.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min::{{closure}} (355 samples, 0.12%)</title><rect x="49.4102%" y="293" width="0.1189%" height="15" fill="rgb(249,80,12)" fg:x="147490" fg:w="355"/><text x="49.6602%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (210 samples, 0.07%)</title><rect x="49.4588%" y="277" width="0.0704%" height="15" fill="rgb(221,65,9)" fg:x="147635" fg:w="210"/><text x="49.7088%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (109 samples, 0.04%)</title><rect x="49.5358%" y="341" width="0.0365%" height="15" fill="rgb(235,49,36)" fg:x="147865" fg:w="109"/><text x="49.7858%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (107 samples, 0.04%)</title><rect x="49.5724%" y="341" width="0.0358%" height="15" fill="rgb(225,32,20)" fg:x="147974" fg:w="107"/><text x="49.8224%" y="351.50"></text></g><g><title>fastiron::main (2,308 samples, 0.77%)</title><rect x="49.6082%" y="341" width="0.7732%" height="15" fill="rgb(215,141,46)" fg:x="148081" fg:w="2308"/><text x="49.8582%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (1,497 samples, 0.50%)</title><rect x="49.8799%" y="325" width="0.5015%" height="15" fill="rgb(250,160,47)" fg:x="148892" fg:w="1497"/><text x="50.1299%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,035 samples, 1.02%)</title><rect x="50.5111%" y="293" width="1.0167%" height="15" fill="rgb(216,222,40)" fg:x="150776" fg:w="3035"/><text x="50.7611%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,035 samples, 1.02%)</title><rect x="50.5111%" y="277" width="1.0167%" height="15" fill="rgb(234,217,39)" fg:x="150776" fg:w="3035"/><text x="50.7611%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3,004 samples, 1.01%)</title><rect x="50.5214%" y="261" width="1.0064%" height="15" fill="rgb(207,178,40)" fg:x="150807" fg:w="3004"/><text x="50.7714%" y="271.50"></text></g><g><title>fastiron::main (13,872 samples, 4.65%)</title><rect x="51.5278%" y="277" width="4.6472%" height="15" fill="rgb(221,136,13)" fg:x="153811" fg:w="13872"/><text x="51.7778%" y="287.50">fasti..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,683 samples, 0.56%)</title><rect x="63.0829%" y="261" width="0.5638%" height="15" fill="rgb(249,199,10)" fg:x="188303" fg:w="1683"/><text x="63.3329%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,683 samples, 0.56%)</title><rect x="63.0829%" y="245" width="0.5638%" height="15" fill="rgb(249,222,13)" fg:x="188303" fg:w="1683"/><text x="63.3329%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,683 samples, 0.56%)</title><rect x="63.0829%" y="229" width="0.5638%" height="15" fill="rgb(244,185,38)" fg:x="188303" fg:w="1683"/><text x="63.3329%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (5,309 samples, 1.78%)</title><rect x="63.6467%" y="261" width="1.7786%" height="15" fill="rgb(236,202,9)" fg:x="189986" fg:w="5309"/><text x="63.8967%" y="271.50">&lt;..</text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3,412 samples, 1.14%)</title><rect x="65.4252%" y="261" width="1.1430%" height="15" fill="rgb(250,229,37)" fg:x="195295" fg:w="3412"/><text x="65.6752%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (1,395 samples, 0.47%)</title><rect x="66.5683%" y="261" width="0.4673%" height="15" fill="rgb(206,174,23)" fg:x="198707" fg:w="1395"/><text x="66.8183%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (35,153 samples, 11.78%)</title><rect x="67.0356%" y="261" width="11.7765%" height="15" fill="rgb(211,33,43)" fg:x="200102" fg:w="35153"/><text x="67.2856%" y="271.50">core::option::Opt..</text></g><g><title>fastiron::main (4,876 samples, 1.63%)</title><rect x="78.8121%" y="261" width="1.6335%" height="15" fill="rgb(245,58,50)" fg:x="235255" fg:w="4876"/><text x="79.0621%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (4,579 samples, 1.53%)</title><rect x="86.0597%" y="245" width="1.5340%" height="15" fill="rgb(244,68,36)" fg:x="256889" fg:w="4579"/><text x="86.3097%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (2,979 samples, 1.00%)</title><rect x="87.5937%" y="245" width="0.9980%" height="15" fill="rgb(232,229,15)" fg:x="261468" fg:w="2979"/><text x="87.8437%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (2,031 samples, 0.68%)</title><rect x="88.5917%" y="245" width="0.6804%" height="15" fill="rgb(254,30,23)" fg:x="264447" fg:w="2031"/><text x="88.8417%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Neg&gt;::neg (490 samples, 0.16%)</title><rect x="89.2721%" y="245" width="0.1642%" height="15" fill="rgb(235,160,14)" fg:x="266478" fg:w="490"/><text x="89.5221%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (3,666 samples, 1.23%)</title><rect x="89.4362%" y="245" width="1.2281%" height="15" fill="rgb(212,155,44)" fg:x="266968" fg:w="3666"/><text x="89.6862%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (472 samples, 0.16%)</title><rect x="90.6644%" y="245" width="0.1581%" height="15" fill="rgb(226,2,50)" fg:x="270634" fg:w="472"/><text x="90.9144%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (472 samples, 0.16%)</title><rect x="90.6644%" y="229" width="0.1581%" height="15" fill="rgb(234,177,6)" fg:x="270634" fg:w="472"/><text x="90.9144%" y="239.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Add&gt;::add (2,548 samples, 0.85%)</title><rect x="90.8225%" y="245" width="0.8536%" height="15" fill="rgb(217,24,9)" fg:x="271106" fg:w="2548"/><text x="91.0725%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2,548 samples, 0.85%)</title><rect x="90.8225%" y="229" width="0.8536%" height="15" fill="rgb(220,13,46)" fg:x="271106" fg:w="2548"/><text x="91.0725%" y="239.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (2,565 samples, 0.86%)</title><rect x="91.6761%" y="245" width="0.8593%" height="15" fill="rgb(239,221,27)" fg:x="273654" fg:w="2565"/><text x="91.9261%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (2,565 samples, 0.86%)</title><rect x="91.6761%" y="229" width="0.8593%" height="15" fill="rgb(222,198,25)" fg:x="273654" fg:w="2565"/><text x="91.9261%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (726 samples, 0.24%)</title><rect x="92.5354%" y="245" width="0.2432%" height="15" fill="rgb(211,99,13)" fg:x="276219" fg:w="726"/><text x="92.7854%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (3,407 samples, 1.14%)</title><rect x="92.7786%" y="245" width="1.1414%" height="15" fill="rgb(232,111,31)" fg:x="276945" fg:w="3407"/><text x="93.0286%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (131,049 samples, 43.90%)</title><rect x="50.5111%" y="325" width="43.9024%" height="15" fill="rgb(245,82,37)" fg:x="150776" fg:w="131049"/><text x="50.7611%" y="335.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (131,049 samples, 43.90%)</title><rect x="50.5111%" y="309" width="43.9024%" height="15" fill="rgb(227,149,46)" fg:x="150776" fg:w="131049"/><text x="50.7611%" y="319.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (128,014 samples, 42.89%)</title><rect x="51.5278%" y="293" width="42.8856%" height="15" fill="rgb(218,36,50)" fg:x="153811" fg:w="128014"/><text x="51.7778%" y="303.50">core::iter::traits::iterator::Iterator::for_each::call::{{closure}}</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg::{{closure}} (114,142 samples, 38.24%)</title><rect x="56.1750%" y="277" width="38.2384%" height="15" fill="rgb(226,80,48)" fg:x="167683" fg:w="114142"/><text x="56.4250%" y="287.50">fastiron::simulation::mct::mct_nf_3dg::{{closure}}</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg_dist_to_segment (41,694 samples, 13.97%)</title><rect x="80.4456%" y="261" width="13.9678%" height="15" fill="rgb(238,224,15)" fg:x="240131" fg:w="41694"/><text x="80.6956%" y="271.50">fastiron::simulation:..</text></g><g><title>fastiron::main (1,473 samples, 0.49%)</title><rect x="93.9200%" y="245" width="0.4935%" height="15" fill="rgb(241,136,10)" fg:x="280352" fg:w="1473"/><text x="94.1700%" y="255.50"></text></g><g><title>fastiron::main (258 samples, 0.09%)</title><rect x="94.4134%" y="325" width="0.0864%" height="15" fill="rgb(208,32,45)" fg:x="281825" fg:w="258"/><text x="94.6634%" y="335.50"></text></g><g><title>&lt;fastiron::geometry::facets::MCNearestFacet&lt;T&gt; as core::default::Default&gt;::default (91 samples, 0.03%)</title><rect x="94.9317%" y="293" width="0.0305%" height="15" fill="rgb(207,135,9)" fg:x="283372" fg:w="91"/><text x="95.1817%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (79 samples, 0.03%)</title><rect x="94.9622%" y="293" width="0.0265%" height="15" fill="rgb(206,86,44)" fg:x="283463" fg:w="79"/><text x="95.2122%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (656 samples, 0.22%)</title><rect x="95.0412%" y="229" width="0.2198%" height="15" fill="rgb(245,177,15)" fg:x="283699" fg:w="656"/><text x="95.2912%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (656 samples, 0.22%)</title><rect x="95.0412%" y="213" width="0.2198%" height="15" fill="rgb(206,64,50)" fg:x="283699" fg:w="656"/><text x="95.2912%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,511 samples, 0.84%)</title><rect x="94.9886%" y="245" width="0.8412%" height="15" fill="rgb(234,36,40)" fg:x="283542" fg:w="2511"/><text x="95.2386%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,698 samples, 0.57%)</title><rect x="95.2610%" y="229" width="0.5688%" height="15" fill="rgb(213,64,8)" fg:x="284355" fg:w="1698"/><text x="95.5110%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,990 samples, 1.00%)</title><rect x="94.9886%" y="261" width="1.0017%" height="15" fill="rgb(210,75,36)" fg:x="283542" fg:w="2990"/><text x="95.2386%" y="271.50"></text></g><g><title>fastiron::main (479 samples, 0.16%)</title><rect x="95.8298%" y="245" width="0.1605%" height="15" fill="rgb(229,88,21)" fg:x="286053" fg:w="479"/><text x="96.0798%" y="255.50"></text></g><g><title>fastiron::main (1,140 samples, 0.38%)</title><rect x="95.9903%" y="245" width="0.3819%" height="15" fill="rgb(252,204,47)" fg:x="286532" fg:w="1140"/><text x="96.2403%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (2,342 samples, 0.78%)</title><rect x="97.8486%" y="229" width="0.7846%" height="15" fill="rgb(208,77,27)" fg:x="292079" fg:w="2342"/><text x="98.0986%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13,221 samples, 4.43%)</title><rect x="94.9886%" y="277" width="4.4291%" height="15" fill="rgb(221,76,26)" fg:x="283542" fg:w="13221"/><text x="95.2386%" y="287.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10,231 samples, 3.43%)</title><rect x="95.9903%" y="261" width="3.4275%" height="15" fill="rgb(225,139,18)" fg:x="286532" fg:w="10231"/><text x="96.2403%" y="271.50">cor..</text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest::{{closure}} (9,091 samples, 3.05%)</title><rect x="96.3722%" y="245" width="3.0456%" height="15" fill="rgb(230,137,11)" fg:x="287672" fg:w="9091"/><text x="96.6222%" y="255.50">fas..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (2,342 samples, 0.78%)</title><rect x="98.6332%" y="229" width="0.7846%" height="15" fill="rgb(212,28,1)" fg:x="294421" fg:w="2342"/><text x="98.8832%" y="239.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (209,662 samples, 70.24%)</title><rect x="29.2585%" y="373" width="70.2383%" height="15" fill="rgb(248,164,17)" fg:x="87337" fg:w="209662"/><text x="29.5085%" y="383.50">fastiron::simulation::mc_segment_outcome::outcome</text></g><g><title>fastiron::simulation::mct::nearest_facet (149,154 samples, 49.97%)</title><rect x="49.5291%" y="357" width="49.9677%" height="15" fill="rgb(222,171,42)" fg:x="147845" fg:w="149154"/><text x="49.7791%" y="367.50">fastiron::simulation::mct::nearest_facet</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg (146,610 samples, 49.12%)</title><rect x="50.3814%" y="341" width="49.1154%" height="15" fill="rgb(243,84,45)" fg:x="150389" fg:w="146610"/><text x="50.6314%" y="351.50">fastiron::simulation::mct::mct_nf_3dg</text></g><g><title>fastiron::simulation::mct::mct_nf_find_nearest (14,916 samples, 5.00%)</title><rect x="94.4999%" y="325" width="4.9970%" height="15" fill="rgb(252,49,23)" fg:x="282083" fg:w="14916"/><text x="94.7499%" y="335.50">fastir..</text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest (14,152 samples, 4.74%)</title><rect x="94.7558%" y="309" width="4.7410%" height="15" fill="rgb(215,19,7)" fg:x="282847" fg:w="14152"/><text x="95.0058%" y="319.50">fastir..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13,457 samples, 4.51%)</title><rect x="94.9886%" y="293" width="4.5082%" height="15" fill="rgb(238,81,41)" fg:x="283542" fg:w="13457"/><text x="95.2386%" y="303.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (236 samples, 0.08%)</title><rect x="99.4178%" y="277" width="0.0791%" height="15" fill="rgb(210,199,37)" fg:x="296763" fg:w="236"/><text x="99.6678%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (293,788 samples, 98.42%)</title><rect x="1.1467%" y="437" width="98.4211%" height="15" fill="rgb(244,192,49)" fg:x="3423" fg:w="293788"/><text x="1.3967%" y="447.50">&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each</text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}} (293,779 samples, 98.42%)</title><rect x="1.1497%" y="421" width="98.4181%" height="15" fill="rgb(226,211,11)" fg:x="3432" fg:w="293779"/><text x="1.3997%" y="431.50">fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}}</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (293,740 samples, 98.41%)</title><rect x="1.1628%" y="405" width="98.4050%" height="15" fill="rgb(236,162,54)" fg:x="3471" fg:w="293740"/><text x="1.4128%" y="415.50">fastiron::simulation::cycle_tracking::cycle_tracking_guts</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (292,454 samples, 97.97%)</title><rect x="1.5936%" y="389" width="97.9742%" height="15" fill="rgb(220,229,9)" fg:x="4757" fg:w="292454"/><text x="1.8436%" y="399.50">fastiron::simulation::cycle_tracking::cycle_tracking_function</text></g><g><title>fastiron::simulation::mct::reflect_particle (212 samples, 0.07%)</title><rect x="99.4968%" y="373" width="0.0710%" height="15" fill="rgb(250,87,22)" fg:x="296999" fg:w="212"/><text x="99.7468%" y="383.50"></text></g><g><title>fastiron::data::mc_vector::MCVector&lt;T&gt;::dot (121 samples, 0.04%)</title><rect x="99.5273%" y="357" width="0.0405%" height="15" fill="rgb(239,43,17)" fg:x="297090" fg:w="121"/><text x="99.7773%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (34 samples, 0.01%)</title><rect x="99.5565%" y="341" width="0.0114%" height="15" fill="rgb(231,177,25)" fg:x="297177" fg:w="34"/><text x="99.8065%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (231 samples, 0.08%)</title><rect x="99.5725%" y="389" width="0.0774%" height="15" fill="rgb(219,179,1)" fg:x="297225" fg:w="231"/><text x="99.8225%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}} (231 samples, 0.08%)</title><rect x="99.5725%" y="373" width="0.0774%" height="15" fill="rgb(238,219,53)" fg:x="297225" fg:w="231"/><text x="99.8225%" y="383.50"></text></g><g><title>core::cmp::PartialEq::ne (231 samples, 0.08%)</title><rect x="99.5725%" y="357" width="0.0774%" height="15" fill="rgb(232,167,36)" fg:x="297225" fg:w="231"/><text x="99.8225%" y="367.50"></text></g><g><title>&lt;fastiron::particles::mc_particle::Species as core::cmp::PartialEq&gt;::eq (231 samples, 0.08%)</title><rect x="99.5725%" y="341" width="0.0774%" height="15" fill="rgb(244,19,51)" fg:x="297225" fg:w="231"/><text x="99.8225%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (261 samples, 0.09%)</title><rect x="99.5699%" y="437" width="0.0874%" height="15" fill="rgb(224,6,22)" fg:x="297217" fg:w="261"/><text x="99.8199%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (261 samples, 0.09%)</title><rect x="99.5699%" y="421" width="0.0874%" height="15" fill="rgb(224,145,5)" fg:x="297217" fg:w="261"/><text x="99.8199%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (261 samples, 0.09%)</title><rect x="99.5699%" y="405" width="0.0874%" height="15" fill="rgb(234,130,49)" fg:x="297217" fg:w="261"/><text x="99.8199%" y="415.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles (294,101 samples, 98.53%)</title><rect x="1.1467%" y="453" width="98.5260%" height="15" fill="rgb(254,6,2)" fg:x="3423" fg:w="294101"/><text x="1.3967%" y="463.50">fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles</text></g><g><title>fastiron::main (46 samples, 0.02%)</title><rect x="99.6573%" y="437" width="0.0154%" height="15" fill="rgb(208,96,46)" fg:x="297478" fg:w="46"/><text x="99.9073%" y="447.50"></text></g><g><title>&lt;fastiron::particles::mc_particle::MCParticle&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.02%)</title><rect x="99.6754%" y="277" width="0.0194%" height="15" fill="rgb(239,3,39)" fg:x="297532" fg:w="58"/><text x="99.9254%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (74 samples, 0.02%)</title><rect x="99.6730%" y="309" width="0.0248%" height="15" fill="rgb(233,210,1)" fg:x="297525" fg:w="74"/><text x="99.9230%" y="319.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::under_populated_split::{{closure}} (67 samples, 0.02%)</title><rect x="99.6754%" y="293" width="0.0224%" height="15" fill="rgb(244,137,37)" fg:x="297532" fg:w="67"/><text x="99.9254%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 0.03%)</title><rect x="99.6730%" y="405" width="0.0258%" height="15" fill="rgb(240,136,2)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 0.03%)</title><rect x="99.6730%" y="389" width="0.0258%" height="15" fill="rgb(239,18,37)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (77 samples, 0.03%)</title><rect x="99.6730%" y="373" width="0.0258%" height="15" fill="rgb(218,185,22)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (77 samples, 0.03%)</title><rect x="99.6730%" y="357" width="0.0258%" height="15" fill="rgb(225,218,4)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 0.03%)</title><rect x="99.6730%" y="341" width="0.0258%" height="15" fill="rgb(230,182,32)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 0.03%)</title><rect x="99.6730%" y="325" width="0.0258%" height="15" fill="rgb(242,56,43)" fg:x="297525" fg:w="77"/><text x="99.9230%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (87 samples, 0.03%)</title><rect x="99.6727%" y="437" width="0.0291%" height="15" fill="rgb(233,99,24)" fg:x="297524" fg:w="87"/><text x="99.9227%" y="447.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population::{{closure}} (86 samples, 0.03%)</title><rect x="99.6730%" y="421" width="0.0288%" height="15" fill="rgb(234,209,42)" fg:x="297525" fg:w="86"/><text x="99.9230%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.02%)</title><rect x="99.7022%" y="405" width="0.0174%" height="15" fill="rgb(227,7,12)" fg:x="297612" fg:w="52"/><text x="99.9522%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (51 samples, 0.02%)</title><rect x="99.7025%" y="389" width="0.0171%" height="15" fill="rgb(245,203,43)" fg:x="297613" fg:w="51"/><text x="99.9525%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (91 samples, 0.03%)</title><rect x="99.7018%" y="437" width="0.0305%" height="15" fill="rgb(238,205,33)" fg:x="297611" fg:w="91"/><text x="99.9518%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (91 samples, 0.03%)</title><rect x="99.7018%" y="421" width="0.0305%" height="15" fill="rgb(231,56,7)" fg:x="297611" fg:w="91"/><text x="99.9518%" y="431.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population::{{closure}} (38 samples, 0.01%)</title><rect x="99.7196%" y="405" width="0.0127%" height="15" fill="rgb(244,186,29)" fg:x="297664" fg:w="38"/><text x="99.9696%" y="415.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::low_weight_rr (37 samples, 0.01%)</title><rect x="99.7199%" y="389" width="0.0124%" height="15" fill="rgb(234,111,31)" fg:x="297665" fg:w="37"/><text x="99.9699%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population (278 samples, 0.09%)</title><rect x="99.6727%" y="453" width="0.0931%" height="15" fill="rgb(241,149,10)" fg:x="297524" fg:w="278"/><text x="99.9227%" y="463.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::clean_extra_vaults (92 samples, 0.03%)</title><rect x="99.7350%" y="437" width="0.0308%" height="15" fill="rgb(249,206,44)" fg:x="297710" fg:w="92"/><text x="99.9850%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (92 samples, 0.03%)</title><rect x="99.7350%" y="421" width="0.0308%" height="15" fill="rgb(251,153,30)" fg:x="297710" fg:w="92"/><text x="99.9850%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (92 samples, 0.03%)</title><rect x="99.7350%" y="405" width="0.0308%" height="15" fill="rgb(239,152,38)" fg:x="297710" fg:w="92"/><text x="99.9850%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.03%)</title><rect x="99.7350%" y="389" width="0.0308%" height="15" fill="rgb(249,139,47)" fg:x="297710" fg:w="92"/><text x="99.9850%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (92 samples, 0.03%)</title><rect x="99.7350%" y="373" width="0.0308%" height="15" fill="rgb(244,64,35)" fg:x="297710" fg:w="92"/><text x="99.9850%" y="383.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg (67 samples, 0.02%)</title><rect x="99.7853%" y="101" width="0.0224%" height="15" fill="rgb(216,46,15)" fg:x="297860" fg:w="67"/><text x="100.0353%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (64 samples, 0.02%)</title><rect x="99.7863%" y="85" width="0.0214%" height="15" fill="rgb(250,74,19)" fg:x="297863" fg:w="64"/><text x="100.0363%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (64 samples, 0.02%)</title><rect x="99.7863%" y="69" width="0.0214%" height="15" fill="rgb(249,42,33)" fg:x="297863" fg:w="64"/><text x="100.0363%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (64 samples, 0.02%)</title><rect x="99.7863%" y="53" width="0.0214%" height="15" fill="rgb(242,149,17)" fg:x="297863" fg:w="64"/><text x="100.0363%" y="63.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg::{{closure}} (63 samples, 0.02%)</title><rect x="99.7866%" y="37" width="0.0211%" height="15" fill="rgb(244,29,21)" fg:x="297864" fg:w="63"/><text x="100.0366%" y="47.50"></text></g><g><title>fastiron::data::mc_vector::MCVector&lt;T&gt;::cross (40 samples, 0.01%)</title><rect x="99.8101%" y="85" width="0.0134%" height="15" fill="rgb(220,130,37)" fg:x="297934" fg:w="40"/><text x="100.0601%" y="95.50"></text></g><g><title>fastiron::simulation::mct::mct_cell_volume_3dg_vector_tetdet (87 samples, 0.03%)</title><rect x="99.8077%" y="101" width="0.0291%" height="15" fill="rgb(211,67,2)" fg:x="297927" fg:w="87"/><text x="100.0577%" y="111.50"></text></g><g><title>fastiron::data::mc_vector::MCVector&lt;T&gt;::dot (40 samples, 0.01%)</title><rect x="99.8235%" y="85" width="0.0134%" height="15" fill="rgb(235,68,52)" fg:x="297974" fg:w="40"/><text x="100.0735%" y="95.50"></text></g><g><title>fastiron::simulation::mct::generate_coordinate_3dg (201 samples, 0.07%)</title><rect x="99.7759%" y="117" width="0.0673%" height="15" fill="rgb(246,142,3)" fg:x="297832" fg:w="201"/><text x="100.0259%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (231 samples, 0.08%)</title><rect x="99.7662%" y="149" width="0.0774%" height="15" fill="rgb(241,25,7)" fg:x="297803" fg:w="231"/><text x="100.0162%" y="159.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}}::{{closure}} (229 samples, 0.08%)</title><rect x="99.7668%" y="133" width="0.0767%" height="15" fill="rgb(242,119,39)" fg:x="297805" fg:w="229"/><text x="100.0168%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (233 samples, 0.08%)</title><rect x="99.7662%" y="245" width="0.0781%" height="15" fill="rgb(241,98,45)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (233 samples, 0.08%)</title><rect x="99.7662%" y="229" width="0.0781%" height="15" fill="rgb(254,28,30)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (233 samples, 0.08%)</title><rect x="99.7662%" y="213" width="0.0781%" height="15" fill="rgb(241,142,54)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (233 samples, 0.08%)</title><rect x="99.7662%" y="197" width="0.0781%" height="15" fill="rgb(222,85,15)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (233 samples, 0.08%)</title><rect x="99.7662%" y="181" width="0.0781%" height="15" fill="rgb(210,85,47)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (233 samples, 0.08%)</title><rect x="99.7662%" y="165" width="0.0781%" height="15" fill="rgb(224,206,25)" fg:x="297803" fg:w="233"/><text x="100.0162%" y="175.50"></text></g><g><title>fastiron::simulation::population_control::source_now (239 samples, 0.08%)</title><rect x="99.7662%" y="453" width="0.0801%" height="15" fill="rgb(243,201,19)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (239 samples, 0.08%)</title><rect x="99.7662%" y="437" width="0.0801%" height="15" fill="rgb(236,59,4)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (239 samples, 0.08%)</title><rect x="99.7662%" y="421" width="0.0801%" height="15" fill="rgb(254,179,45)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (239 samples, 0.08%)</title><rect x="99.7662%" y="405" width="0.0801%" height="15" fill="rgb(226,14,10)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="389" width="0.0801%" height="15" fill="rgb(244,27,41)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="373" width="0.0801%" height="15" fill="rgb(235,35,32)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="383.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="357" width="0.0801%" height="15" fill="rgb(218,68,31)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (239 samples, 0.08%)</title><rect x="99.7662%" y="341" width="0.0801%" height="15" fill="rgb(207,120,37)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (239 samples, 0.08%)</title><rect x="99.7662%" y="325" width="0.0801%" height="15" fill="rgb(227,98,0)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (239 samples, 0.08%)</title><rect x="99.7662%" y="309" width="0.0801%" height="15" fill="rgb(207,7,3)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="293" width="0.0801%" height="15" fill="rgb(206,98,19)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="277" width="0.0801%" height="15" fill="rgb(217,5,26)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="287.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}} (239 samples, 0.08%)</title><rect x="99.7662%" y="261" width="0.0801%" height="15" fill="rgb(235,190,38)" fg:x="297803" fg:w="239"/><text x="100.0162%" y="271.50"></text></g><g><title>fastiron::cycle_process (295,362 samples, 98.95%)</title><rect x="0.8985%" y="469" width="98.9484%" height="15" fill="rgb(247,86,24)" fg:x="2682" fg:w="295362"/><text x="1.1485%" y="479.50">fastiron::cycle_process</text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (88 samples, 0.03%)</title><rect x="99.8509%" y="277" width="0.0295%" height="15" fill="rgb(205,101,16)" fg:x="298056" fg:w="88"/><text x="100.1009%" y="287.50"></text></g><g><title>fastiron::montecarlo::MonteCarloUnit&lt;T&gt;::clear_cross_section_cache (102 samples, 0.03%)</title><rect x="99.8469%" y="389" width="0.0342%" height="15" fill="rgb(246,168,33)" fg:x="298044" fg:w="102"/><text x="100.0969%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (102 samples, 0.03%)</title><rect x="99.8469%" y="373" width="0.0342%" height="15" fill="rgb(231,114,1)" fg:x="298044" fg:w="102"/><text x="100.0969%" y="383.50"></text></g><g><title>fastiron::montecarlo::MonteCarloUnit&lt;T&gt;::clear_cross_section_cache::{{closure}} (102 samples, 0.03%)</title><rect x="99.8469%" y="357" width="0.0342%" height="15" fill="rgb(207,184,53)" fg:x="298044" fg:w="102"/><text x="100.0969%" y="367.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::clear_cross_section_cache (102 samples, 0.03%)</title><rect x="99.8469%" y="341" width="0.0342%" height="15" fill="rgb(224,95,51)" fg:x="298044" fg:w="102"/><text x="100.0969%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (102 samples, 0.03%)</title><rect x="99.8469%" y="325" width="0.0342%" height="15" fill="rgb(212,188,45)" fg:x="298044" fg:w="102"/><text x="100.0969%" y="335.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::clear_cross_section_cache::{{closure}} (90 samples, 0.03%)</title><rect x="99.8509%" y="309" width="0.0302%" height="15" fill="rgb(223,154,38)" fg:x="298056" fg:w="90"/><text x="100.1009%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (90 samples, 0.03%)</title><rect x="99.8509%" y="293" width="0.0302%" height="15" fill="rgb(251,22,52)" fg:x="298056" fg:w="90"/><text x="100.1009%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (106 samples, 0.04%)</title><rect x="99.8469%" y="453" width="0.0355%" height="15" fill="rgb(229,209,22)" fg:x="298044" fg:w="106"/><text x="100.0969%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (106 samples, 0.04%)</title><rect x="99.8469%" y="437" width="0.0355%" height="15" fill="rgb(234,138,34)" fg:x="298044" fg:w="106"/><text x="100.0969%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (106 samples, 0.04%)</title><rect x="99.8469%" y="421" width="0.0355%" height="15" fill="rgb(212,95,11)" fg:x="298044" fg:w="106"/><text x="100.0969%" y="431.50"></text></g><g><title>fastiron::cycle_sync::{{closure}} (106 samples, 0.04%)</title><rect x="99.8469%" y="405" width="0.0355%" height="15" fill="rgb(240,179,47)" fg:x="298044" fg:w="106"/><text x="100.0969%" y="415.50"></text></g><g><title>fastiron::data::tallies::FluenceDomain&lt;T&gt;::compute (104 samples, 0.03%)</title><rect x="99.8824%" y="373" width="0.0348%" height="15" fill="rgb(240,163,11)" fg:x="298150" fg:w="104"/><text x="100.1324%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (104 samples, 0.03%)</title><rect x="99.8824%" y="357" width="0.0348%" height="15" fill="rgb(236,37,12)" fg:x="298150" fg:w="104"/><text x="100.1324%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (104 samples, 0.03%)</title><rect x="99.8824%" y="341" width="0.0348%" height="15" fill="rgb(232,164,16)" fg:x="298150" fg:w="104"/><text x="100.1324%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (104 samples, 0.03%)</title><rect x="99.8824%" y="325" width="0.0348%" height="15" fill="rgb(244,205,15)" fg:x="298150" fg:w="104"/><text x="100.1324%" y="335.50"></text></g><g><title>fastiron::data::tallies::FluenceDomain&lt;T&gt;::compute::{{closure}} (104 samples, 0.03%)</title><rect x="99.8824%" y="309" width="0.0348%" height="15" fill="rgb(223,117,47)" fg:x="298150" fg:w="104"/><text x="100.1324%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (103 samples, 0.03%)</title><rect x="99.8827%" y="293" width="0.0345%" height="15" fill="rgb(244,107,35)" fg:x="298151" fg:w="103"/><text x="100.1327%" y="303.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (103 samples, 0.03%)</title><rect x="99.8827%" y="277" width="0.0345%" height="15" fill="rgb(205,140,8)" fg:x="298151" fg:w="103"/><text x="100.1327%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (103 samples, 0.03%)</title><rect x="99.8827%" y="261" width="0.0345%" height="15" fill="rgb(228,84,46)" fg:x="298151" fg:w="103"/><text x="100.1327%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (103 samples, 0.03%)</title><rect x="99.8827%" y="245" width="0.0345%" height="15" fill="rgb(254,188,9)" fg:x="298151" fg:w="103"/><text x="100.1327%" y="255.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (98 samples, 0.03%)</title><rect x="99.8844%" y="229" width="0.0328%" height="15" fill="rgb(206,112,54)" fg:x="298156" fg:w="98"/><text x="100.1344%" y="239.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (98 samples, 0.03%)</title><rect x="99.8844%" y="213" width="0.0328%" height="15" fill="rgb(216,84,49)" fg:x="298156" fg:w="98"/><text x="100.1344%" y="223.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (67 samples, 0.02%)</title><rect x="99.9176%" y="309" width="0.0224%" height="15" fill="rgb(214,194,35)" fg:x="298255" fg:w="67"/><text x="100.1676%" y="319.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::cycle_finalize (173 samples, 0.06%)</title><rect x="99.8824%" y="453" width="0.0580%" height="15" fill="rgb(249,28,3)" fg:x="298150" fg:w="173"/><text x="100.1324%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (173 samples, 0.06%)</title><rect x="99.8824%" y="437" width="0.0580%" height="15" fill="rgb(222,56,52)" fg:x="298150" fg:w="173"/><text x="100.1324%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (173 samples, 0.06%)</title><rect x="99.8824%" y="421" width="0.0580%" height="15" fill="rgb(245,217,50)" fg:x="298150" fg:w="173"/><text x="100.1324%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (173 samples, 0.06%)</title><rect x="99.8824%" y="405" width="0.0580%" height="15" fill="rgb(213,201,24)" fg:x="298150" fg:w="173"/><text x="100.1324%" y="415.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::cycle_finalize::{{closure}} (173 samples, 0.06%)</title><rect x="99.8824%" y="389" width="0.0580%" height="15" fill="rgb(248,116,28)" fg:x="298150" fg:w="173"/><text x="100.1324%" y="399.50"></text></g><g><title>fastiron::data::tallies::ScalarFluxDomain&lt;T&gt;::reset (69 samples, 0.02%)</title><rect x="99.9173%" y="373" width="0.0231%" height="15" fill="rgb(219,72,43)" fg:x="298254" fg:w="69"/><text x="100.1673%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (69 samples, 0.02%)</title><rect x="99.9173%" y="357" width="0.0231%" height="15" fill="rgb(209,138,14)" fg:x="298254" fg:w="69"/><text x="100.1673%" y="367.50"></text></g><g><title>fastiron::data::tallies::ScalarFluxDomain&lt;T&gt;::reset::{{closure}} (68 samples, 0.02%)</title><rect x="99.9176%" y="341" width="0.0228%" height="15" fill="rgb(222,18,33)" fg:x="298255" fg:w="68"/><text x="100.1676%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (68 samples, 0.02%)</title><rect x="99.9176%" y="325" width="0.0228%" height="15" fill="rgb(213,199,7)" fg:x="298255" fg:w="68"/><text x="100.1676%" y="335.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum (107 samples, 0.04%)</title><rect x="99.9407%" y="437" width="0.0358%" height="15" fill="rgb(250,110,10)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (107 samples, 0.04%)</title><rect x="99.9407%" y="421" width="0.0358%" height="15" fill="rgb(248,123,6)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="431.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (107 samples, 0.04%)</title><rect x="99.9407%" y="405" width="0.0358%" height="15" fill="rgb(206,91,31)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 0.04%)</title><rect x="99.9407%" y="389" width="0.0358%" height="15" fill="rgb(211,154,13)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (107 samples, 0.04%)</title><rect x="99.9407%" y="373" width="0.0358%" height="15" fill="rgb(225,148,7)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (107 samples, 0.04%)</title><rect x="99.9407%" y="357" width="0.0358%" height="15" fill="rgb(220,160,43)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="367.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}} (107 samples, 0.04%)</title><rect x="99.9407%" y="341" width="0.0358%" height="15" fill="rgb(213,52,39)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (107 samples, 0.04%)</title><rect x="99.9407%" y="325" width="0.0358%" height="15" fill="rgb(243,137,7)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="335.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (107 samples, 0.04%)</title><rect x="99.9407%" y="309" width="0.0358%" height="15" fill="rgb(230,79,13)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 0.04%)</title><rect x="99.9407%" y="293" width="0.0358%" height="15" fill="rgb(247,105,23)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (107 samples, 0.04%)</title><rect x="99.9407%" y="277" width="0.0358%" height="15" fill="rgb(223,179,41)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (107 samples, 0.04%)</title><rect x="99.9407%" y="261" width="0.0358%" height="15" fill="rgb(218,9,34)" fg:x="298324" fg:w="107"/><text x="100.1907%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}} (106 samples, 0.04%)</title><rect x="99.9410%" y="245" width="0.0355%" height="15" fill="rgb(222,106,8)" fg:x="298325" fg:w="106"/><text x="100.1910%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (106 samples, 0.04%)</title><rect x="99.9410%" y="229" width="0.0355%" height="15" fill="rgb(211,220,0)" fg:x="298325" fg:w="106"/><text x="100.1910%" y="239.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (106 samples, 0.04%)</title><rect x="99.9410%" y="213" width="0.0355%" height="15" fill="rgb(229,52,16)" fg:x="298325" fg:w="106"/><text x="100.1910%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106 samples, 0.04%)</title><rect x="99.9410%" y="197" width="0.0355%" height="15" fill="rgb(212,155,18)" fg:x="298325" fg:w="106"/><text x="100.1910%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (106 samples, 0.04%)</title><rect x="99.9410%" y="181" width="0.0355%" height="15" fill="rgb(242,21,14)" fg:x="298325" fg:w="106"/><text x="100.1910%" y="191.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (98 samples, 0.03%)</title><rect x="99.9437%" y="165" width="0.0328%" height="15" fill="rgb(222,19,48)" fg:x="298333" fg:w="98"/><text x="100.1937%" y="175.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (98 samples, 0.03%)</title><rect x="99.9437%" y="149" width="0.0328%" height="15" fill="rgb(232,45,27)" fg:x="298333" fg:w="98"/><text x="100.1937%" y="159.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::print_summary (109 samples, 0.04%)</title><rect x="99.9404%" y="453" width="0.0365%" height="15" fill="rgb(249,103,42)" fg:x="298323" fg:w="109"/><text x="100.1904%" y="463.50"></text></g><g><title>fastiron::cycle_sync (406 samples, 0.14%)</title><rect x="99.8469%" y="469" width="0.1360%" height="15" fill="rgb(246,81,33)" fg:x="298044" fg:w="406"/><text x="100.0969%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (35 samples, 0.01%)</title><rect x="99.9866%" y="133" width="0.0117%" height="15" fill="rgb(252,33,42)" fg:x="298461" fg:w="35"/><text x="100.2366%" y="143.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (35 samples, 0.01%)</title><rect x="99.9866%" y="117" width="0.0117%" height="15" fill="rgb(209,212,41)" fg:x="298461" fg:w="35"/><text x="100.2366%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (35 samples, 0.01%)</title><rect x="99.9866%" y="101" width="0.0117%" height="15" fill="rgb(207,154,6)" fg:x="298461" fg:w="35"/><text x="100.2366%" y="111.50"></text></g><g><title>fastiron::init::init_mcunits (45 samples, 0.02%)</title><rect x="99.9836%" y="469" width="0.0151%" height="15" fill="rgb(223,64,47)" fg:x="298452" fg:w="45"/><text x="100.2336%" y="479.50"></text></g><g><title>fastiron::init::init_mesh (40 samples, 0.01%)</title><rect x="99.9853%" y="453" width="0.0134%" height="15" fill="rgb(211,161,38)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (40 samples, 0.01%)</title><rect x="99.9853%" y="437" width="0.0134%" height="15" fill="rgb(219,138,40)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 0.01%)</title><rect x="99.9853%" y="421" width="0.0134%" height="15" fill="rgb(241,228,46)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (40 samples, 0.01%)</title><rect x="99.9853%" y="405" width="0.0134%" height="15" fill="rgb(223,209,38)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="415.50"></text></g><g><title>fastiron::init::init_mesh::{{closure}} (40 samples, 0.01%)</title><rect x="99.9853%" y="389" width="0.0134%" height="15" fill="rgb(236,164,45)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="399.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::build_mesh_partition (40 samples, 0.01%)</title><rect x="99.9853%" y="373" width="0.0134%" height="15" fill="rgb(231,15,5)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="383.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::assign_cells_to_domain (40 samples, 0.01%)</title><rect x="99.9853%" y="357" width="0.0134%" height="15" fill="rgb(252,35,15)" fg:x="298457" fg:w="40"/><text x="100.2353%" y="367.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood (39 samples, 0.01%)</title><rect x="99.9856%" y="341" width="0.0131%" height="15" fill="rgb(248,181,18)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (39 samples, 0.01%)</title><rect x="99.9856%" y="325" width="0.0131%" height="15" fill="rgb(233,39,42)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (39 samples, 0.01%)</title><rect x="99.9856%" y="309" width="0.0131%" height="15" fill="rgb(238,110,33)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="293" width="0.0131%" height="15" fill="rgb(233,195,10)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="303.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="277" width="0.0131%" height="15" fill="rgb(254,105,3)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (39 samples, 0.01%)</title><rect x="99.9856%" y="261" width="0.0131%" height="15" fill="rgb(221,225,9)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (39 samples, 0.01%)</title><rect x="99.9856%" y="245" width="0.0131%" height="15" fill="rgb(224,227,45)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="229" width="0.0131%" height="15" fill="rgb(229,198,43)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="239.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="213" width="0.0131%" height="15" fill="rgb(206,209,35)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (39 samples, 0.01%)</title><rect x="99.9856%" y="197" width="0.0131%" height="15" fill="rgb(245,195,53)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (39 samples, 0.01%)</title><rect x="99.9856%" y="181" width="0.0131%" height="15" fill="rgb(240,92,26)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="165" width="0.0131%" height="15" fill="rgb(207,40,23)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="175.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}}::{{closure}} (39 samples, 0.01%)</title><rect x="99.9856%" y="149" width="0.0131%" height="15" fill="rgb(223,111,35)" fg:x="298458" fg:w="39"/><text x="100.2356%" y="159.50"></text></g><g><title>__libc_start_main_impl (295,817 samples, 99.10%)</title><rect x="0.8982%" y="565" width="99.1008%" height="15" fill="rgb(229,147,28)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="575.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (295,817 samples, 99.10%)</title><rect x="0.8982%" y="549" width="99.1008%" height="15" fill="rgb(211,29,28)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="559.50">__libc_start_call_main</text></g><g><title>main (295,817 samples, 99.10%)</title><rect x="0.8982%" y="533" width="99.1008%" height="15" fill="rgb(228,72,33)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="543.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (295,817 samples, 99.10%)</title><rect x="0.8982%" y="517" width="99.1008%" height="15" fill="rgb(205,214,31)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (295,817 samples, 99.10%)</title><rect x="0.8982%" y="501" width="99.1008%" height="15" fill="rgb(224,111,15)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="511.50">core::ops::function::FnOnce::call_once</text></g><g><title>fastiron::main (295,817 samples, 99.10%)</title><rect x="0.8982%" y="485" width="99.1008%" height="15" fill="rgb(253,21,26)" fg:x="2681" fg:w="295817"/><text x="1.1482%" y="495.50">fastiron::main</text></g><g><title>_start (295,823 samples, 99.10%)</title><rect x="0.8965%" y="581" width="99.1029%" height="15" fill="rgb(245,139,43)" fg:x="2676" fg:w="295823"/><text x="1.1465%" y="591.50">_start</text></g><g><title>all (298,501 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="298501"/><text x="0.2500%" y="623.50"></text></g><g><title>fastiron (298,501 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="298501"/><text x="0.2500%" y="607.50">fastiron</text></g></svg></svg>
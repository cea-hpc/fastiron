<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="277.00"> </text><svg id="frames" x="10" width="1180" total_samples="36508"><g><title>NuclearData::getReactionCrossSection (246 samples, 0.67%)</title><rect x="0.0055%" y="213" width="0.6738%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="246"/><text x="0.2555%" y="223.50"></text></g><g><title>CycleTrackingFunction (57 samples, 0.16%)</title><rect x="0.7067%" y="197" width="0.1561%" height="15" fill="rgb(217,0,24)" fg:x="258" fg:w="57"/><text x="0.9567%" y="207.50"></text></g><g><title>CycleTrackingGuts (14 samples, 0.04%)</title><rect x="0.8628%" y="197" width="0.0383%" height="15" fill="rgb(221,193,54)" fg:x="315" fg:w="14"/><text x="1.1128%" y="207.50"></text></g><g><title>MCT_Nearest_Facet (24 samples, 0.07%)</title><rect x="0.9149%" y="197" width="0.0657%" height="15" fill="rgb(248,212,6)" fg:x="334" fg:w="24"/><text x="1.1649%" y="207.50"></text></g><g><title>MC_Load_Particle (21 samples, 0.06%)</title><rect x="0.9806%" y="197" width="0.0575%" height="15" fill="rgb(208,68,35)" fg:x="358" fg:w="21"/><text x="1.2306%" y="207.50"></text></g><g><title>NuclearData::getEnergyGroup (12 samples, 0.03%)</title><rect x="1.0381%" y="197" width="0.0329%" height="15" fill="rgb(232,128,0)" fg:x="379" fg:w="12"/><text x="1.2881%" y="207.50"></text></g><g><title>NuclearData::getNumberReactions (66 samples, 0.18%)</title><rect x="1.0710%" y="197" width="0.1808%" height="15" fill="rgb(207,160,47)" fg:x="391" fg:w="66"/><text x="1.3210%" y="207.50"></text></g><g><title>ParticleVault::getParticle (54 samples, 0.15%)</title><rect x="1.2518%" y="197" width="0.1479%" height="15" fill="rgb(228,23,34)" fg:x="457" fg:w="54"/><text x="1.5018%" y="207.50"></text></g><g><title>macroscopicCrossSection (66 samples, 0.18%)</title><rect x="1.4024%" y="197" width="0.1808%" height="15" fill="rgb(218,30,26)" fg:x="512" fg:w="66"/><text x="1.6524%" y="207.50"></text></g><g><title>updateTrajectory (9 samples, 0.02%)</title><rect x="1.5832%" y="197" width="0.0247%" height="15" fill="rgb(220,122,19)" fg:x="578" fg:w="9"/><text x="1.8332%" y="207.50"></text></g><g><title>[[heap]] (350 samples, 0.96%)</title><rect x="0.6793%" y="213" width="0.9587%" height="15" fill="rgb(250,228,42)" fg:x="248" fg:w="350"/><text x="0.9293%" y="223.50"></text></g><g><title>weightedMacroscopicCrossSection (11 samples, 0.03%)</title><rect x="1.6079%" y="197" width="0.0301%" height="15" fill="rgb(240,193,28)" fg:x="587" fg:w="11"/><text x="1.8579%" y="207.50"></text></g><g><title>CollisionEvent (105 samples, 0.29%)</title><rect x="1.6380%" y="197" width="0.2876%" height="15" fill="rgb(216,20,37)" fg:x="598" fg:w="105"/><text x="1.8880%" y="207.50"></text></g><g><title>MCT_Nearest_Facet (45 samples, 0.12%)</title><rect x="1.9256%" y="197" width="0.1233%" height="15" fill="rgb(206,188,39)" fg:x="703" fg:w="45"/><text x="2.1756%" y="207.50"></text></g><g><title>MC_Facet_Crossing_Event (5 samples, 0.01%)</title><rect x="2.0489%" y="197" width="0.0137%" height="15" fill="rgb(217,207,13)" fg:x="748" fg:w="5"/><text x="2.2989%" y="207.50"></text></g><g><title>MC_Segment_Outcome (53 samples, 0.15%)</title><rect x="2.0626%" y="197" width="0.1452%" height="15" fill="rgb(231,73,38)" fg:x="753" fg:w="53"/><text x="2.3126%" y="207.50"></text></g><g><title>ParticleVaultContainer::addProcessingParticle (10 samples, 0.03%)</title><rect x="2.2077%" y="197" width="0.0274%" height="15" fill="rgb(225,20,46)" fg:x="806" fg:w="10"/><text x="2.4577%" y="207.50"></text></g><g><title>__sincos (18 samples, 0.05%)</title><rect x="2.2351%" y="197" width="0.0493%" height="15" fill="rgb(210,31,41)" fg:x="816" fg:w="18"/><text x="2.4851%" y="207.50"></text></g><g><title>[[stack]] (251 samples, 0.69%)</title><rect x="1.6380%" y="213" width="0.6875%" height="15" fill="rgb(221,200,47)" fg:x="598" fg:w="251"/><text x="1.8880%" y="223.50"></text></g><g><title>weightedMacroscopicCrossSection (15 samples, 0.04%)</title><rect x="2.2844%" y="197" width="0.0411%" height="15" fill="rgb(226,26,5)" fg:x="834" fg:w="15"/><text x="2.5344%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.01%)</title><rect x="2.3255%" y="213" width="0.0137%" height="15" fill="rgb(249,33,26)" fg:x="849" fg:w="5"/><text x="2.5755%" y="223.50"></text></g><g><title>CollisionEvent (4 samples, 0.01%)</title><rect x="2.3392%" y="197" width="0.0110%" height="15" fill="rgb(235,183,28)" fg:x="854" fg:w="4"/><text x="2.5892%" y="207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="2.3392%" y="213" width="0.0164%" height="15" fill="rgb(221,5,38)" fg:x="854" fg:w="6"/><text x="2.5892%" y="223.50"></text></g><g><title>CollisionEvent (39 samples, 0.11%)</title><rect x="2.4844%" y="197" width="0.1068%" height="15" fill="rgb(247,18,42)" fg:x="907" fg:w="39"/><text x="2.7344%" y="207.50"></text></g><g><title>CycleTrackingFunction (18 samples, 0.05%)</title><rect x="2.5912%" y="197" width="0.0493%" height="15" fill="rgb(241,131,45)" fg:x="946" fg:w="18"/><text x="2.8412%" y="207.50"></text></g><g><title>CycleTrackingGuts (15 samples, 0.04%)</title><rect x="2.6405%" y="197" width="0.0411%" height="15" fill="rgb(249,31,29)" fg:x="964" fg:w="15"/><text x="2.8905%" y="207.50"></text></g><g><title>MCT_Nearest_Facet (8 samples, 0.02%)</title><rect x="2.6871%" y="197" width="0.0219%" height="15" fill="rgb(225,111,53)" fg:x="981" fg:w="8"/><text x="2.9371%" y="207.50"></text></g><g><title>MC_Load_Particle (18 samples, 0.05%)</title><rect x="2.7145%" y="197" width="0.0493%" height="15" fill="rgb(238,160,17)" fg:x="991" fg:w="18"/><text x="2.9645%" y="207.50"></text></g><g><title>MC_Segment_Outcome (32 samples, 0.09%)</title><rect x="2.7638%" y="197" width="0.0877%" height="15" fill="rgb(214,148,48)" fg:x="1009" fg:w="32"/><text x="3.0138%" y="207.50"></text></g><g><title>NuclearData::getEnergyGroup (19 samples, 0.05%)</title><rect x="2.8514%" y="197" width="0.0520%" height="15" fill="rgb(232,36,49)" fg:x="1041" fg:w="19"/><text x="3.1014%" y="207.50"></text></g><g><title>NuclearData::getNumberReactions (53 samples, 0.15%)</title><rect x="2.9035%" y="197" width="0.1452%" height="15" fill="rgb(209,103,24)" fg:x="1060" fg:w="53"/><text x="3.1535%" y="207.50"></text></g><g><title>NuclearData::getReactionCrossSection (1,837 samples, 5.03%)</title><rect x="3.0486%" y="197" width="5.0318%" height="15" fill="rgb(229,88,8)" fg:x="1113" fg:w="1837"/><text x="3.2986%" y="207.50">Nuclea..</text></g><g><title>NuclearDataReaction::sampleCollision (28 samples, 0.08%)</title><rect x="8.0886%" y="197" width="0.0767%" height="15" fill="rgb(213,181,19)" fg:x="2953" fg:w="28"/><text x="8.3386%" y="207.50"></text></g><g><title>ParticleVaultContainer::addProcessingParticle (14 samples, 0.04%)</title><rect x="8.1653%" y="197" width="0.0383%" height="15" fill="rgb(254,191,54)" fg:x="2981" fg:w="14"/><text x="8.4153%" y="207.50"></text></g><g><title>__sincos (26 samples, 0.07%)</title><rect x="8.2092%" y="197" width="0.0712%" height="15" fill="rgb(241,83,37)" fg:x="2997" fg:w="26"/><text x="8.4592%" y="207.50"></text></g><g><title>macroscopicCrossSection (521 samples, 1.43%)</title><rect x="8.2804%" y="197" width="1.4271%" height="15" fill="rgb(233,36,39)" fg:x="3023" fg:w="521"/><text x="8.5304%" y="207.50"></text></g><g><title>updateTrajectory (8 samples, 0.02%)</title><rect x="9.7075%" y="197" width="0.0219%" height="15" fill="rgb(226,3,54)" fg:x="3544" fg:w="8"/><text x="9.9575%" y="207.50"></text></g><g><title>[unknown] (2,720 samples, 7.45%)</title><rect x="2.3556%" y="213" width="7.4504%" height="15" fill="rgb(245,192,40)" fg:x="860" fg:w="2720"/><text x="2.6056%" y="223.50">[unknown]</text></g><g><title>weightedMacroscopicCrossSection (28 samples, 0.08%)</title><rect x="9.7294%" y="197" width="0.0767%" height="15" fill="rgb(238,167,29)" fg:x="3552" fg:w="28"/><text x="9.9794%" y="207.50"></text></g><g><title>NuclearData::getEnergyGroup (25 samples, 0.07%)</title><rect x="9.8362%" y="85" width="0.0685%" height="15" fill="rgb(232,182,51)" fg:x="3591" fg:w="25"/><text x="10.0862%" y="95.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (7 samples, 0.02%)</title><rect x="9.9047%" y="69" width="0.0192%" height="15" fill="rgb(231,60,39)" fg:x="3616" fg:w="7"/><text x="10.1547%" y="79.50"></text></g><g><title>MC_Particle::MC_Particle (13 samples, 0.04%)</title><rect x="9.9239%" y="69" width="0.0356%" height="15" fill="rgb(208,69,12)" fg:x="3623" fg:w="13"/><text x="10.1739%" y="79.50"></text></g><g><title>MC_Vector::Length (6 samples, 0.02%)</title><rect x="9.9430%" y="53" width="0.0164%" height="15" fill="rgb(235,93,37)" fg:x="3630" fg:w="6"/><text x="10.1930%" y="63.50"></text></g><g><title>MC_Load_Particle (51 samples, 0.14%)</title><rect x="9.8335%" y="101" width="0.1397%" height="15" fill="rgb(213,116,39)" fg:x="3590" fg:w="51"/><text x="10.0835%" y="111.50"></text></g><g><title>ParticleVault::getParticle (25 samples, 0.07%)</title><rect x="9.9047%" y="85" width="0.0685%" height="15" fill="rgb(222,207,29)" fg:x="3616" fg:w="25"/><text x="10.1547%" y="95.50"></text></g><g><title>MC_Particle::operator= (5 samples, 0.01%)</title><rect x="9.9595%" y="69" width="0.0137%" height="15" fill="rgb(206,96,30)" fg:x="3636" fg:w="5"/><text x="10.2095%" y="79.50"></text></g><g><title>EnergySpectrum::UpdateSpectrum (56 samples, 0.15%)</title><rect x="9.8252%" y="117" width="0.1534%" height="15" fill="rgb(218,138,4)" fg:x="3587" fg:w="56"/><text x="10.0752%" y="127.50"></text></g><g><title>cycleFinalize (64 samples, 0.18%)</title><rect x="9.8225%" y="149" width="0.1753%" height="15" fill="rgb(250,191,14)" fg:x="3586" fg:w="64"/><text x="10.0725%" y="159.50"></text></g><g><title>Tallies::CycleFinalize (64 samples, 0.18%)</title><rect x="9.8225%" y="133" width="0.1753%" height="15" fill="rgb(239,60,40)" fg:x="3586" fg:w="64"/><text x="10.0725%" y="143.50"></text></g><g><title>Tallies::PrintSummary (5 samples, 0.01%)</title><rect x="9.9841%" y="117" width="0.0137%" height="15" fill="rgb(206,27,48)" fg:x="3645" fg:w="5"/><text x="10.2341%" y="127.50"></text></g><g><title>Tallies::ScalarFluxSum (5 samples, 0.01%)</title><rect x="9.9841%" y="101" width="0.0137%" height="15" fill="rgb(225,35,8)" fg:x="3645" fg:w="5"/><text x="10.2341%" y="111.50"></text></g><g><title>do_cos (16 samples, 0.04%)</title><rect x="10.1156%" y="85" width="0.0438%" height="15" fill="rgb(250,213,24)" fg:x="3693" fg:w="16"/><text x="10.3656%" y="95.50"></text></g><g><title>do_sin (26 samples, 0.07%)</title><rect x="10.1594%" y="85" width="0.0712%" height="15" fill="rgb(247,123,22)" fg:x="3709" fg:w="26"/><text x="10.4094%" y="95.50"></text></g><g><title>__sincos (58 samples, 0.16%)</title><rect x="10.0909%" y="101" width="0.1589%" height="15" fill="rgb(231,138,38)" fg:x="3684" fg:w="58"/><text x="10.3409%" y="111.50"></text></g><g><title>reduce_sincos (6 samples, 0.02%)</title><rect x="10.2334%" y="85" width="0.0164%" height="15" fill="rgb(231,145,46)" fg:x="3736" fg:w="6"/><text x="10.4834%" y="95.50"></text></g><g><title>DirectionCosine::Sample_Isotropic (87 samples, 0.24%)</title><rect x="10.0225%" y="117" width="0.2383%" height="15" fill="rgb(251,118,11)" fg:x="3659" fg:w="87"/><text x="10.2725%" y="127.50"></text></g><g><title>rngSample (4 samples, 0.01%)</title><rect x="10.2498%" y="101" width="0.0110%" height="15" fill="rgb(217,147,25)" fg:x="3742" fg:w="4"/><text x="10.4998%" y="111.50"></text></g><g><title>Get_Speed_From_Energy (13 samples, 0.04%)</title><rect x="10.2608%" y="117" width="0.0356%" height="15" fill="rgb(247,81,37)" fg:x="3746" fg:w="13"/><text x="10.5108%" y="127.50"></text></g><g><title>MCT_Cell_Position_3D_G (52 samples, 0.14%)</title><rect x="10.4498%" y="101" width="0.1424%" height="15" fill="rgb(209,12,38)" fg:x="3815" fg:w="52"/><text x="10.6998%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Vector&gt;::operator[] (15 samples, 0.04%)</title><rect x="10.5511%" y="85" width="0.0411%" height="15" fill="rgb(227,1,9)" fg:x="3852" fg:w="15"/><text x="10.8011%" y="95.50"></text></g><g><title>MCT_Cell_Volume_3D_G_vector_tetDet (56 samples, 0.15%)</title><rect x="10.5922%" y="101" width="0.1534%" height="15" fill="rgb(248,47,43)" fg:x="3867" fg:w="56"/><text x="10.8422%" y="111.50"></text></g><g><title>MCT_Facet_Points_3D_G (4 samples, 0.01%)</title><rect x="10.7456%" y="101" width="0.0110%" height="15" fill="rgb(221,10,30)" fg:x="3923" fg:w="4"/><text x="10.9956%" y="111.50"></text></g><g><title>MCT_Generate_Coordinate_3D_G (17 samples, 0.05%)</title><rect x="10.7565%" y="101" width="0.0466%" height="15" fill="rgb(210,229,1)" fg:x="3927" fg:w="17"/><text x="11.0065%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Domain&gt;::operator[] (5 samples, 0.01%)</title><rect x="10.8031%" y="101" width="0.0137%" height="15" fill="rgb(222,148,37)" fg:x="3944" fg:w="5"/><text x="11.0531%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Vector&gt;::operator[] (23 samples, 0.06%)</title><rect x="10.8168%" y="101" width="0.0630%" height="15" fill="rgb(234,67,33)" fg:x="3949" fg:w="23"/><text x="11.0668%" y="111.50"></text></g><g><title>MCT_Generate_Coordinate_3D_G (252 samples, 0.69%)</title><rect x="10.2964%" y="117" width="0.6903%" height="15" fill="rgb(247,98,35)" fg:x="3759" fg:w="252"/><text x="10.5464%" y="127.50"></text></g><g><title>rngSample (39 samples, 0.11%)</title><rect x="10.8798%" y="101" width="0.1068%" height="15" fill="rgb(247,138,52)" fg:x="3972" fg:w="39"/><text x="11.1298%" y="111.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (4 samples, 0.01%)</title><rect x="10.9866%" y="117" width="0.0110%" height="15" fill="rgb(213,79,30)" fg:x="4011" fg:w="4"/><text x="11.2366%" y="127.50"></text></g><g><title>MC_Particle::MC_Particle (13 samples, 0.04%)</title><rect x="10.9976%" y="117" width="0.0356%" height="15" fill="rgb(246,177,23)" fg:x="4015" fg:w="13"/><text x="11.2476%" y="127.50"></text></g><g><title>MC_SourceNow (9 samples, 0.02%)</title><rect x="11.0332%" y="117" width="0.0247%" height="15" fill="rgb(230,62,27)" fg:x="4028" fg:w="9"/><text x="11.2832%" y="127.50"></text></g><g><title>ParticleVault::pushBaseParticle (13 samples, 0.04%)</title><rect x="11.0606%" y="101" width="0.0356%" height="15" fill="rgb(216,154,8)" fg:x="4038" fg:w="13"/><text x="11.3106%" y="111.50"></text></g><g><title>MC_Base_Particle::operator= (13 samples, 0.04%)</title><rect x="11.0606%" y="85" width="0.0356%" height="15" fill="rgb(244,35,45)" fg:x="4038" fg:w="13"/><text x="11.3106%" y="95.50"></text></g><g><title>MC_Vector::operator= (6 samples, 0.02%)</title><rect x="11.0798%" y="69" width="0.0164%" height="15" fill="rgb(251,115,12)" fg:x="4045" fg:w="6"/><text x="11.3298%" y="79.50"></text></g><g><title>ParticleVaultContainer::addProcessingParticle (16 samples, 0.04%)</title><rect x="11.0579%" y="117" width="0.0438%" height="15" fill="rgb(240,54,50)" fg:x="4037" fg:w="16"/><text x="11.3079%" y="127.50"></text></g><g><title>__ieee754_log_fma (7 samples, 0.02%)</title><rect x="11.1072%" y="117" width="0.0192%" height="15" fill="rgb(233,84,52)" fg:x="4055" fg:w="7"/><text x="11.3572%" y="127.50"></text></g><g><title>rngSample (6 samples, 0.02%)</title><rect x="11.1263%" y="117" width="0.0164%" height="15" fill="rgb(207,117,47)" fg:x="4062" fg:w="6"/><text x="11.3763%" y="127.50"></text></g><g><title>pseudo_des (6 samples, 0.02%)</title><rect x="11.1428%" y="85" width="0.0164%" height="15" fill="rgb(249,43,39)" fg:x="4068" fg:w="6"/><text x="11.3928%" y="95.50"></text></g><g><title>MC_SourceNow (425 samples, 1.16%)</title><rect x="9.9978%" y="133" width="1.1641%" height="15" fill="rgb(209,38,44)" fg:x="3650" fg:w="425"/><text x="10.2478%" y="143.50"></text></g><g><title>rngSpawn_Random_Number_Seed (7 samples, 0.02%)</title><rect x="11.1428%" y="117" width="0.0192%" height="15" fill="rgb(236,212,23)" fg:x="4068" fg:w="7"/><text x="11.3928%" y="127.50"></text></g><g><title>hash_state (7 samples, 0.02%)</title><rect x="11.1428%" y="101" width="0.0192%" height="15" fill="rgb(242,79,21)" fg:x="4068" fg:w="7"/><text x="11.3928%" y="111.50"></text></g><g><title>MonteCarlo::clearCrossSectionCache (4 samples, 0.01%)</title><rect x="11.1619%" y="133" width="0.0110%" height="15" fill="rgb(211,96,35)" fg:x="4075" fg:w="4"/><text x="11.4119%" y="143.50"></text></g><g><title>MC_Domain::clearCrossSectionCache (4 samples, 0.01%)</title><rect x="11.1619%" y="117" width="0.0110%" height="15" fill="rgb(253,215,40)" fg:x="4075" fg:w="4"/><text x="11.4119%" y="127.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="11.1619%" y="101" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="4075" fg:w="4"/><text x="11.4119%" y="111.50"></text></g><g><title>ParticleVault::popBaseParticle (4 samples, 0.01%)</title><rect x="11.1729%" y="101" width="0.0110%" height="15" fill="rgb(208,190,38)" fg:x="4079" fg:w="4"/><text x="11.4229%" y="111.50"></text></g><g><title>MC_Base_Particle::operator= (4 samples, 0.01%)</title><rect x="11.1729%" y="85" width="0.0110%" height="15" fill="rgb(235,213,38)" fg:x="4079" fg:w="4"/><text x="11.4229%" y="95.50"></text></g><g><title>MC_Vector::operator= (4 samples, 0.01%)</title><rect x="11.1729%" y="69" width="0.0110%" height="15" fill="rgb(237,122,38)" fg:x="4079" fg:w="4"/><text x="11.4229%" y="79.50"></text></g><g><title>ParticleVaultContainer::collapseProcessing (5 samples, 0.01%)</title><rect x="11.1729%" y="133" width="0.0137%" height="15" fill="rgb(244,218,35)" fg:x="4079" fg:w="5"/><text x="11.4229%" y="143.50"></text></g><g><title>ParticleVault::collapse (5 samples, 0.01%)</title><rect x="11.1729%" y="117" width="0.0137%" height="15" fill="rgb(240,68,47)" fg:x="4079" fg:w="5"/><text x="11.4229%" y="127.50"></text></g><g><title>MC_Base_Particle::operator= (149 samples, 0.41%)</title><rect x="11.2414%" y="69" width="0.4081%" height="15" fill="rgb(210,16,53)" fg:x="4104" fg:w="149"/><text x="11.4914%" y="79.50"></text></g><g><title>MC_Vector::operator= (37 samples, 0.10%)</title><rect x="11.5482%" y="53" width="0.1013%" height="15" fill="rgb(235,124,12)" fg:x="4216" fg:w="37"/><text x="11.7982%" y="63.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::atomic_Index_Inc (5 samples, 0.01%)</title><rect x="11.6495%" y="69" width="0.0137%" height="15" fill="rgb(224,169,11)" fg:x="4253" fg:w="5"/><text x="11.8995%" y="79.50"></text></g><g><title>ParticleVault::pushBaseParticle (164 samples, 0.45%)</title><rect x="11.2414%" y="85" width="0.4492%" height="15" fill="rgb(250,166,2)" fg:x="4104" fg:w="164"/><text x="11.4914%" y="95.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::operator[] (10 samples, 0.03%)</title><rect x="11.6632%" y="69" width="0.0274%" height="15" fill="rgb(242,216,29)" fg:x="4258" fg:w="10"/><text x="11.9132%" y="79.50"></text></g><g><title>PopulationControl (189 samples, 0.52%)</title><rect x="11.1866%" y="117" width="0.5177%" height="15" fill="rgb(230,116,27)" fg:x="4084" fg:w="189"/><text x="11.4366%" y="127.50"></text></g><g><title>ParticleVaultContainer::addProcessingParticle (189 samples, 0.52%)</title><rect x="11.1866%" y="101" width="0.5177%" height="15" fill="rgb(228,99,48)" fg:x="4084" fg:w="189"/><text x="11.4366%" y="111.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (41 samples, 0.11%)</title><rect x="11.9892%" y="101" width="0.1123%" height="15" fill="rgb(253,11,6)" fg:x="4377" fg:w="41"/><text x="12.2392%" y="111.50"></text></g><g><title>MC_Vector::operator= (17 samples, 0.05%)</title><rect x="12.0549%" y="85" width="0.0466%" height="15" fill="rgb(247,143,39)" fg:x="4401" fg:w="17"/><text x="12.3049%" y="95.50"></text></g><g><title>ParticleVault::operator[] (4 samples, 0.01%)</title><rect x="12.1015%" y="101" width="0.0110%" height="15" fill="rgb(236,97,10)" fg:x="4418" fg:w="4"/><text x="12.3515%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::operator[] (4 samples, 0.01%)</title><rect x="12.1015%" y="85" width="0.0110%" height="15" fill="rgb(233,208,19)" fg:x="4418" fg:w="4"/><text x="12.3515%" y="95.50"></text></g><g><title>rngSample (44 samples, 0.12%)</title><rect x="12.1152%" y="101" width="0.1205%" height="15" fill="rgb(216,164,2)" fg:x="4423" fg:w="44"/><text x="12.3652%" y="111.50"></text></g><g><title>pseudo_des (56 samples, 0.15%)</title><rect x="12.2466%" y="69" width="0.1534%" height="15" fill="rgb(220,129,5)" fg:x="4471" fg:w="56"/><text x="12.4966%" y="79.50"></text></g><g><title>hash_state (70 samples, 0.19%)</title><rect x="12.2466%" y="85" width="0.1917%" height="15" fill="rgb(242,17,10)" fg:x="4471" fg:w="70"/><text x="12.4966%" y="95.50"></text></g><g><title>rngSpawn_Random_Number_Seed (11 samples, 0.03%)</title><rect x="12.4082%" y="69" width="0.0301%" height="15" fill="rgb(242,107,0)" fg:x="4530" fg:w="11"/><text x="12.6582%" y="79.50"></text></g><g><title>PopulationControl (472 samples, 1.29%)</title><rect x="11.1866%" y="133" width="1.2929%" height="15" fill="rgb(251,28,31)" fg:x="4084" fg:w="472"/><text x="11.4366%" y="143.50"></text></g><g><title>PopulationControlGuts (283 samples, 0.78%)</title><rect x="11.7043%" y="117" width="0.7752%" height="15" fill="rgb(233,223,10)" fg:x="4273" fg:w="283"/><text x="11.9543%" y="127.50"></text></g><g><title>rngSpawn_Random_Number_Seed (89 samples, 0.24%)</title><rect x="12.2357%" y="101" width="0.2438%" height="15" fill="rgb(215,21,27)" fg:x="4467" fg:w="89"/><text x="12.4857%" y="111.50"></text></g><g><title>rngSample (15 samples, 0.04%)</title><rect x="12.4384%" y="85" width="0.0411%" height="15" fill="rgb(232,23,21)" fg:x="4541" fg:w="15"/><text x="12.6884%" y="95.50"></text></g><g><title>MC_Base_Particle::operator= (7 samples, 0.02%)</title><rect x="13.1642%" y="101" width="0.0192%" height="15" fill="rgb(244,5,23)" fg:x="4806" fg:w="7"/><text x="13.4142%" y="111.50"></text></g><g><title>ParticleVault::eraseSwapParticle (8 samples, 0.02%)</title><rect x="13.1642%" y="117" width="0.0219%" height="15" fill="rgb(226,81,46)" fg:x="4806" fg:w="8"/><text x="13.4142%" y="127.50"></text></g><g><title>ParticleVault::operator[] (10 samples, 0.03%)</title><rect x="13.1862%" y="117" width="0.0274%" height="15" fill="rgb(247,70,30)" fg:x="4814" fg:w="10"/><text x="13.4362%" y="127.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::operator[] (10 samples, 0.03%)</title><rect x="13.1862%" y="101" width="0.0274%" height="15" fill="rgb(212,68,19)" fg:x="4814" fg:w="10"/><text x="13.4362%" y="111.50"></text></g><g><title>ParticleVaultContainer::getTaskProcessingVault (6 samples, 0.02%)</title><rect x="13.2135%" y="117" width="0.0164%" height="15" fill="rgb(240,187,13)" fg:x="4824" fg:w="6"/><text x="13.4635%" y="127.50"></text></g><g><title>cycleInit (1,186 samples, 3.25%)</title><rect x="9.9978%" y="149" width="3.2486%" height="15" fill="rgb(223,113,26)" fg:x="3650" fg:w="1186"/><text x="10.2478%" y="159.50">cyc..</text></g><g><title>RouletteLowWeightParticles (280 samples, 0.77%)</title><rect x="12.4795%" y="133" width="0.7670%" height="15" fill="rgb(206,192,2)" fg:x="4556" fg:w="280"/><text x="12.7295%" y="143.50"></text></g><g><title>rngSample (6 samples, 0.02%)</title><rect x="13.2300%" y="117" width="0.0164%" height="15" fill="rgb(241,108,4)" fg:x="4830" fg:w="6"/><text x="13.4800%" y="127.50"></text></g><g><title>NuclearData::getEnergyGroup (381 samples, 1.04%)</title><rect x="28.2870%" y="85" width="1.0436%" height="15" fill="rgb(247,173,49)" fg:x="10327" fg:w="381"/><text x="28.5370%" y="95.50"></text></g><g><title>qs_vector&lt;double&gt;::operator[] (9 samples, 0.02%)</title><rect x="29.3059%" y="69" width="0.0247%" height="15" fill="rgb(224,114,35)" fg:x="10699" fg:w="9"/><text x="29.5559%" y="79.50"></text></g><g><title>qs_vector&lt;NuclearDataReaction&gt;::size (20 samples, 0.05%)</title><rect x="29.6209%" y="69" width="0.0548%" height="15" fill="rgb(245,159,27)" fg:x="10814" fg:w="20"/><text x="29.8709%" y="79.50"></text></g><g><title>NuclearData::getNumberReactions (182 samples, 0.50%)</title><rect x="29.3306%" y="85" width="0.4985%" height="15" fill="rgb(245,172,44)" fg:x="10708" fg:w="182"/><text x="29.5806%" y="95.50"></text></g><g><title>qs_vector&lt;NuclearDataSpecies&gt;::operator[] (56 samples, 0.15%)</title><rect x="29.6757%" y="69" width="0.1534%" height="15" fill="rgb(236,23,11)" fg:x="10834" fg:w="56"/><text x="29.9257%" y="79.50"></text></g><g><title>NuclearDataReaction::sampleCollision (459 samples, 1.26%)</title><rect x="29.8291%" y="85" width="1.2573%" height="15" fill="rgb(205,117,38)" fg:x="10890" fg:w="459"/><text x="30.0791%" y="95.50"></text></g><g><title>rngSample (192 samples, 0.53%)</title><rect x="30.5604%" y="69" width="0.5259%" height="15" fill="rgb(237,72,25)" fg:x="11157" fg:w="192"/><text x="30.8104%" y="79.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (6 samples, 0.02%)</title><rect x="31.1384%" y="53" width="0.0164%" height="15" fill="rgb(244,70,9)" fg:x="11368" fg:w="6"/><text x="31.3884%" y="63.50"></text></g><g><title>MC_Base_Particle::operator= (42 samples, 0.12%)</title><rect x="31.1548%" y="53" width="0.1150%" height="15" fill="rgb(217,125,39)" fg:x="11374" fg:w="42"/><text x="31.4048%" y="63.50"></text></g><g><title>MC_Vector::operator= (25 samples, 0.07%)</title><rect x="31.2014%" y="37" width="0.0685%" height="15" fill="rgb(235,36,10)" fg:x="11391" fg:w="25"/><text x="31.4514%" y="47.50"></text></g><g><title>ParticleVaultContainer::addExtraParticle (74 samples, 0.20%)</title><rect x="31.0863%" y="85" width="0.2027%" height="15" fill="rgb(251,123,47)" fg:x="11349" fg:w="74"/><text x="31.3363%" y="95.50"></text></g><g><title>ParticleVault::pushParticle (55 samples, 0.15%)</title><rect x="31.1384%" y="69" width="0.1507%" height="15" fill="rgb(221,13,13)" fg:x="11368" fg:w="55"/><text x="31.3884%" y="79.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::atomic_Index_Inc (7 samples, 0.02%)</title><rect x="31.2699%" y="53" width="0.0192%" height="15" fill="rgb(238,131,9)" fg:x="11416" fg:w="7"/><text x="31.5199%" y="63.50"></text></g><g><title>NuclearDataReaction::getCrossSection (627 samples, 1.72%)</title><rect x="45.2668%" y="53" width="1.7174%" height="15" fill="rgb(211,50,8)" fg:x="16526" fg:w="627"/><text x="45.5168%" y="63.50"></text></g><g><title>qs_vector&lt;NuclearDataIsotope&gt;::operator[] (536 samples, 1.47%)</title><rect x="46.9842%" y="53" width="1.4682%" height="15" fill="rgb(245,182,24)" fg:x="17153" fg:w="536"/><text x="47.2342%" y="63.50"></text></g><g><title>qs_vector&lt;NuclearDataReaction&gt;::operator[] (563 samples, 1.54%)</title><rect x="48.4524%" y="53" width="1.5421%" height="15" fill="rgb(242,14,37)" fg:x="17689" fg:w="563"/><text x="48.7024%" y="63.50"></text></g><g><title>NuclearData::getReactionCrossSection (2,788 samples, 7.64%)</title><rect x="42.3743%" y="69" width="7.6367%" height="15" fill="rgb(246,228,12)" fg:x="15470" fg:w="2788"/><text x="42.6243%" y="79.50">NuclearDat..</text></g><g><title>qs_vector&lt;NuclearDataSpecies&gt;::operator[] (6 samples, 0.02%)</title><rect x="49.9945%" y="53" width="0.0164%" height="15" fill="rgb(213,55,15)" fg:x="18252" fg:w="6"/><text x="50.2445%" y="63.50"></text></g><g><title>qs_vector&lt;Isotope&gt;::operator[] (1,509 samples, 4.13%)</title><rect x="50.0110%" y="69" width="4.1333%" height="15" fill="rgb(209,9,3)" fg:x="18258" fg:w="1509"/><text x="50.2610%" y="79.50">qs_ve..</text></g><g><title>qs_vector&lt;MC_Cell_State&gt;::operator[] (581 samples, 1.59%)</title><rect x="54.1443%" y="69" width="1.5914%" height="15" fill="rgb(230,59,30)" fg:x="19767" fg:w="581"/><text x="54.3943%" y="79.50"></text></g><g><title>qs_vector&lt;MC_Domain&gt;::operator[] (49 samples, 0.13%)</title><rect x="55.7357%" y="69" width="0.1342%" height="15" fill="rgb(209,121,21)" fg:x="20348" fg:w="49"/><text x="55.9857%" y="79.50"></text></g><g><title>macroscopicCrossSection (9,062 samples, 24.82%)</title><rect x="31.2890%" y="85" width="24.8220%" height="15" fill="rgb(220,109,13)" fg:x="11423" fg:w="9062"/><text x="31.5390%" y="95.50">macroscopicCrossSection</text></g><g><title>qs_vector&lt;Material&gt;::operator[] (88 samples, 0.24%)</title><rect x="55.8699%" y="69" width="0.2410%" height="15" fill="rgb(232,18,1)" fg:x="20397" fg:w="88"/><text x="56.1199%" y="79.50"></text></g><g><title>qs_vector&lt;Balance&gt;::operator[] (28 samples, 0.08%)</title><rect x="56.1110%" y="85" width="0.0767%" height="15" fill="rgb(215,41,42)" fg:x="20485" fg:w="28"/><text x="56.3610%" y="95.50"></text></g><g><title>qs_vector&lt;Isotope&gt;::size (4 samples, 0.01%)</title><rect x="56.1877%" y="85" width="0.0110%" height="15" fill="rgb(224,123,36)" fg:x="20513" fg:w="4"/><text x="56.4377%" y="95.50"></text></g><g><title>qs_vector&lt;MC_Cell_State&gt;::operator[] (13 samples, 0.04%)</title><rect x="56.1986%" y="85" width="0.0356%" height="15" fill="rgb(240,125,3)" fg:x="20517" fg:w="13"/><text x="56.4486%" y="95.50"></text></g><g><title>qs_vector&lt;Material&gt;::operator[] (34 samples, 0.09%)</title><rect x="56.2343%" y="85" width="0.0931%" height="15" fill="rgb(205,98,50)" fg:x="20530" fg:w="34"/><text x="56.4843%" y="95.50"></text></g><g><title>qs_vector&lt;NuclearDataIsotope&gt;::operator[] (46 samples, 0.13%)</title><rect x="56.3274%" y="85" width="0.1260%" height="15" fill="rgb(205,185,37)" fg:x="20564" fg:w="46"/><text x="56.5774%" y="95.50"></text></g><g><title>qs_vector&lt;NuclearDataReaction&gt;::operator[] (124 samples, 0.34%)</title><rect x="56.4534%" y="85" width="0.3397%" height="15" fill="rgb(238,207,15)" fg:x="20610" fg:w="124"/><text x="56.7034%" y="95.50"></text></g><g><title>qs_vector&lt;NuclearDataSpecies&gt;::operator[] (15 samples, 0.04%)</title><rect x="56.7930%" y="85" width="0.0411%" height="15" fill="rgb(213,199,42)" fg:x="20734" fg:w="15"/><text x="57.0430%" y="95.50"></text></g><g><title>rngSample (58 samples, 0.16%)</title><rect x="56.8341%" y="85" width="0.1589%" height="15" fill="rgb(235,201,11)" fg:x="20749" fg:w="58"/><text x="57.0841%" y="95.50"></text></g><g><title>pseudo_des (11 samples, 0.03%)</title><rect x="56.9930%" y="53" width="0.0301%" height="15" fill="rgb(207,46,11)" fg:x="20807" fg:w="11"/><text x="57.2430%" y="63.50"></text></g><g><title>rngSpawn_Random_Number_Seed (12 samples, 0.03%)</title><rect x="56.9930%" y="85" width="0.0329%" height="15" fill="rgb(241,35,35)" fg:x="20807" fg:w="12"/><text x="57.2430%" y="95.50"></text></g><g><title>hash_state (12 samples, 0.03%)</title><rect x="56.9930%" y="69" width="0.0329%" height="15" fill="rgb(243,32,47)" fg:x="20807" fg:w="12"/><text x="57.2430%" y="79.50"></text></g><g><title>DirectionCosine::Rotate3DVector (178 samples, 0.49%)</title><rect x="57.2806%" y="69" width="0.4876%" height="15" fill="rgb(247,202,23)" fg:x="20912" fg:w="178"/><text x="57.5306%" y="79.50"></text></g><g><title>[libm.so.6] (12 samples, 0.03%)</title><rect x="57.7682%" y="69" width="0.0329%" height="15" fill="rgb(219,102,11)" fg:x="21090" fg:w="12"/><text x="58.0182%" y="79.50"></text></g><g><title>[qs] (9 samples, 0.02%)</title><rect x="57.8010%" y="69" width="0.0247%" height="15" fill="rgb(243,110,44)" fg:x="21102" fg:w="9"/><text x="58.0510%" y="79.50"></text></g><g><title>__ieee754_log_fma (230 samples, 0.63%)</title><rect x="57.8257%" y="69" width="0.6300%" height="15" fill="rgb(222,74,54)" fg:x="21111" fg:w="230"/><text x="58.0757%" y="79.50"></text></g><g><title>__log (9 samples, 0.02%)</title><rect x="58.4557%" y="69" width="0.0247%" height="15" fill="rgb(216,99,12)" fg:x="21341" fg:w="9"/><text x="58.7057%" y="79.50"></text></g><g><title>do_cos (147 samples, 0.40%)</title><rect x="58.7789%" y="53" width="0.4027%" height="15" fill="rgb(226,22,26)" fg:x="21459" fg:w="147"/><text x="59.0289%" y="63.50"></text></g><g><title>do_sin (366 samples, 1.00%)</title><rect x="59.1815%" y="53" width="1.0025%" height="15" fill="rgb(217,163,10)" fg:x="21606" fg:w="366"/><text x="59.4315%" y="63.50"></text></g><g><title>libc_feholdsetround_sse_ctx (33 samples, 0.09%)</title><rect x="60.1841%" y="53" width="0.0904%" height="15" fill="rgb(213,25,53)" fg:x="21972" fg:w="33"/><text x="60.4341%" y="63.50"></text></g><g><title>libc_feresetround_sse_ctx (4 samples, 0.01%)</title><rect x="60.2745%" y="53" width="0.0110%" height="15" fill="rgb(252,105,26)" fg:x="22005" fg:w="4"/><text x="60.5245%" y="63.50"></text></g><g><title>__sincos (821 samples, 2.25%)</title><rect x="58.4803%" y="69" width="2.2488%" height="15" fill="rgb(220,39,43)" fg:x="21350" fg:w="821"/><text x="58.7303%" y="79.50">_..</text></g><g><title>reduce_sincos (162 samples, 0.44%)</title><rect x="60.2854%" y="53" width="0.4437%" height="15" fill="rgb(229,68,48)" fg:x="22009" fg:w="162"/><text x="60.5354%" y="63.50"></text></g><g><title>cij (6 samples, 0.02%)</title><rect x="60.7292%" y="69" width="0.0164%" height="15" fill="rgb(252,8,32)" fg:x="22171" fg:w="6"/><text x="60.9792%" y="79.50"></text></g><g><title>CollisionEvent (17,128 samples, 46.92%)</title><rect x="14.1448%" y="101" width="46.9157%" height="15" fill="rgb(223,20,43)" fg:x="5164" fg:w="17128"/><text x="14.3948%" y="111.50">CollisionEvent</text></g><g><title>updateTrajectory (1,473 samples, 4.03%)</title><rect x="57.0259%" y="85" width="4.0347%" height="15" fill="rgb(229,81,49)" fg:x="20819" fg:w="1473"/><text x="57.2759%" y="95.50">upda..</text></g><g><title>rngSample (115 samples, 0.31%)</title><rect x="60.7456%" y="69" width="0.3150%" height="15" fill="rgb(236,28,36)" fg:x="22177" fg:w="115"/><text x="60.9956%" y="79.50"></text></g><g><title>MCT_Reflect_Particle (8 samples, 0.02%)</title><rect x="61.0606%" y="101" width="0.0219%" height="15" fill="rgb(249,185,26)" fg:x="22292" fg:w="8"/><text x="61.3106%" y="111.50"></text></g><g><title>MCT_Adjacent_Facet (5 samples, 0.01%)</title><rect x="61.1291%" y="85" width="0.0137%" height="15" fill="rgb(249,174,33)" fg:x="22317" fg:w="5"/><text x="61.3791%" y="95.50"></text></g><g><title>qs_vector&lt;MC_Facet_Adjacency_Cell&gt;::operator[] (5 samples, 0.01%)</title><rect x="61.1291%" y="69" width="0.0137%" height="15" fill="rgb(233,201,37)" fg:x="22317" fg:w="5"/><text x="61.3791%" y="79.50"></text></g><g><title>MC_Facet_Crossing_Event (23 samples, 0.06%)</title><rect x="61.0825%" y="101" width="0.0630%" height="15" fill="rgb(221,78,26)" fg:x="22300" fg:w="23"/><text x="61.3325%" y="111.50"></text></g><g><title>MCT_Nearest_Facet_3D_G (129 samples, 0.35%)</title><rect x="71.3980%" y="69" width="0.3533%" height="15" fill="rgb(250,127,30)" fg:x="26066" fg:w="129"/><text x="71.6480%" y="79.50"></text></g><g><title>MCT_Nearest_Facet_3D_G_Distance_To_Segment (91 samples, 0.25%)</title><rect x="71.5021%" y="53" width="0.2493%" height="15" fill="rgb(230,49,44)" fg:x="26104" fg:w="91"/><text x="71.7521%" y="63.50"></text></g><g><title>MCT_Nearest_Facet_3D_G_Distance_To_Segment (5,441 samples, 14.90%)</title><rect x="71.7514%" y="69" width="14.9036%" height="15" fill="rgb(229,67,23)" fg:x="26195" fg:w="5441"/><text x="72.0014%" y="79.50">MCT_Nearest_Facet_3D_G_..</text></g><g><title>MCT_Nearest_Facet_Find_Nearest (1,101 samples, 3.02%)</title><rect x="86.6550%" y="69" width="3.0158%" height="15" fill="rgb(249,83,47)" fg:x="31636" fg:w="1101"/><text x="86.9050%" y="79.50">MCT..</text></g><g><title>MCT_Nearest_Facet_Find_Nearest (928 samples, 2.54%)</title><rect x="87.1288%" y="53" width="2.5419%" height="15" fill="rgb(215,43,3)" fg:x="31809" fg:w="928"/><text x="87.3788%" y="63.50">MC..</text></g><g><title>MC_Distance_To_Facet::MC_Distance_To_Facet (581 samples, 1.59%)</title><rect x="89.6708%" y="69" width="1.5914%" height="15" fill="rgb(238,154,13)" fg:x="32737" fg:w="581"/><text x="89.9208%" y="79.50"></text></g><g><title>qs_vector&lt;MC_Domain&gt;::operator[] (21 samples, 0.06%)</title><rect x="91.2622%" y="69" width="0.0575%" height="15" fill="rgb(219,56,2)" fg:x="33318" fg:w="21"/><text x="91.5122%" y="79.50"></text></g><g><title>qs_vector&lt;MC_Facet_Adjacency_Cell&gt;::operator[] (19 samples, 0.05%)</title><rect x="91.3197%" y="69" width="0.0520%" height="15" fill="rgb(233,0,4)" fg:x="33339" fg:w="19"/><text x="91.5697%" y="79.50"></text></g><g><title>MCT_Nearest_Facet (10,870 samples, 29.77%)</title><rect x="63.1314%" y="85" width="29.7743%" height="15" fill="rgb(235,30,7)" fg:x="23048" fg:w="10870"/><text x="63.3814%" y="95.50">MCT_Nearest_Facet</text></g><g><title>qs_vector&lt;MC_Vector&gt;::operator[] (560 samples, 1.53%)</title><rect x="91.3718%" y="69" width="1.5339%" height="15" fill="rgb(250,79,13)" fg:x="33358" fg:w="560"/><text x="91.6218%" y="79.50"></text></g><g><title>MC_Find_Min (31 samples, 0.08%)</title><rect x="92.9057%" y="85" width="0.0849%" height="15" fill="rgb(211,146,34)" fg:x="33918" fg:w="31"/><text x="93.1557%" y="95.50"></text></g><g><title>MC_Nearest_Facet::operator= (7 samples, 0.02%)</title><rect x="92.9906%" y="85" width="0.0192%" height="15" fill="rgb(228,22,38)" fg:x="33949" fg:w="7"/><text x="93.2406%" y="95.50"></text></g><g><title>MC_Particle::Get_Location (4 samples, 0.01%)</title><rect x="93.0098%" y="85" width="0.0110%" height="15" fill="rgb(235,168,5)" fg:x="33956" fg:w="4"/><text x="93.2598%" y="95.50"></text></g><g><title>MC_Particle::Move_Particle (33 samples, 0.09%)</title><rect x="93.0207%" y="85" width="0.0904%" height="15" fill="rgb(221,155,16)" fg:x="33960" fg:w="33"/><text x="93.2707%" y="95.50"></text></g><g><title>MC_Segment_Outcome (11 samples, 0.03%)</title><rect x="93.1111%" y="85" width="0.0301%" height="15" fill="rgb(215,215,53)" fg:x="33993" fg:w="11"/><text x="93.3611%" y="95.50"></text></g><g><title>MC_Vector::Length (209 samples, 0.57%)</title><rect x="93.1412%" y="85" width="0.5725%" height="15" fill="rgb(223,4,10)" fg:x="34004" fg:w="209"/><text x="93.3912%" y="95.50"></text></g><g><title>qs_vector&lt;ScalarFluxCell&gt;::operator[] (16 samples, 0.04%)</title><rect x="94.7546%" y="69" width="0.0438%" height="15" fill="rgb(234,103,6)" fg:x="34593" fg:w="16"/><text x="95.0046%" y="79.50"></text></g><g><title>Tallies::TallyScalarFlux (414 samples, 1.13%)</title><rect x="93.7137%" y="85" width="1.1340%" height="15" fill="rgb(227,97,0)" fg:x="34213" fg:w="414"/><text x="93.9637%" y="95.50"></text></g><g><title>qs_vector&lt;ScalarFluxTask&gt;::operator[] (18 samples, 0.05%)</title><rect x="94.7984%" y="69" width="0.0493%" height="15" fill="rgb(234,150,53)" fg:x="34609" fg:w="18"/><text x="95.0484%" y="79.50"></text></g><g><title>NuclearDataReaction::getCrossSection (8 samples, 0.02%)</title><rect x="95.7051%" y="37" width="0.0219%" height="15" fill="rgb(228,201,54)" fg:x="34940" fg:w="8"/><text x="95.9551%" y="47.50"></text></g><g><title>NuclearData::getTotalCrossSection (108 samples, 0.30%)</title><rect x="95.4777%" y="53" width="0.2958%" height="15" fill="rgb(222,22,37)" fg:x="34857" fg:w="108"/><text x="95.7277%" y="63.50"></text></g><g><title>qs_vector&lt;NuclearDataReaction&gt;::operator[] (14 samples, 0.04%)</title><rect x="95.7352%" y="37" width="0.0383%" height="15" fill="rgb(237,53,32)" fg:x="34951" fg:w="14"/><text x="95.9852%" y="47.50"></text></g><g><title>macroscopicCrossSection (120 samples, 0.33%)</title><rect x="95.4585%" y="69" width="0.3287%" height="15" fill="rgb(233,25,53)" fg:x="34850" fg:w="120"/><text x="95.7085%" y="79.50"></text></g><g><title>MC_Segment_Outcome (12,666 samples, 34.69%)</title><rect x="61.1455%" y="101" width="34.6938%" height="15" fill="rgb(210,40,34)" fg:x="22323" fg:w="12666"/><text x="61.3955%" y="111.50">MC_Segment_Outcome</text></g><g><title>weightedMacroscopicCrossSection (362 samples, 0.99%)</title><rect x="94.8477%" y="85" width="0.9916%" height="15" fill="rgb(241,220,44)" fg:x="34627" fg:w="362"/><text x="95.0977%" y="95.50"></text></g><g><title>qs_vector&lt;MC_Cell_State&gt;::operator[] (17 samples, 0.05%)</title><rect x="95.7927%" y="69" width="0.0466%" height="15" fill="rgb(235,28,35)" fg:x="34972" fg:w="17"/><text x="96.0427%" y="79.50"></text></g><g><title>MC_Base_Particle::operator= (4 samples, 0.01%)</title><rect x="95.8393%" y="85" width="0.0110%" height="15" fill="rgb(210,56,17)" fg:x="34989" fg:w="4"/><text x="96.0893%" y="95.50"></text></g><g><title>ParticleVault::pushParticle (8 samples, 0.02%)</title><rect x="95.8393%" y="101" width="0.0219%" height="15" fill="rgb(224,130,29)" fg:x="34989" fg:w="8"/><text x="96.0893%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::atomic_Index_Inc (4 samples, 0.01%)</title><rect x="95.8502%" y="85" width="0.0110%" height="15" fill="rgb(235,212,8)" fg:x="34993" fg:w="4"/><text x="96.1002%" y="95.50"></text></g><g><title>CycleTrackingFunction (30,145 samples, 82.57%)</title><rect x="13.3861%" y="117" width="82.5709%" height="15" fill="rgb(223,33,50)" fg:x="4887" fg:w="30145"/><text x="13.6361%" y="127.50">CycleTrackingFunction</text></g><g><title>qs_vector&lt;Balance&gt;::operator[] (35 samples, 0.10%)</title><rect x="95.8612%" y="101" width="0.0959%" height="15" fill="rgb(219,149,13)" fg:x="34997" fg:w="35"/><text x="96.1112%" y="111.50"></text></g><g><title>NuclearData::getEnergyGroup (513 samples, 1.41%)</title><rect x="96.0036%" y="101" width="1.4052%" height="15" fill="rgb(250,156,29)" fg:x="35049" fg:w="513"/><text x="96.2536%" y="111.50"></text></g><g><title>qs_vector&lt;double&gt;::operator[] (13 samples, 0.04%)</title><rect x="97.3732%" y="85" width="0.0356%" height="15" fill="rgb(216,193,19)" fg:x="35549" fg:w="13"/><text x="97.6232%" y="95.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (174 samples, 0.48%)</title><rect x="97.4088%" y="85" width="0.4766%" height="15" fill="rgb(216,135,14)" fg:x="35562" fg:w="174"/><text x="97.6588%" y="95.50"></text></g><g><title>MC_Vector::operator= (58 samples, 0.16%)</title><rect x="97.7265%" y="69" width="0.1589%" height="15" fill="rgb(241,47,5)" fg:x="35678" fg:w="58"/><text x="97.9765%" y="79.50"></text></g><g><title>MC_Particle::MC_Particle (197 samples, 0.54%)</title><rect x="97.8854%" y="85" width="0.5396%" height="15" fill="rgb(233,42,35)" fg:x="35736" fg:w="197"/><text x="98.1354%" y="95.50"></text></g><g><title>MC_Vector::Length (93 samples, 0.25%)</title><rect x="98.1703%" y="69" width="0.2547%" height="15" fill="rgb(231,13,6)" fg:x="35840" fg:w="93"/><text x="98.4203%" y="79.50"></text></g><g><title>MC_Particle::operator= (46 samples, 0.13%)</title><rect x="98.4250%" y="85" width="0.1260%" height="15" fill="rgb(207,181,40)" fg:x="35933" fg:w="46"/><text x="98.6750%" y="95.50"></text></g><g><title>MC_Vector::operator= (10 samples, 0.03%)</title><rect x="98.5236%" y="69" width="0.0274%" height="15" fill="rgb(254,173,49)" fg:x="35969" fg:w="10"/><text x="98.7736%" y="79.50"></text></g><g><title>ParticleVault::size (6 samples, 0.02%)</title><rect x="98.5510%" y="85" width="0.0164%" height="15" fill="rgb(221,1,38)" fg:x="35979" fg:w="6"/><text x="98.8010%" y="95.50"></text></g><g><title>MC_Load_Particle (961 samples, 2.63%)</title><rect x="95.9571%" y="117" width="2.6323%" height="15" fill="rgb(206,124,46)" fg:x="35032" fg:w="961"/><text x="96.2071%" y="127.50">MC..</text></g><g><title>ParticleVault::getParticle (431 samples, 1.18%)</title><rect x="97.4088%" y="101" width="1.1806%" height="15" fill="rgb(249,21,11)" fg:x="35562" fg:w="431"/><text x="97.6588%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::operator[] (8 samples, 0.02%)</title><rect x="98.5674%" y="85" width="0.0219%" height="15" fill="rgb(222,201,40)" fg:x="35985" fg:w="8"/><text x="98.8174%" y="95.50"></text></g><g><title>DirectionCosine::DirectionCosine (8 samples, 0.02%)</title><rect x="98.7866%" y="101" width="0.0219%" height="15" fill="rgb(235,61,29)" fg:x="36065" fg:w="8"/><text x="99.0366%" y="111.50"></text></g><g><title>MC_Particle::MC_Particle (95 samples, 0.26%)</title><rect x="98.5894%" y="117" width="0.2602%" height="15" fill="rgb(219,207,3)" fg:x="35993" fg:w="95"/><text x="98.8394%" y="127.50"></text></g><g><title>MC_Vector::MC_Vector (15 samples, 0.04%)</title><rect x="98.8085%" y="101" width="0.0411%" height="15" fill="rgb(222,56,46)" fg:x="36073" fg:w="15"/><text x="99.0585%" y="111.50"></text></g><g><title>CycleTrackingGuts (31,263 samples, 85.63%)</title><rect x="13.2793%" y="133" width="85.6333%" height="15" fill="rgb(239,76,54)" fg:x="4848" fg:w="31263"/><text x="13.5293%" y="143.50">CycleTrackingGuts</text></g><g><title>ParticleVault::invalidateParticle (23 samples, 0.06%)</title><rect x="98.8496%" y="117" width="0.0630%" height="15" fill="rgb(231,124,27)" fg:x="36088" fg:w="23"/><text x="99.0996%" y="127.50"></text></g><g><title>ParticleVault::append (132 samples, 0.36%)</title><rect x="98.9126%" y="101" width="0.3616%" height="15" fill="rgb(249,195,6)" fg:x="36111" fg:w="132"/><text x="99.1626%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::appendList (132 samples, 0.36%)</title><rect x="98.9126%" y="85" width="0.3616%" height="15" fill="rgb(237,174,47)" fg:x="36111" fg:w="132"/><text x="99.1626%" y="95.50"></text></g><g><title>MC_Base_Particle::operator= (130 samples, 0.36%)</title><rect x="98.9180%" y="69" width="0.3561%" height="15" fill="rgb(206,201,31)" fg:x="36113" fg:w="130"/><text x="99.1680%" y="79.50"></text></g><g><title>MC_Vector::operator= (57 samples, 0.16%)</title><rect x="99.1180%" y="53" width="0.1561%" height="15" fill="rgb(231,57,52)" fg:x="36186" fg:w="57"/><text x="99.3680%" y="63.50"></text></g><g><title>ParticleVault::popBaseParticle (16 samples, 0.04%)</title><rect x="99.2741%" y="101" width="0.0438%" height="15" fill="rgb(248,177,22)" fg:x="36243" fg:w="16"/><text x="99.5241%" y="111.50"></text></g><g><title>MC_Base_Particle::operator= (15 samples, 0.04%)</title><rect x="99.2769%" y="85" width="0.0411%" height="15" fill="rgb(215,211,37)" fg:x="36244" fg:w="15"/><text x="99.5269%" y="95.50"></text></g><g><title>MC_Vector::operator= (13 samples, 0.04%)</title><rect x="99.2823%" y="69" width="0.0356%" height="15" fill="rgb(241,128,51)" fg:x="36246" fg:w="13"/><text x="99.5323%" y="79.50"></text></g><g><title>ParticleVaultContainer::cleanExtraVaults (151 samples, 0.41%)</title><rect x="98.9126%" y="133" width="0.4136%" height="15" fill="rgb(227,165,31)" fg:x="36111" fg:w="151"/><text x="99.1626%" y="143.50"></text></g><g><title>ParticleVault::collapse (151 samples, 0.41%)</title><rect x="98.9126%" y="117" width="0.4136%" height="15" fill="rgb(228,167,24)" fg:x="36111" fg:w="151"/><text x="99.1626%" y="127.50"></text></g><g><title>ParticleVaultContainer::collapseProcessed (36 samples, 0.10%)</title><rect x="99.3262%" y="133" width="0.0986%" height="15" fill="rgb(228,143,12)" fg:x="36262" fg:w="36"/><text x="99.5762%" y="143.50"></text></g><g><title>ParticleVault::collapse (36 samples, 0.10%)</title><rect x="99.3262%" y="117" width="0.0986%" height="15" fill="rgb(249,149,8)" fg:x="36262" fg:w="36"/><text x="99.5762%" y="127.50"></text></g><g><title>ParticleVault::append (36 samples, 0.10%)</title><rect x="99.3262%" y="101" width="0.0986%" height="15" fill="rgb(243,35,44)" fg:x="36262" fg:w="36"/><text x="99.5762%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::appendList (36 samples, 0.10%)</title><rect x="99.3262%" y="85" width="0.0986%" height="15" fill="rgb(246,89,9)" fg:x="36262" fg:w="36"/><text x="99.5762%" y="95.50"></text></g><g><title>MC_Base_Particle::operator= (36 samples, 0.10%)</title><rect x="99.3262%" y="69" width="0.0986%" height="15" fill="rgb(233,213,13)" fg:x="36262" fg:w="36"/><text x="99.5762%" y="79.50"></text></g><g><title>MC_Vector::operator= (14 samples, 0.04%)</title><rect x="99.3864%" y="53" width="0.0383%" height="15" fill="rgb(233,141,41)" fg:x="36284" fg:w="14"/><text x="99.6364%" y="63.50"></text></g><g><title>cycleTracking (31,466 samples, 86.19%)</title><rect x="13.2464%" y="149" width="86.1893%" height="15" fill="rgb(239,167,4)" fg:x="4836" fg:w="31466"/><text x="13.4964%" y="159.50">cycleTracking</text></g><g><title>MC_Mesh_Domain::MC_Mesh_Domain (8 samples, 0.02%)</title><rect x="99.4357%" y="117" width="0.0219%" height="15" fill="rgb(209,217,16)" fg:x="36302" fg:w="8"/><text x="99.6857%" y="127.50"></text></g><g><title>MC_Domain::MC_Domain (9 samples, 0.02%)</title><rect x="99.4357%" y="133" width="0.0247%" height="15" fill="rgb(219,88,35)" fg:x="36302" fg:w="9"/><text x="99.6857%" y="143.50"></text></g><g><title>MeshPartition::buildMeshPartition (5 samples, 0.01%)</title><rect x="99.4604%" y="133" width="0.0137%" height="15" fill="rgb(220,193,23)" fg:x="36311" fg:w="5"/><text x="99.7104%" y="143.50"></text></g><g><title>MC_Base_Particle::MC_Base_Particle (182 samples, 0.50%)</title><rect x="99.4768%" y="53" width="0.4985%" height="15" fill="rgb(230,90,52)" fg:x="36317" fg:w="182"/><text x="99.7268%" y="63.50"></text></g><g><title>MC_Vector::MC_Vector (58 samples, 0.16%)</title><rect x="99.8165%" y="37" width="0.1589%" height="15" fill="rgb(252,106,19)" fg:x="36441" fg:w="58"/><text x="100.0665%" y="47.50"></text></g><g><title>MonteCarlo::MonteCarlo (184 samples, 0.50%)</title><rect x="99.4741%" y="133" width="0.5040%" height="15" fill="rgb(206,74,20)" fg:x="36316" fg:w="184"/><text x="99.7241%" y="143.50"></text></g><g><title>ParticleVaultContainer::ParticleVaultContainer (184 samples, 0.50%)</title><rect x="99.4741%" y="117" width="0.5040%" height="15" fill="rgb(230,138,44)" fg:x="36316" fg:w="184"/><text x="99.7241%" y="127.50"></text></g><g><title>ParticleVault::reserve (183 samples, 0.50%)</title><rect x="99.4768%" y="101" width="0.5013%" height="15" fill="rgb(235,182,43)" fg:x="36317" fg:w="183"/><text x="99.7268%" y="111.50"></text></g><g><title>qs_vector&lt;MC_Base_Particle&gt;::reserve (183 samples, 0.50%)</title><rect x="99.4768%" y="85" width="0.5013%" height="15" fill="rgb(242,16,51)" fg:x="36317" fg:w="183"/><text x="99.7268%" y="95.50"></text></g><g><title>MemoryControl::allocate&lt;MC_Base_Particle&gt; (183 samples, 0.50%)</title><rect x="99.4768%" y="69" width="0.5013%" height="15" fill="rgb(248,9,4)" fg:x="36317" fg:w="183"/><text x="99.7268%" y="79.50"></text></g><g><title>NuclearData::addIsotope (4 samples, 0.01%)</title><rect x="99.9781%" y="117" width="0.0110%" height="15" fill="rgb(210,31,22)" fg:x="36500" fg:w="4"/><text x="100.2281%" y="127.50"></text></g><g><title>NuclearDataSpecies::addReaction (4 samples, 0.01%)</title><rect x="99.9781%" y="101" width="0.0110%" height="15" fill="rgb(239,54,39)" fg:x="36500" fg:w="4"/><text x="100.2281%" y="111.50"></text></g><g><title>NuclearDataReaction::NuclearDataReaction (4 samples, 0.01%)</title><rect x="99.9781%" y="85" width="0.0110%" height="15" fill="rgb(230,99,41)" fg:x="36500" fg:w="4"/><text x="100.2281%" y="95.50"></text></g><g><title>__libc_start_main_impl (32,920 samples, 90.17%)</title><rect x="9.8198%" y="197" width="90.1720%" height="15" fill="rgb(253,106,12)" fg:x="3585" fg:w="32920"/><text x="10.0698%" y="207.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (32,920 samples, 90.17%)</title><rect x="9.8198%" y="181" width="90.1720%" height="15" fill="rgb(213,46,41)" fg:x="3585" fg:w="32920"/><text x="10.0698%" y="191.50">__libc_start_call_main</text></g><g><title>main (32,919 samples, 90.17%)</title><rect x="9.8225%" y="165" width="90.1693%" height="15" fill="rgb(215,133,35)" fg:x="3586" fg:w="32919"/><text x="10.0725%" y="175.50">main</text></g><g><title>initMC (203 samples, 0.56%)</title><rect x="99.4357%" y="149" width="0.5560%" height="15" fill="rgb(213,28,5)" fg:x="36302" fg:w="203"/><text x="99.6857%" y="159.50"></text></g><g><title>initMC (5 samples, 0.01%)</title><rect x="99.9781%" y="133" width="0.0137%" height="15" fill="rgb(215,77,49)" fg:x="36500" fg:w="5"/><text x="100.2281%" y="143.50"></text></g><g><title>all (36,508 samples, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="36508"/><text x="0.2500%" y="255.50"></text></g><g><title>qs (36,508 samples, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(208,67,9)" fg:x="0" fg:w="36508"/><text x="0.2500%" y="239.50">qs</text></g><g><title>_start (32,928 samples, 90.19%)</title><rect x="9.8061%" y="213" width="90.1939%" height="15" fill="rgb(219,133,21)" fg:x="3580" fg:w="32928"/><text x="10.0561%" y="223.50">_start</text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="26315"><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (19 samples, 0.07%)</title><rect x="0.0000%" y="725" width="0.0722%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="19"/><text x="0.2500%" y="735.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (16 samples, 0.06%)</title><rect x="0.0722%" y="725" width="0.0608%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="16"/><text x="0.3222%" y="735.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::get_current_xs (5 samples, 0.02%)</title><rect x="0.1140%" y="709" width="0.0190%" height="15" fill="rgb(221,193,54)" fg:x="30" fg:w="5"/><text x="0.3640%" y="719.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (3 samples, 0.01%)</title><rect x="0.1330%" y="725" width="0.0114%" height="15" fill="rgb(248,212,6)" fg:x="35" fg:w="3"/><text x="0.3830%" y="735.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (23 samples, 0.09%)</title><rect x="0.1444%" y="725" width="0.0874%" height="15" fill="rgb(208,68,35)" fg:x="38" fg:w="23"/><text x="0.3944%" y="735.50"></text></g><g><title>[[heap]] (79 samples, 0.30%)</title><rect x="0.0000%" y="741" width="0.3002%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="79"/><text x="0.2500%" y="751.50"></text></g><g><title>fastiron::simulation::mct::nearest_facet (18 samples, 0.07%)</title><rect x="0.2318%" y="725" width="0.0684%" height="15" fill="rgb(207,160,47)" fg:x="61" fg:w="18"/><text x="0.4818%" y="735.50"></text></g><g><title>[[stack]] (3 samples, 0.01%)</title><rect x="0.3002%" y="741" width="0.0114%" height="15" fill="rgb(228,23,34)" fg:x="79" fg:w="3"/><text x="0.5502%" y="751.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (4 samples, 0.02%)</title><rect x="0.3116%" y="725" width="0.0152%" height="15" fill="rgb(218,30,26)" fg:x="82" fg:w="4"/><text x="0.5616%" y="735.50"></text></g><g><title>[anon] (26 samples, 0.10%)</title><rect x="0.3116%" y="741" width="0.0988%" height="15" fill="rgb(220,122,19)" fg:x="82" fg:w="26"/><text x="0.5616%" y="751.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (22 samples, 0.08%)</title><rect x="0.3268%" y="725" width="0.0836%" height="15" fill="rgb(250,228,42)" fg:x="86" fg:w="22"/><text x="0.5768%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="0.4104%" y="725" width="0.0114%" height="15" fill="rgb(240,193,28)" fg:x="108" fg:w="3"/><text x="0.6604%" y="735.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (9 samples, 0.03%)</title><rect x="0.4370%" y="725" width="0.0342%" height="15" fill="rgb(216,20,37)" fg:x="115" fg:w="9"/><text x="0.6870%" y="735.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (5 samples, 0.02%)</title><rect x="0.4712%" y="725" width="0.0190%" height="15" fill="rgb(206,188,39)" fg:x="124" fg:w="5"/><text x="0.7212%" y="735.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::get_current_xs (4 samples, 0.02%)</title><rect x="0.4750%" y="709" width="0.0152%" height="15" fill="rgb(217,207,13)" fg:x="125" fg:w="4"/><text x="0.7250%" y="719.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (19 samples, 0.07%)</title><rect x="0.4902%" y="725" width="0.0722%" height="15" fill="rgb(231,73,38)" fg:x="129" fg:w="19"/><text x="0.7402%" y="735.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (14 samples, 0.05%)</title><rect x="0.5092%" y="709" width="0.0532%" height="15" fill="rgb(225,20,46)" fg:x="134" fg:w="14"/><text x="0.7592%" y="719.50"></text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (11 samples, 0.04%)</title><rect x="0.5624%" y="725" width="0.0418%" height="15" fill="rgb(210,31,41)" fg:x="148" fg:w="11"/><text x="0.8124%" y="735.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (39 samples, 0.15%)</title><rect x="0.6042%" y="725" width="0.1482%" height="15" fill="rgb(221,200,47)" fg:x="159" fg:w="39"/><text x="0.8542%" y="735.50"></text></g><g><title>[unknown] (122 samples, 0.46%)</title><rect x="0.4104%" y="741" width="0.4636%" height="15" fill="rgb(226,26,5)" fg:x="108" fg:w="122"/><text x="0.6604%" y="751.50"></text></g><g><title>fastiron::simulation::mct::nearest_facet (32 samples, 0.12%)</title><rect x="0.7524%" y="725" width="0.1216%" height="15" fill="rgb(249,33,26)" fg:x="198" fg:w="32"/><text x="1.0024%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.10%)</title><rect x="0.8930%" y="405" width="0.0988%" height="15" fill="rgb(235,183,28)" fg:x="235" fg:w="26"/><text x="1.1430%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.10%)</title><rect x="0.8930%" y="389" width="0.0988%" height="15" fill="rgb(221,5,38)" fg:x="235" fg:w="26"/><text x="1.1430%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::clean_extra_vaults (27 samples, 0.10%)</title><rect x="0.8930%" y="453" width="0.1026%" height="15" fill="rgb(247,18,42)" fg:x="235" fg:w="27"/><text x="1.1430%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (27 samples, 0.10%)</title><rect x="0.8930%" y="437" width="0.1026%" height="15" fill="rgb(241,131,45)" fg:x="235" fg:w="27"/><text x="1.1430%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.10%)</title><rect x="0.8930%" y="421" width="0.1026%" height="15" fill="rgb(249,31,29)" fg:x="235" fg:w="27"/><text x="1.1430%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="0.9956%" y="421" width="0.0152%" height="15" fill="rgb(225,111,53)" fg:x="262" fg:w="4"/><text x="1.2456%" y="431.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (25 samples, 0.10%)</title><rect x="1.1552%" y="389" width="0.0950%" height="15" fill="rgb(238,160,17)" fg:x="304" fg:w="25"/><text x="1.4052%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (3 samples, 0.01%)</title><rect x="1.2388%" y="373" width="0.0114%" height="15" fill="rgb(214,148,48)" fg:x="326" fg:w="3"/><text x="1.4888%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (26 samples, 0.10%)</title><rect x="1.6454%" y="373" width="0.0988%" height="15" fill="rgb(232,36,49)" fg:x="433" fg:w="26"/><text x="1.8954%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26 samples, 0.10%)</title><rect x="1.6454%" y="357" width="0.0988%" height="15" fill="rgb(209,103,24)" fg:x="433" fg:w="26"/><text x="1.8954%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.10%)</title><rect x="1.6454%" y="341" width="0.0988%" height="15" fill="rgb(229,88,8)" fg:x="433" fg:w="26"/><text x="1.8954%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24 samples, 0.09%)</title><rect x="2.6525%" y="357" width="0.0912%" height="15" fill="rgb(213,181,19)" fg:x="698" fg:w="24"/><text x="2.9025%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.09%)</title><rect x="2.6525%" y="341" width="0.0912%" height="15" fill="rgb(254,191,54)" fg:x="698" fg:w="24"/><text x="2.9025%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.09%)</title><rect x="2.6525%" y="325" width="0.0912%" height="15" fill="rgb(241,83,37)" fg:x="698" fg:w="24"/><text x="2.9025%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.02%)</title><rect x="2.7437%" y="357" width="0.0152%" height="15" fill="rgb(233,36,39)" fg:x="722" fg:w="4"/><text x="2.9937%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (4 samples, 0.02%)</title><rect x="2.7589%" y="357" width="0.0152%" height="15" fill="rgb(226,3,54)" fg:x="726" fg:w="4"/><text x="3.0089%" y="367.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (345 samples, 1.31%)</title><rect x="1.7481%" y="373" width="1.3110%" height="15" fill="rgb(245,192,40)" fg:x="460" fg:w="345"/><text x="1.9981%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (74 samples, 0.28%)</title><rect x="2.7779%" y="357" width="0.2812%" height="15" fill="rgb(238,167,29)" fg:x="731" fg:w="74"/><text x="3.0279%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (90 samples, 0.34%)</title><rect x="5.8104%" y="357" width="0.3420%" height="15" fill="rgb(232,182,51)" fg:x="1529" fg:w="90"/><text x="6.0604%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (90 samples, 0.34%)</title><rect x="5.8104%" y="341" width="0.3420%" height="15" fill="rgb(231,60,39)" fg:x="1529" fg:w="90"/><text x="6.0604%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (90 samples, 0.34%)</title><rect x="5.8104%" y="325" width="0.3420%" height="15" fill="rgb(208,69,12)" fg:x="1529" fg:w="90"/><text x="6.0604%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (524 samples, 1.99%)</title><rect x="6.1524%" y="357" width="1.9913%" height="15" fill="rgb(235,93,37)" fg:x="1619" fg:w="524"/><text x="6.4024%" y="367.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (9 samples, 0.03%)</title><rect x="8.1436%" y="357" width="0.0342%" height="15" fill="rgb(213,116,39)" fg:x="2143" fg:w="9"/><text x="8.3936%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (120 samples, 0.46%)</title><rect x="8.1778%" y="357" width="0.4560%" height="15" fill="rgb(222,207,29)" fg:x="2152" fg:w="120"/><text x="8.4278%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (288 samples, 1.09%)</title><rect x="8.6339%" y="325" width="1.0944%" height="15" fill="rgb(206,96,30)" fg:x="2272" fg:w="288"/><text x="8.8839%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (288 samples, 1.09%)</title><rect x="8.6339%" y="309" width="1.0944%" height="15" fill="rgb(218,138,4)" fg:x="2272" fg:w="288"/><text x="8.8839%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (333 samples, 1.27%)</title><rect x="8.6339%" y="357" width="1.2654%" height="15" fill="rgb(250,191,14)" fg:x="2272" fg:w="333"/><text x="8.8839%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (333 samples, 1.27%)</title><rect x="8.6339%" y="341" width="1.2654%" height="15" fill="rgb(239,60,40)" fg:x="2272" fg:w="333"/><text x="8.8839%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (45 samples, 0.17%)</title><rect x="9.7283%" y="325" width="0.1710%" height="15" fill="rgb(206,27,48)" fg:x="2560" fg:w="45"/><text x="9.9783%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (68 samples, 0.26%)</title><rect x="10.0247%" y="341" width="0.2584%" height="15" fill="rgb(225,35,8)" fg:x="2638" fg:w="68"/><text x="10.2747%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (68 samples, 0.26%)</title><rect x="10.0247%" y="325" width="0.2584%" height="15" fill="rgb(250,213,24)" fg:x="2638" fg:w="68"/><text x="10.2747%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (68 samples, 0.26%)</title><rect x="10.0247%" y="309" width="0.2584%" height="15" fill="rgb(247,123,22)" fg:x="2638" fg:w="68"/><text x="10.2747%" y="319.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_number_reactions (216 samples, 0.82%)</title><rect x="9.8993%" y="357" width="0.8208%" height="15" fill="rgb(231,138,38)" fg:x="2605" fg:w="216"/><text x="10.1493%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (115 samples, 0.44%)</title><rect x="10.2831%" y="341" width="0.4370%" height="15" fill="rgb(231,145,46)" fg:x="2706" fg:w="115"/><text x="10.5331%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (4 samples, 0.02%)</title><rect x="10.7201%" y="341" width="0.0152%" height="15" fill="rgb(251,118,11)" fg:x="2821" fg:w="4"/><text x="10.9701%" y="351.50"></text></g><g><title>&lt;f32 as num_traits::cast::FromPrimitive&gt;::from_f64 (11 samples, 0.04%)</title><rect x="10.7619%" y="325" width="0.0418%" height="15" fill="rgb(217,147,25)" fg:x="2832" fg:w="11"/><text x="11.0119%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f32 (11 samples, 0.04%)</title><rect x="10.7619%" y="309" width="0.0418%" height="15" fill="rgb(247,81,37)" fg:x="2832" fg:w="11"/><text x="11.0119%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (6 samples, 0.02%)</title><rect x="10.8075%" y="325" width="0.0228%" height="15" fill="rgb(209,12,38)" fg:x="2844" fg:w="6"/><text x="11.0575%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::get_current_xs (30 samples, 0.11%)</title><rect x="10.7201%" y="357" width="0.1140%" height="15" fill="rgb(227,1,9)" fg:x="2821" fg:w="30"/><text x="10.9701%" y="367.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (26 samples, 0.10%)</title><rect x="10.7353%" y="341" width="0.0988%" height="15" fill="rgb(248,47,43)" fg:x="2825" fg:w="26"/><text x="10.9853%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="11.0963%" y="277" width="0.0190%" height="15" fill="rgb(221,10,30)" fg:x="2920" fg:w="5"/><text x="11.3463%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.02%)</title><rect x="11.0963%" y="261" width="0.0190%" height="15" fill="rgb(210,229,1)" fg:x="2920" fg:w="5"/><text x="11.3463%" y="271.50"></text></g><g><title>&lt;tinyvec::arrayvec::ArrayVecIterator&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="11.1001%" y="245" width="0.0152%" height="15" fill="rgb(222,148,37)" fg:x="2921" fg:w="4"/><text x="11.3501%" y="255.50"></text></g><g><title>tinyvec::take (3 samples, 0.01%)</title><rect x="11.1039%" y="229" width="0.0114%" height="15" fill="rgb(234,67,33)" fg:x="2922" fg:w="3"/><text x="11.3539%" y="239.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="11.1039%" y="213" width="0.0114%" height="15" fill="rgb(247,98,35)" fg:x="2922" fg:w="3"/><text x="11.3539%" y="223.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="11.1039%" y="197" width="0.0114%" height="15" fill="rgb(247,138,52)" fg:x="2922" fg:w="3"/><text x="11.3539%" y="207.50"></text></g><g><title>&lt;fastiron::particles::mc_particle::MCParticle&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="11.1571%" y="229" width="0.0190%" height="15" fill="rgb(213,79,30)" fg:x="2936" fg:w="5"/><text x="11.4071%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (7 samples, 0.03%)</title><rect x="11.1761%" y="213" width="0.0266%" height="15" fill="rgb(246,177,23)" fg:x="2941" fg:w="7"/><text x="11.4261%" y="223.50"></text></g><g><title>reduce_fast (12 samples, 0.05%)</title><rect x="11.2217%" y="165" width="0.0456%" height="15" fill="rgb(230,62,27)" fg:x="2953" fg:w="12"/><text x="11.4717%" y="175.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::cos (28 samples, 0.11%)</title><rect x="11.2027%" y="213" width="0.1064%" height="15" fill="rgb(216,154,8)" fg:x="2948" fg:w="28"/><text x="11.4527%" y="223.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (28 samples, 0.11%)</title><rect x="11.2027%" y="197" width="0.1064%" height="15" fill="rgb(244,35,45)" fg:x="2948" fg:w="28"/><text x="11.4527%" y="207.50"></text></g><g><title>__sincosf_fma (28 samples, 0.11%)</title><rect x="11.2027%" y="181" width="0.1064%" height="15" fill="rgb(251,115,12)" fg:x="2948" fg:w="28"/><text x="11.4527%" y="191.50"></text></g><g><title>sincosf_poly (11 samples, 0.04%)</title><rect x="11.2673%" y="165" width="0.0418%" height="15" fill="rgb(240,54,50)" fg:x="2965" fg:w="11"/><text x="11.5173%" y="175.50"></text></g><g><title>v2df_to_sf (5 samples, 0.02%)</title><rect x="11.2901%" y="149" width="0.0190%" height="15" fill="rgb(233,84,52)" fg:x="2971" fg:w="5"/><text x="11.5401%" y="159.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (7 samples, 0.03%)</title><rect x="11.3243%" y="197" width="0.0266%" height="15" fill="rgb(207,117,47)" fg:x="2980" fg:w="7"/><text x="11.5743%" y="207.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::rotate_direction (14 samples, 0.05%)</title><rect x="11.3091%" y="213" width="0.0532%" height="15" fill="rgb(249,43,39)" fg:x="2976" fg:w="14"/><text x="11.5591%" y="223.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::ln (11 samples, 0.04%)</title><rect x="11.3661%" y="197" width="0.0418%" height="15" fill="rgb(209,38,44)" fg:x="2991" fg:w="11"/><text x="11.6161%" y="207.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::ln (11 samples, 0.04%)</title><rect x="11.3661%" y="181" width="0.0418%" height="15" fill="rgb(236,212,23)" fg:x="2991" fg:w="11"/><text x="11.6161%" y="191.50"></text></g><g><title>__logf_fma (11 samples, 0.04%)</title><rect x="11.3661%" y="165" width="0.0418%" height="15" fill="rgb(242,79,21)" fg:x="2991" fg:w="11"/><text x="11.6161%" y="175.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_num_mfp (14 samples, 0.05%)</title><rect x="11.3623%" y="213" width="0.0532%" height="15" fill="rgb(211,96,35)" fg:x="2990" fg:w="14"/><text x="11.6123%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.33%)</title><rect x="11.0963%" y="293" width="0.3344%" height="15" fill="rgb(253,215,40)" fg:x="2920" fg:w="88"/><text x="11.3463%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (83 samples, 0.32%)</title><rect x="11.1153%" y="277" width="0.3154%" height="15" fill="rgb(211,81,21)" fg:x="2925" fg:w="83"/><text x="11.3653%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (74 samples, 0.28%)</title><rect x="11.1495%" y="261" width="0.2812%" height="15" fill="rgb(208,190,38)" fg:x="2934" fg:w="74"/><text x="11.3995%" y="271.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision::{{closure}} (72 samples, 0.27%)</title><rect x="11.1571%" y="245" width="0.2736%" height="15" fill="rgb(235,213,38)" fg:x="2936" fg:w="72"/><text x="11.4071%" y="255.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::update_trajectory (67 samples, 0.25%)</title><rect x="11.1761%" y="229" width="0.2546%" height="15" fill="rgb(237,122,38)" fg:x="2941" fg:w="67"/><text x="11.4261%" y="239.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (4 samples, 0.02%)</title><rect x="11.4155%" y="213" width="0.0152%" height="15" fill="rgb(244,218,35)" fg:x="3004" fg:w="4"/><text x="11.6655%" y="223.50"></text></g><g><title>&lt;f32 as num_traits::cast::FromPrimitive&gt;::from_f64 (3 samples, 0.01%)</title><rect x="11.4193%" y="197" width="0.0114%" height="15" fill="rgb(240,68,47)" fg:x="3005" fg:w="3"/><text x="11.6693%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f32 (3 samples, 0.01%)</title><rect x="11.4193%" y="181" width="0.0114%" height="15" fill="rgb(210,16,53)" fg:x="3005" fg:w="3"/><text x="11.6693%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (96 samples, 0.36%)</title><rect x="11.0963%" y="341" width="0.3648%" height="15" fill="rgb(235,124,12)" fg:x="2920" fg:w="96"/><text x="11.3463%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (96 samples, 0.36%)</title><rect x="11.0963%" y="325" width="0.3648%" height="15" fill="rgb(224,169,11)" fg:x="2920" fg:w="96"/><text x="11.3463%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (96 samples, 0.36%)</title><rect x="11.0963%" y="309" width="0.3648%" height="15" fill="rgb(250,166,2)" fg:x="2920" fg:w="96"/><text x="11.3463%" y="319.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="11.4383%" y="293" width="0.0228%" height="15" fill="rgb(242,216,29)" fg:x="3010" fg:w="6"/><text x="11.6883%" y="303.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (3 samples, 0.01%)</title><rect x="11.4611%" y="341" width="0.0114%" height="15" fill="rgb(230,116,27)" fg:x="3016" fg:w="3"/><text x="11.7111%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (19 samples, 0.07%)</title><rect x="11.4725%" y="341" width="0.0722%" height="15" fill="rgb(228,99,48)" fg:x="3019" fg:w="19"/><text x="11.7225%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (21 samples, 0.08%)</title><rect x="11.5447%" y="341" width="0.0798%" height="15" fill="rgb(253,11,6)" fg:x="3038" fg:w="21"/><text x="11.7947%" y="351.50"></text></g><g><title>&lt;f32 as num_traits::cast::ToPrimitive&gt;::to_usize (3 samples, 0.01%)</title><rect x="11.6245%" y="341" width="0.0114%" height="15" fill="rgb(247,143,39)" fg:x="3059" fg:w="3"/><text x="11.8745%" y="351.50"></text></g><g><title>fastiron::utils::mc_rng_state::hash_state (4 samples, 0.02%)</title><rect x="11.6435%" y="245" width="0.0152%" height="15" fill="rgb(236,97,10)" fg:x="3064" fg:w="4"/><text x="11.8935%" y="255.50"></text></g><g><title>fastiron::utils::mc_rng_state::pseudo_des (3 samples, 0.01%)</title><rect x="11.6473%" y="229" width="0.0114%" height="15" fill="rgb(233,208,19)" fg:x="3065" fg:w="3"/><text x="11.8973%" y="239.50"></text></g><g><title>&lt;tinyvec::arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as tinyvec::array::Array&gt;::Item&gt;&gt;::extend (7 samples, 0.03%)</title><rect x="11.6359%" y="341" width="0.0266%" height="15" fill="rgb(216,164,2)" fg:x="3062" fg:w="7"/><text x="11.8859%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="11.6359%" y="325" width="0.0266%" height="15" fill="rgb(220,129,5)" fg:x="3062" fg:w="7"/><text x="11.8859%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.03%)</title><rect x="11.6359%" y="309" width="0.0266%" height="15" fill="rgb(242,17,10)" fg:x="3062" fg:w="7"/><text x="11.8859%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.03%)</title><rect x="11.6359%" y="293" width="0.0266%" height="15" fill="rgb(242,107,0)" fg:x="3062" fg:w="7"/><text x="11.8859%" y="303.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision::{{closure}} (7 samples, 0.03%)</title><rect x="11.6359%" y="277" width="0.0266%" height="15" fill="rgb(251,28,31)" fg:x="3062" fg:w="7"/><text x="11.8859%" y="287.50"></text></g><g><title>fastiron::utils::mc_rng_state::spawn_rn_seed (5 samples, 0.02%)</title><rect x="11.6435%" y="261" width="0.0190%" height="15" fill="rgb(233,223,10)" fg:x="3064" fg:w="5"/><text x="11.8935%" y="271.50"></text></g><g><title>__logf_fma (106 samples, 0.40%)</title><rect x="11.6625%" y="341" width="0.4028%" height="15" fill="rgb(215,21,27)" fg:x="3069" fg:w="106"/><text x="11.9125%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (8 samples, 0.03%)</title><rect x="12.0730%" y="341" width="0.0304%" height="15" fill="rgb(232,23,21)" fg:x="3177" fg:w="8"/><text x="12.3230%" y="351.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (8 samples, 0.03%)</title><rect x="12.0730%" y="325" width="0.0304%" height="15" fill="rgb(244,5,23)" fg:x="3177" fg:w="8"/><text x="12.3230%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (3 samples, 0.01%)</title><rect x="12.1034%" y="341" width="0.0114%" height="15" fill="rgb(226,81,46)" fg:x="3185" fg:w="3"/><text x="12.3534%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (8 samples, 0.03%)</title><rect x="12.1148%" y="325" width="0.0304%" height="15" fill="rgb(247,70,30)" fg:x="3188" fg:w="8"/><text x="12.3648%" y="335.50"></text></g><g><title>abstop12 (8 samples, 0.03%)</title><rect x="12.3352%" y="277" width="0.0304%" height="15" fill="rgb(212,68,19)" fg:x="3246" fg:w="8"/><text x="12.5852%" y="287.50"></text></g><g><title>reduce_fast (81 samples, 0.31%)</title><rect x="12.3656%" y="277" width="0.3078%" height="15" fill="rgb(240,187,13)" fg:x="3254" fg:w="81"/><text x="12.6156%" y="287.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::cos (258 samples, 0.98%)</title><rect x="12.1452%" y="325" width="0.9804%" height="15" fill="rgb(223,113,26)" fg:x="3196" fg:w="258"/><text x="12.3952%" y="335.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (258 samples, 0.98%)</title><rect x="12.1452%" y="309" width="0.9804%" height="15" fill="rgb(206,192,2)" fg:x="3196" fg:w="258"/><text x="12.3952%" y="319.50"></text></g><g><title>__sincosf_fma (258 samples, 0.98%)</title><rect x="12.1452%" y="293" width="0.9804%" height="15" fill="rgb(241,108,4)" fg:x="3196" fg:w="258"/><text x="12.3952%" y="303.50"></text></g><g><title>sincosf_poly (119 samples, 0.45%)</title><rect x="12.6734%" y="277" width="0.4522%" height="15" fill="rgb(247,173,49)" fg:x="3335" fg:w="119"/><text x="12.9234%" y="287.50"></text></g><g><title>v2df_to_sf (29 samples, 0.11%)</title><rect x="13.0154%" y="261" width="0.1102%" height="15" fill="rgb(224,114,35)" fg:x="3425" fg:w="29"/><text x="13.2654%" y="271.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (21 samples, 0.08%)</title><rect x="13.1256%" y="325" width="0.0798%" height="15" fill="rgb(245,159,27)" fg:x="3454" fg:w="21"/><text x="13.3756%" y="335.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (20 samples, 0.08%)</title><rect x="13.1294%" y="309" width="0.0760%" height="15" fill="rgb(245,172,44)" fg:x="3455" fg:w="20"/><text x="13.3794%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (21 samples, 0.08%)</title><rect x="13.2396%" y="309" width="0.0798%" height="15" fill="rgb(236,23,11)" fg:x="3484" fg:w="21"/><text x="13.4896%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (15 samples, 0.06%)</title><rect x="13.3194%" y="309" width="0.0570%" height="15" fill="rgb(205,117,38)" fg:x="3505" fg:w="15"/><text x="13.5694%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (63 samples, 0.24%)</title><rect x="13.3764%" y="309" width="0.2394%" height="15" fill="rgb(237,72,25)" fg:x="3520" fg:w="63"/><text x="13.6264%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (38 samples, 0.14%)</title><rect x="13.6158%" y="309" width="0.1444%" height="15" fill="rgb(244,70,9)" fg:x="3583" fg:w="38"/><text x="13.8658%" y="319.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::rotate_direction (150 samples, 0.57%)</title><rect x="13.2054%" y="325" width="0.5700%" height="15" fill="rgb(217,125,39)" fg:x="3475" fg:w="150"/><text x="13.4554%" y="335.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (4 samples, 0.02%)</title><rect x="13.7602%" y="309" width="0.0152%" height="15" fill="rgb(235,36,10)" fg:x="3621" fg:w="4"/><text x="14.0102%" y="319.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (4 samples, 0.02%)</title><rect x="13.7602%" y="293" width="0.0152%" height="15" fill="rgb(251,123,47)" fg:x="3621" fg:w="4"/><text x="14.0102%" y="303.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (10 samples, 0.04%)</title><rect x="13.7754%" y="325" width="0.0380%" height="15" fill="rgb(221,13,13)" fg:x="3625" fg:w="10"/><text x="14.0254%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_num_mfp (7 samples, 0.03%)</title><rect x="13.8134%" y="325" width="0.0266%" height="15" fill="rgb(238,131,9)" fg:x="3635" fg:w="7"/><text x="14.0634%" y="335.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (7 samples, 0.03%)</title><rect x="13.8134%" y="309" width="0.0266%" height="15" fill="rgb(211,50,8)" fg:x="3635" fg:w="7"/><text x="14.0634%" y="319.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (6 samples, 0.02%)</title><rect x="13.8172%" y="293" width="0.0228%" height="15" fill="rgb(245,182,24)" fg:x="3636" fg:w="6"/><text x="14.0672%" y="303.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::update_trajectory (476 samples, 1.81%)</title><rect x="12.1148%" y="341" width="1.8089%" height="15" fill="rgb(242,14,37)" fg:x="3188" fg:w="476"/><text x="12.3648%" y="351.50">f..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (22 samples, 0.08%)</title><rect x="13.8400%" y="325" width="0.0836%" height="15" fill="rgb(246,228,12)" fg:x="3642" fg:w="22"/><text x="14.0900%" y="335.50"></text></g><g><title>&lt;f32 as num_traits::cast::FromPrimitive&gt;::from_f64 (7 samples, 0.03%)</title><rect x="13.8970%" y="309" width="0.0266%" height="15" fill="rgb(213,55,15)" fg:x="3657" fg:w="7"/><text x="14.1470%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f32 (7 samples, 0.03%)</title><rect x="13.8970%" y="293" width="0.0266%" height="15" fill="rgb(209,9,3)" fg:x="3657" fg:w="7"/><text x="14.1470%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::cast::ToPrimitive&gt;::to_f32 (37 samples, 0.14%)</title><rect x="14.3492%" y="309" width="0.1406%" height="15" fill="rgb(230,59,30)" fg:x="3776" fg:w="37"/><text x="14.5992%" y="319.50"></text></g><g><title>&lt;f32 as num_traits::cast::FromPrimitive&gt;::from_f64 (40 samples, 0.15%)</title><rect x="14.3492%" y="325" width="0.1520%" height="15" fill="rgb(209,121,21)" fg:x="3776" fg:w="40"/><text x="14.5992%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (3 samples, 0.01%)</title><rect x="14.4898%" y="309" width="0.0114%" height="15" fill="rgb(220,109,13)" fg:x="3813" fg:w="3"/><text x="14.7398%" y="319.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::sample_collision (978 samples, 3.72%)</title><rect x="10.8341%" y="357" width="3.7165%" height="15" fill="rgb(232,18,1)" fg:x="2851" fg:w="978"/><text x="11.0841%" y="367.50">fast..</text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (165 samples, 0.63%)</title><rect x="13.9236%" y="341" width="0.6270%" height="15" fill="rgb(215,41,42)" fg:x="3664" fg:w="165"/><text x="14.1736%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (12 samples, 0.05%)</title><rect x="14.5050%" y="325" width="0.0456%" height="15" fill="rgb(224,123,36)" fg:x="3817" fg:w="12"/><text x="14.7550%" y="335.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (47 samples, 0.18%)</title><rect x="14.5506%" y="357" width="0.1786%" height="15" fill="rgb(240,125,3)" fg:x="3829" fg:w="47"/><text x="14.8006%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (726 samples, 2.76%)</title><rect x="15.5425%" y="341" width="2.7589%" height="15" fill="rgb(205,98,50)" fg:x="4090" fg:w="726"/><text x="15.7925%" y="351.50">&lt;f..</text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_reaction_cross_section (798 samples, 3.03%)</title><rect x="18.3089%" y="341" width="3.0325%" height="15" fill="rgb(205,185,37)" fg:x="4818" fg:w="798"/><text x="18.5589%" y="351.50">fas..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (241 samples, 0.92%)</title><rect x="20.4256%" y="325" width="0.9158%" height="15" fill="rgb(238,207,15)" fg:x="5375" fg:w="241"/><text x="20.6756%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (241 samples, 0.92%)</title><rect x="20.4256%" y="309" width="0.9158%" height="15" fill="rgb(213,199,42)" fg:x="5375" fg:w="241"/><text x="20.6756%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (241 samples, 0.92%)</title><rect x="20.4256%" y="293" width="0.9158%" height="15" fill="rgb(235,201,11)" fg:x="5375" fg:w="241"/><text x="20.6756%" y="303.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (5,130 samples, 19.49%)</title><rect x="3.0591%" y="373" width="19.4946%" height="15" fill="rgb(207,46,11)" fg:x="805" fg:w="5130"/><text x="3.3091%" y="383.50">fastiron::simulation::collision..</text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_cross_section (2,059 samples, 7.82%)</title><rect x="14.7292%" y="357" width="7.8244%" height="15" fill="rgb(241,35,35)" fg:x="3876" fg:w="2059"/><text x="14.9792%" y="367.50">fastiron::s..</text></g><g><title>fastiron::simulation::collision_event::collision_event (319 samples, 1.21%)</title><rect x="21.3414%" y="341" width="1.2122%" height="15" fill="rgb(243,32,47)" fg:x="5616" fg:w="319"/><text x="21.5914%" y="351.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (170 samples, 0.65%)</title><rect x="22.5537%" y="373" width="0.6460%" height="15" fill="rgb(247,202,23)" fg:x="5935" fg:w="170"/><text x="22.8037%" y="383.50"></text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (84 samples, 0.32%)</title><rect x="23.1997%" y="373" width="0.3192%" height="15" fill="rgb(219,102,11)" fg:x="6105" fg:w="84"/><text x="23.4497%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (31 samples, 0.12%)</title><rect x="23.4011%" y="357" width="0.1178%" height="15" fill="rgb(243,110,44)" fg:x="6158" fg:w="31"/><text x="23.6511%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (40 samples, 0.15%)</title><rect x="31.7234%" y="325" width="0.1520%" height="15" fill="rgb(222,74,54)" fg:x="8348" fg:w="40"/><text x="31.9734%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (41 samples, 0.16%)</title><rect x="31.7234%" y="357" width="0.1558%" height="15" fill="rgb(216,99,12)" fg:x="8348" fg:w="41"/><text x="31.9734%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (41 samples, 0.16%)</title><rect x="31.7234%" y="341" width="0.1558%" height="15" fill="rgb(226,22,26)" fg:x="8348" fg:w="41"/><text x="31.9734%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (17 samples, 0.06%)</title><rect x="31.8792%" y="357" width="0.0646%" height="15" fill="rgb(217,163,10)" fg:x="8389" fg:w="17"/><text x="32.1292%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (17 samples, 0.06%)</title><rect x="31.8792%" y="341" width="0.0646%" height="15" fill="rgb(213,25,53)" fg:x="8389" fg:w="17"/><text x="32.1292%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (17 samples, 0.06%)</title><rect x="31.8792%" y="325" width="0.0646%" height="15" fill="rgb(252,105,26)" fg:x="8389" fg:w="17"/><text x="32.1292%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (1,569 samples, 5.96%)</title><rect x="31.9438%" y="357" width="5.9624%" height="15" fill="rgb(220,39,43)" fg:x="8406" fg:w="1569"/><text x="32.1938%" y="367.50">&lt;f32 as ..</text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (108 samples, 0.41%)</title><rect x="37.9061%" y="357" width="0.4104%" height="15" fill="rgb(229,68,48)" fg:x="9975" fg:w="108"/><text x="38.1561%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (23 samples, 0.09%)</title><rect x="38.3165%" y="357" width="0.0874%" height="15" fill="rgb(252,8,32)" fg:x="10083" fg:w="23"/><text x="38.5665%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (91 samples, 0.35%)</title><rect x="38.4040%" y="357" width="0.3458%" height="15" fill="rgb(223,20,43)" fg:x="10106" fg:w="91"/><text x="38.6540%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (26 samples, 0.10%)</title><rect x="38.7536%" y="357" width="0.0988%" height="15" fill="rgb(229,81,49)" fg:x="10198" fg:w="26"/><text x="39.0036%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (15 samples, 0.06%)</title><rect x="38.8524%" y="357" width="0.0570%" height="15" fill="rgb(236,28,36)" fg:x="10224" fg:w="15"/><text x="39.1024%" y="367.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::AddAssign&gt;::add_assign (40 samples, 0.15%)</title><rect x="38.9094%" y="341" width="0.1520%" height="15" fill="rgb(249,185,26)" fg:x="10239" fg:w="40"/><text x="39.1594%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (40 samples, 0.15%)</title><rect x="38.9094%" y="325" width="0.1520%" height="15" fill="rgb(249,174,33)" fg:x="10239" fg:w="40"/><text x="39.1594%" y="335.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::move_particle_along_segment (93 samples, 0.35%)</title><rect x="38.9094%" y="357" width="0.3534%" height="15" fill="rgb(233,201,37)" fg:x="10239" fg:w="93"/><text x="39.1594%" y="367.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (53 samples, 0.20%)</title><rect x="39.0614%" y="341" width="0.2014%" height="15" fill="rgb(221,78,26)" fg:x="10279" fg:w="53"/><text x="39.3114%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (53 samples, 0.20%)</title><rect x="39.0614%" y="325" width="0.2014%" height="15" fill="rgb(250,127,30)" fg:x="10279" fg:w="53"/><text x="39.3114%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (7 samples, 0.03%)</title><rect x="39.2704%" y="341" width="0.0266%" height="15" fill="rgb(230,49,44)" fg:x="10334" fg:w="7"/><text x="39.5204%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="39.2970%" y="309" width="0.0114%" height="15" fill="rgb(229,67,23)" fg:x="10341" fg:w="3"/><text x="39.5470%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (81 samples, 0.31%)</title><rect x="39.3084%" y="277" width="0.3078%" height="15" fill="rgb(249,83,47)" fg:x="10344" fg:w="81"/><text x="39.5584%" y="287.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (81 samples, 0.31%)</title><rect x="39.7112%" y="261" width="0.3078%" height="15" fill="rgb(215,43,3)" fg:x="10450" fg:w="81"/><text x="39.9612%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f32&gt;::eq (3 samples, 0.01%)</title><rect x="40.0190%" y="261" width="0.0114%" height="15" fill="rgb(238,154,13)" fg:x="10531" fg:w="3"/><text x="40.2690%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (25 samples, 0.10%)</title><rect x="40.0304%" y="245" width="0.0950%" height="15" fill="rgb(219,56,2)" fg:x="10534" fg:w="25"/><text x="40.2804%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (25 samples, 0.10%)</title><rect x="40.0304%" y="229" width="0.0950%" height="15" fill="rgb(233,0,4)" fg:x="10534" fg:w="25"/><text x="40.2804%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (25 samples, 0.10%)</title><rect x="40.0304%" y="213" width="0.0950%" height="15" fill="rgb(235,30,7)" fg:x="10534" fg:w="25"/><text x="40.2804%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (5 samples, 0.02%)</title><rect x="40.1254%" y="245" width="0.0190%" height="15" fill="rgb(250,79,13)" fg:x="10559" fg:w="5"/><text x="40.3754%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 0.19%)</title><rect x="40.1444%" y="213" width="0.1900%" height="15" fill="rgb(211,146,34)" fg:x="10564" fg:w="50"/><text x="40.3944%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (50 samples, 0.19%)</title><rect x="40.1444%" y="197" width="0.1900%" height="15" fill="rgb(228,22,38)" fg:x="10564" fg:w="50"/><text x="40.3944%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (49 samples, 0.19%)</title><rect x="40.1482%" y="181" width="0.1862%" height="15" fill="rgb(235,168,5)" fg:x="10565" fg:w="49"/><text x="40.3982%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (99 samples, 0.38%)</title><rect x="40.9462%" y="181" width="0.3762%" height="15" fill="rgb(221,155,16)" fg:x="10775" fg:w="99"/><text x="41.1962%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (99 samples, 0.38%)</title><rect x="40.9462%" y="165" width="0.3762%" height="15" fill="rgb(215,215,53)" fg:x="10775" fg:w="99"/><text x="41.1962%" y="175.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (99 samples, 0.38%)</title><rect x="40.9462%" y="149" width="0.3762%" height="15" fill="rgb(223,4,10)" fg:x="10775" fg:w="99"/><text x="41.1962%" y="159.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section::{{closure}} (588 samples, 2.23%)</title><rect x="40.3344%" y="197" width="2.2345%" height="15" fill="rgb(234,103,6)" fg:x="10614" fg:w="588"/><text x="40.5844%" y="207.50">f..</text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (328 samples, 1.25%)</title><rect x="41.3224%" y="181" width="1.2464%" height="15" fill="rgb(227,97,0)" fg:x="10874" fg:w="328"/><text x="41.5724%" y="191.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section (705 samples, 2.68%)</title><rect x="40.0304%" y="261" width="2.6791%" height="15" fill="rgb(234,150,53)" fg:x="10534" fg:w="705"/><text x="40.2804%" y="271.50">fa..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (675 samples, 2.57%)</title><rect x="40.1444%" y="245" width="2.5651%" height="15" fill="rgb(228,201,54)" fg:x="10564" fg:w="675"/><text x="40.3944%" y="255.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (675 samples, 2.57%)</title><rect x="40.1444%" y="229" width="2.5651%" height="15" fill="rgb(222,22,37)" fg:x="10564" fg:w="675"/><text x="40.3944%" y="239.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (625 samples, 2.38%)</title><rect x="40.3344%" y="213" width="2.3751%" height="15" fill="rgb(237,53,32)" fg:x="10614" fg:w="625"/><text x="40.5844%" y="223.50">co..</text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (37 samples, 0.14%)</title><rect x="42.5689%" y="197" width="0.1406%" height="15" fill="rgb(233,25,53)" fg:x="11202" fg:w="37"/><text x="42.8189%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (939 samples, 3.57%)</title><rect x="39.2970%" y="325" width="3.5683%" height="15" fill="rgb(210,40,34)" fg:x="10341" fg:w="939"/><text x="39.5470%" y="335.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (936 samples, 3.56%)</title><rect x="39.3084%" y="309" width="3.5569%" height="15" fill="rgb(241,220,44)" fg:x="10344" fg:w="936"/><text x="39.5584%" y="319.50">core..</text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section::{{closure}} (936 samples, 3.56%)</title><rect x="39.3084%" y="293" width="3.5569%" height="15" fill="rgb(235,28,35)" fg:x="10344" fg:w="936"/><text x="39.5584%" y="303.50">fast..</text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_total_cross_section (855 samples, 3.25%)</title><rect x="39.6162%" y="277" width="3.2491%" height="15" fill="rgb(210,56,17)" fg:x="10425" fg:w="855"/><text x="39.8662%" y="287.50">fas..</text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (41 samples, 0.16%)</title><rect x="42.7095%" y="261" width="0.1558%" height="15" fill="rgb(224,130,29)" fg:x="11239" fg:w="41"/><text x="42.9595%" y="271.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (950 samples, 3.61%)</title><rect x="39.2628%" y="357" width="3.6101%" height="15" fill="rgb(235,212,8)" fg:x="10332" fg:w="950"/><text x="39.5128%" y="367.50">fast..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (941 samples, 3.58%)</title><rect x="39.2970%" y="341" width="3.5759%" height="15" fill="rgb(223,33,50)" fg:x="10341" fg:w="941"/><text x="39.5470%" y="351.50">core..</text></g><g><title>fastiron::simulation::mc_segment_outcome::DistanceHandler&lt;T&gt;::update (66 samples, 0.25%)</title><rect x="42.8729%" y="357" width="0.2508%" height="15" fill="rgb(219,149,13)" fg:x="11282" fg:w="66"/><text x="43.1229%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (41 samples, 0.16%)</title><rect x="42.9679%" y="341" width="0.1558%" height="15" fill="rgb(250,156,29)" fg:x="11307" fg:w="41"/><text x="43.2179%" y="351.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (15 samples, 0.06%)</title><rect x="43.1237%" y="357" width="0.0570%" height="15" fill="rgb(216,193,19)" fg:x="11348" fg:w="15"/><text x="43.3737%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (31 samples, 0.12%)</title><rect x="43.3859%" y="341" width="0.1178%" height="15" fill="rgb(216,135,14)" fg:x="11417" fg:w="31"/><text x="43.6359%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (392 samples, 1.49%)</title><rect x="43.5455%" y="293" width="1.4896%" height="15" fill="rgb(241,47,5)" fg:x="11459" fg:w="392"/><text x="43.7955%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (392 samples, 1.49%)</title><rect x="43.5455%" y="277" width="1.4896%" height="15" fill="rgb(233,42,35)" fg:x="11459" fg:w="392"/><text x="43.7955%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (389 samples, 1.48%)</title><rect x="43.5569%" y="261" width="1.4782%" height="15" fill="rgb(231,13,6)" fg:x="11462" fg:w="389"/><text x="43.8069%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (249 samples, 0.95%)</title><rect x="62.5043%" y="229" width="0.9462%" height="15" fill="rgb(207,181,40)" fg:x="16448" fg:w="249"/><text x="62.7543%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (658 samples, 2.50%)</title><rect x="62.5043%" y="261" width="2.5005%" height="15" fill="rgb(254,173,49)" fg:x="16448" fg:w="658"/><text x="62.7543%" y="271.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (658 samples, 2.50%)</title><rect x="62.5043%" y="245" width="2.5005%" height="15" fill="rgb(221,1,38)" fg:x="16448" fg:w="658"/><text x="62.7543%" y="255.50">co..</text></g><g><title>fastiron::simulation::mct::nearest_facet (409 samples, 1.55%)</title><rect x="63.4505%" y="229" width="1.5542%" height="15" fill="rgb(206,124,46)" fg:x="16697" fg:w="409"/><text x="63.7005%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (479 samples, 1.82%)</title><rect x="65.0048%" y="261" width="1.8203%" height="15" fill="rgb(249,21,11)" fg:x="17106" fg:w="479"/><text x="65.2548%" y="271.50">&lt;..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (406 samples, 1.54%)</title><rect x="66.8250%" y="261" width="1.5428%" height="15" fill="rgb(222,201,40)" fg:x="17585" fg:w="406"/><text x="67.0750%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (228 samples, 0.87%)</title><rect x="68.3679%" y="261" width="0.8664%" height="15" fill="rgb(235,61,29)" fg:x="17991" fg:w="228"/><text x="68.6179%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (739 samples, 2.81%)</title><rect x="75.6565%" y="245" width="2.8083%" height="15" fill="rgb(219,207,3)" fg:x="19909" fg:w="739"/><text x="75.9065%" y="255.50">&lt;f..</text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (303 samples, 1.15%)</title><rect x="78.4648%" y="245" width="1.1514%" height="15" fill="rgb(222,56,46)" fg:x="20648" fg:w="303"/><text x="78.7148%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (195 samples, 0.74%)</title><rect x="79.6162%" y="245" width="0.7410%" height="15" fill="rgb(239,76,54)" fg:x="20951" fg:w="195"/><text x="79.8662%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Neg&gt;::neg (52 samples, 0.20%)</title><rect x="80.3572%" y="245" width="0.1976%" height="15" fill="rgb(231,124,27)" fg:x="21146" fg:w="52"/><text x="80.6072%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (402 samples, 1.53%)</title><rect x="80.5548%" y="245" width="1.5276%" height="15" fill="rgb(249,195,6)" fg:x="21198" fg:w="402"/><text x="80.8048%" y="255.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::abs (42 samples, 0.16%)</title><rect x="82.0825%" y="245" width="0.1596%" height="15" fill="rgb(237,174,47)" fg:x="21600" fg:w="42"/><text x="82.3325%" y="255.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (42 samples, 0.16%)</title><rect x="82.0825%" y="229" width="0.1596%" height="15" fill="rgb(206,201,31)" fg:x="21600" fg:w="42"/><text x="82.3325%" y="239.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Add&gt;::add (284 samples, 1.08%)</title><rect x="82.2421%" y="245" width="1.0792%" height="15" fill="rgb(231,57,52)" fg:x="21642" fg:w="284"/><text x="82.4921%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (284 samples, 1.08%)</title><rect x="82.2421%" y="229" width="1.0792%" height="15" fill="rgb(248,177,22)" fg:x="21642" fg:w="284"/><text x="82.4921%" y="239.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (314 samples, 1.19%)</title><rect x="83.3213%" y="245" width="1.1932%" height="15" fill="rgb(215,211,37)" fg:x="21926" fg:w="314"/><text x="83.5713%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (314 samples, 1.19%)</title><rect x="83.3213%" y="229" width="1.1932%" height="15" fill="rgb(241,128,51)" fg:x="21926" fg:w="314"/><text x="83.5713%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (148 samples, 0.56%)</title><rect x="84.5145%" y="245" width="0.5624%" height="15" fill="rgb(227,165,31)" fg:x="22240" fg:w="148"/><text x="84.7645%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::lt (351 samples, 1.33%)</title><rect x="85.0770%" y="245" width="1.3338%" height="15" fill="rgb(228,167,24)" fg:x="22388" fg:w="351"/><text x="85.3270%" y="255.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_3dg_dist_to_segment (4,644 samples, 17.65%)</title><rect x="69.2343%" y="261" width="17.6477%" height="15" fill="rgb(228,143,12)" fg:x="18219" fg:w="4644"/><text x="69.4843%" y="271.50">fastiron::simulation::mct::..</text></g><g><title>fastiron::simulation::mct::nearest_facet (124 samples, 0.47%)</title><rect x="86.4108%" y="245" width="0.4712%" height="15" fill="rgb(249,149,8)" fg:x="22739" fg:w="124"/><text x="86.6608%" y="255.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_3dg::{{closure}} (11,510 samples, 43.74%)</title><rect x="45.0352%" y="277" width="43.7393%" height="15" fill="rgb(243,35,44)" fg:x="11851" fg:w="11510"/><text x="45.2852%" y="287.50">fastiron::simulation::mct::mct_nf_3dg::{{closure}}</text></g><g><title>fastiron::simulation::mct::nearest_facet (498 samples, 1.89%)</title><rect x="86.8820%" y="261" width="1.8925%" height="15" fill="rgb(246,89,9)" fg:x="22863" fg:w="498"/><text x="87.1320%" y="271.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13,131 samples, 49.90%)</title><rect x="43.5455%" y="325" width="49.8993%" height="15" fill="rgb(233,213,13)" fg:x="11459" fg:w="13131"/><text x="43.7955%" y="335.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (13,131 samples, 49.90%)</title><rect x="43.5455%" y="309" width="49.8993%" height="15" fill="rgb(233,141,41)" fg:x="11459" fg:w="13131"/><text x="43.7955%" y="319.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12,739 samples, 48.41%)</title><rect x="45.0352%" y="293" width="48.4097%" height="15" fill="rgb(239,167,4)" fg:x="11851" fg:w="12739"/><text x="45.2852%" y="303.50">core::iter::traits::iterator::Iterator::for_each::call::{{closure}}</text></g><g><title>fastiron::simulation::mct::nearest_facet (1,229 samples, 4.67%)</title><rect x="88.7745%" y="277" width="4.6703%" height="15" fill="rgb(209,217,16)" fg:x="23361" fg:w="1229"/><text x="89.0245%" y="287.50">fasti..</text></g><g><title>&lt;fastiron::geometry::facets::MCNearestFacet&lt;T&gt; as core::default::Default&gt;::default (11 samples, 0.04%)</title><rect x="93.9616%" y="293" width="0.0418%" height="15" fill="rgb(219,88,35)" fg:x="24726" fg:w="11"/><text x="94.2116%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f32&gt;::eq (5 samples, 0.02%)</title><rect x="94.0034%" y="293" width="0.0190%" height="15" fill="rgb(220,193,23)" fg:x="24737" fg:w="5"/><text x="94.2534%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (63 samples, 0.24%)</title><rect x="94.0604%" y="229" width="0.2394%" height="15" fill="rgb(230,90,52)" fg:x="24752" fg:w="63"/><text x="94.3104%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (63 samples, 0.24%)</title><rect x="94.0604%" y="213" width="0.2394%" height="15" fill="rgb(252,106,19)" fg:x="24752" fg:w="63"/><text x="94.3104%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (271 samples, 1.03%)</title><rect x="94.0224%" y="245" width="1.0298%" height="15" fill="rgb(206,74,20)" fg:x="24742" fg:w="271"/><text x="94.2724%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (198 samples, 0.75%)</title><rect x="94.2998%" y="229" width="0.7524%" height="15" fill="rgb(230,138,44)" fg:x="24815" fg:w="198"/><text x="94.5498%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (330 samples, 1.25%)</title><rect x="94.0224%" y="261" width="1.2540%" height="15" fill="rgb(235,182,43)" fg:x="24742" fg:w="330"/><text x="94.2724%" y="271.50"></text></g><g><title>fastiron::simulation::mct::nearest_facet (59 samples, 0.22%)</title><rect x="95.0523%" y="245" width="0.2242%" height="15" fill="rgb(242,16,51)" fg:x="25013" fg:w="59"/><text x="95.3023%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (197 samples, 0.75%)</title><rect x="96.6673%" y="229" width="0.7486%" height="15" fill="rgb(248,9,4)" fg:x="25438" fg:w="197"/><text x="96.9173%" y="239.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest::{{closure}} (817 samples, 3.10%)</title><rect x="95.2765%" y="245" width="3.1047%" height="15" fill="rgb(210,31,22)" fg:x="25072" fg:w="817"/><text x="95.5265%" y="255.50">fas..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (254 samples, 0.97%)</title><rect x="97.4159%" y="229" width="0.9652%" height="15" fill="rgb(239,54,39)" fg:x="25635" fg:w="254"/><text x="97.6659%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,298 samples, 4.93%)</title><rect x="94.0224%" y="277" width="4.9325%" height="15" fill="rgb(230,99,41)" fg:x="24742" fg:w="1298"/><text x="94.2724%" y="287.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (968 samples, 3.68%)</title><rect x="95.2765%" y="261" width="3.6785%" height="15" fill="rgb(253,106,12)" fg:x="25072" fg:w="968"/><text x="95.5265%" y="271.50">core..</text></g><g><title>fastiron::simulation::mct::nearest_facet (151 samples, 0.57%)</title><rect x="98.3812%" y="245" width="0.5738%" height="15" fill="rgb(213,46,41)" fg:x="25889" fg:w="151"/><text x="98.6312%" y="255.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_find_nearest (1,476 samples, 5.61%)</title><rect x="93.4448%" y="325" width="5.6090%" height="15" fill="rgb(215,133,35)" fg:x="24590" fg:w="1476"/><text x="93.6948%" y="335.50">fastiro..</text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest (1,369 samples, 5.20%)</title><rect x="93.8514%" y="309" width="5.2024%" height="15" fill="rgb(213,28,5)" fg:x="24697" fg:w="1369"/><text x="94.1014%" y="319.50">fastir..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,324 samples, 5.03%)</title><rect x="94.0224%" y="293" width="5.0314%" height="15" fill="rgb(215,77,49)" fg:x="24742" fg:w="1324"/><text x="94.2724%" y="303.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (26 samples, 0.10%)</title><rect x="98.9550%" y="277" width="0.0988%" height="15" fill="rgb(248,100,22)" fg:x="26040" fg:w="26"/><text x="99.2050%" y="287.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_3dg (14,624 samples, 55.57%)</title><rect x="43.5037%" y="341" width="55.5729%" height="15" fill="rgb(208,67,9)" fg:x="11448" fg:w="14624"/><text x="43.7537%" y="351.50">fastiron::simulation::mct::mct_nf_3dg</text></g><g><title>fastiron::simulation::mct::nearest_facet (6 samples, 0.02%)</title><rect x="99.0538%" y="325" width="0.0228%" height="15" fill="rgb(219,133,21)" fg:x="26066" fg:w="6"/><text x="99.3038%" y="335.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (19,892 samples, 75.59%)</title><rect x="23.5189%" y="373" width="75.5919%" height="15" fill="rgb(246,46,29)" fg:x="6189" fg:w="19892"/><text x="23.7689%" y="383.50">fastiron::simulation::mc_segment_outcome::outcome</text></g><g><title>fastiron::simulation::mct::nearest_facet (14,718 samples, 55.93%)</title><rect x="43.1807%" y="357" width="55.9301%" height="15" fill="rgb(246,185,52)" fg:x="11363" fg:w="14718"/><text x="43.4307%" y="367.50">fastiron::simulation::mct::nearest_facet</text></g><g><title>fastiron::simulation::mct::nearest_facet (9 samples, 0.03%)</title><rect x="99.0766%" y="341" width="0.0342%" height="15" fill="rgb(252,136,11)" fg:x="26072" fg:w="9"/><text x="99.3266%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (3 samples, 0.01%)</title><rect x="99.1260%" y="341" width="0.0114%" height="15" fill="rgb(219,138,53)" fg:x="26085" fg:w="3"/><text x="99.3760%" y="351.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (25,761 samples, 97.89%)</title><rect x="1.2502%" y="389" width="97.8947%" height="15" fill="rgb(211,51,23)" fg:x="329" fg:w="25761"/><text x="1.5002%" y="399.50">fastiron::simulation::cycle_tracking::cycle_tracking_function</text></g><g><title>fastiron::simulation::mct::reflect_particle (9 samples, 0.03%)</title><rect x="99.1108%" y="373" width="0.0342%" height="15" fill="rgb(247,221,28)" fg:x="26081" fg:w="9"/><text x="99.3608%" y="383.50"></text></g><g><title>fastiron::data::mc_vector::MCVector&lt;T&gt;::dot (5 samples, 0.02%)</title><rect x="99.1260%" y="357" width="0.0190%" height="15" fill="rgb(251,222,45)" fg:x="26085" fg:w="5"/><text x="99.3760%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (25,887 samples, 98.37%)</title><rect x="0.9956%" y="437" width="98.3736%" height="15" fill="rgb(217,162,53)" fg:x="262" fg:w="25887"/><text x="1.2456%" y="447.50">&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each</text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}} (25,883 samples, 98.36%)</title><rect x="1.0108%" y="421" width="98.3584%" height="15" fill="rgb(229,93,14)" fg:x="266" fg:w="25883"/><text x="1.2608%" y="431.50">fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}}</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (25,880 samples, 98.35%)</title><rect x="1.0222%" y="405" width="98.3470%" height="15" fill="rgb(209,67,49)" fg:x="269" fg:w="25880"/><text x="1.2722%" y="415.50">fastiron::simulation::cycle_tracking::cycle_tracking_guts</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (59 samples, 0.22%)</title><rect x="99.1450%" y="389" width="0.2242%" height="15" fill="rgb(213,87,29)" fg:x="26090" fg:w="59"/><text x="99.3950%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (10 samples, 0.04%)</title><rect x="99.3768%" y="389" width="0.0380%" height="15" fill="rgb(205,151,52)" fg:x="26151" fg:w="10"/><text x="99.6268%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles::{{closure}} (10 samples, 0.04%)</title><rect x="99.3768%" y="373" width="0.0380%" height="15" fill="rgb(253,215,39)" fg:x="26151" fg:w="10"/><text x="99.6268%" y="383.50"></text></g><g><title>core::cmp::PartialEq::ne (10 samples, 0.04%)</title><rect x="99.3768%" y="357" width="0.0380%" height="15" fill="rgb(221,220,41)" fg:x="26151" fg:w="10"/><text x="99.6268%" y="367.50"></text></g><g><title>&lt;fastiron::particles::mc_particle::Species as core::cmp::PartialEq&gt;::eq (10 samples, 0.04%)</title><rect x="99.3768%" y="341" width="0.0380%" height="15" fill="rgb(218,133,21)" fg:x="26151" fg:w="10"/><text x="99.6268%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (14 samples, 0.05%)</title><rect x="99.3730%" y="405" width="0.0532%" height="15" fill="rgb(221,193,43)" fg:x="26150" fg:w="14"/><text x="99.6230%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="99.4148%" y="389" width="0.0114%" height="15" fill="rgb(240,128,52)" fg:x="26161" fg:w="3"/><text x="99.6648%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles (25,903 samples, 98.43%)</title><rect x="0.9956%" y="453" width="98.4344%" height="15" fill="rgb(253,114,12)" fg:x="262" fg:w="25903"/><text x="1.2456%" y="463.50">fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::process_particles</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (15 samples, 0.06%)</title><rect x="99.3730%" y="437" width="0.0570%" height="15" fill="rgb(215,223,47)" fg:x="26150" fg:w="15"/><text x="99.6230%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (15 samples, 0.06%)</title><rect x="99.3730%" y="421" width="0.0570%" height="15" fill="rgb(248,225,23)" fg:x="26150" fg:w="15"/><text x="99.6230%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="99.4300%" y="405" width="0.0152%" height="15" fill="rgb(250,108,0)" fg:x="26165" fg:w="4"/><text x="99.6800%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="99.4300%" y="389" width="0.0152%" height="15" fill="rgb(228,208,7)" fg:x="26165" fg:w="4"/><text x="99.6800%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="99.4300%" y="373" width="0.0152%" height="15" fill="rgb(244,45,10)" fg:x="26165" fg:w="4"/><text x="99.6800%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="99.4300%" y="357" width="0.0152%" height="15" fill="rgb(207,125,25)" fg:x="26165" fg:w="4"/><text x="99.6800%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="99.4338%" y="341" width="0.0114%" height="15" fill="rgb(210,195,18)" fg:x="26166" fg:w="3"/><text x="99.6838%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.4338%" y="325" width="0.0114%" height="15" fill="rgb(249,80,12)" fg:x="26166" fg:w="3"/><text x="99.6838%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.01%)</title><rect x="99.4338%" y="309" width="0.0114%" height="15" fill="rgb(221,65,9)" fg:x="26166" fg:w="3"/><text x="99.6838%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (8 samples, 0.03%)</title><rect x="99.4300%" y="437" width="0.0304%" height="15" fill="rgb(235,49,36)" fg:x="26165" fg:w="8"/><text x="99.6800%" y="447.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population::{{closure}} (8 samples, 0.03%)</title><rect x="99.4300%" y="421" width="0.0304%" height="15" fill="rgb(225,32,20)" fg:x="26165" fg:w="8"/><text x="99.6800%" y="431.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::under_populated_split (4 samples, 0.02%)</title><rect x="99.4452%" y="405" width="0.0152%" height="15" fill="rgb(215,141,46)" fg:x="26169" fg:w="4"/><text x="99.6952%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (4 samples, 0.02%)</title><rect x="99.4604%" y="437" width="0.0152%" height="15" fill="rgb(250,160,47)" fg:x="26173" fg:w="4"/><text x="99.7104%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (4 samples, 0.02%)</title><rect x="99.4604%" y="421" width="0.0152%" height="15" fill="rgb(216,222,40)" fg:x="26173" fg:w="4"/><text x="99.7104%" y="431.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population::{{closure}} (3 samples, 0.01%)</title><rect x="99.4642%" y="405" width="0.0114%" height="15" fill="rgb(234,217,39)" fg:x="26174" fg:w="3"/><text x="99.7142%" y="415.50"></text></g><g><title>fastiron::particles::mc_particle::MCParticle&lt;T&gt;::low_weight_rr (3 samples, 0.01%)</title><rect x="99.4642%" y="389" width="0.0114%" height="15" fill="rgb(207,178,40)" fg:x="26174" fg:w="3"/><text x="99.7142%" y="399.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::split_population (20 samples, 0.08%)</title><rect x="99.4300%" y="453" width="0.0760%" height="15" fill="rgb(221,136,13)" fg:x="26165" fg:w="20"/><text x="99.6800%" y="463.50"></text></g><g><title>fastiron::particles::particle_container::ParticleContainer&lt;T&gt;::clean_extra_vaults (8 samples, 0.03%)</title><rect x="99.4756%" y="437" width="0.0304%" height="15" fill="rgb(249,199,10)" fg:x="26177" fg:w="8"/><text x="99.7256%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8 samples, 0.03%)</title><rect x="99.4756%" y="421" width="0.0304%" height="15" fill="rgb(249,222,13)" fg:x="26177" fg:w="8"/><text x="99.7256%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.03%)</title><rect x="99.4756%" y="405" width="0.0304%" height="15" fill="rgb(244,185,38)" fg:x="26177" fg:w="8"/><text x="99.7256%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.03%)</title><rect x="99.4756%" y="389" width="0.0304%" height="15" fill="rgb(236,202,9)" fg:x="26177" fg:w="8"/><text x="99.7256%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="99.4756%" y="373" width="0.0304%" height="15" fill="rgb(250,229,37)" fg:x="26177" fg:w="8"/><text x="99.7256%" y="383.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg (5 samples, 0.02%)</title><rect x="99.5250%" y="101" width="0.0190%" height="15" fill="rgb(206,174,23)" fg:x="26190" fg:w="5"/><text x="99.7750%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="99.5250%" y="85" width="0.0190%" height="15" fill="rgb(211,33,43)" fg:x="26190" fg:w="5"/><text x="99.7750%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.02%)</title><rect x="99.5250%" y="69" width="0.0190%" height="15" fill="rgb(245,58,50)" fg:x="26190" fg:w="5"/><text x="99.7750%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.02%)</title><rect x="99.5250%" y="53" width="0.0190%" height="15" fill="rgb(244,68,36)" fg:x="26190" fg:w="5"/><text x="99.7750%" y="63.50"></text></g><g><title>fastiron::simulation::mct::cell_position_3dg::{{closure}} (5 samples, 0.02%)</title><rect x="99.5250%" y="37" width="0.0190%" height="15" fill="rgb(232,229,15)" fg:x="26190" fg:w="5"/><text x="99.7750%" y="47.50"></text></g><g><title>&lt;fastiron::data::mc_vector::MCVector&lt;T&gt; as core::ops::arith::Sub&gt;::sub (3 samples, 0.01%)</title><rect x="99.5440%" y="85" width="0.0114%" height="15" fill="rgb(254,30,23)" fg:x="26195" fg:w="3"/><text x="99.7940%" y="95.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (3 samples, 0.01%)</title><rect x="99.5440%" y="69" width="0.0114%" height="15" fill="rgb(235,160,14)" fg:x="26195" fg:w="3"/><text x="99.7940%" y="79.50"></text></g><g><title>fastiron::simulation::mct::mct_cell_volume_3dg_vector_tetdet (7 samples, 0.03%)</title><rect x="99.5440%" y="101" width="0.0266%" height="15" fill="rgb(212,155,44)" fg:x="26195" fg:w="7"/><text x="99.7940%" y="111.50"></text></g><g><title>fastiron::data::mc_vector::MCVector&lt;T&gt;::dot (3 samples, 0.01%)</title><rect x="99.5592%" y="85" width="0.0114%" height="15" fill="rgb(226,2,50)" fg:x="26199" fg:w="3"/><text x="99.8092%" y="95.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (3 samples, 0.01%)</title><rect x="99.5592%" y="69" width="0.0114%" height="15" fill="rgb(234,177,6)" fg:x="26199" fg:w="3"/><text x="99.8092%" y="79.50"></text></g><g><title>fastiron::cycle_process (25,970 samples, 98.69%)</title><rect x="0.8930%" y="469" width="98.6890%" height="15" fill="rgb(217,24,9)" fg:x="235" fg:w="25970"/><text x="1.1430%" y="479.50">fastiron::cycle_process</text></g><g><title>fastiron::simulation::population_control::source_now (20 samples, 0.08%)</title><rect x="99.5060%" y="453" width="0.0760%" height="15" fill="rgb(220,13,46)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.08%)</title><rect x="99.5060%" y="437" width="0.0760%" height="15" fill="rgb(239,221,27)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="421" width="0.0760%" height="15" fill="rgb(222,198,25)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="405" width="0.0760%" height="15" fill="rgb(211,99,13)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="389" width="0.0760%" height="15" fill="rgb(232,111,31)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="373" width="0.0760%" height="15" fill="rgb(245,82,37)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="383.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="357" width="0.0760%" height="15" fill="rgb(227,149,46)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.08%)</title><rect x="99.5060%" y="341" width="0.0760%" height="15" fill="rgb(218,36,50)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="325" width="0.0760%" height="15" fill="rgb(226,80,48)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="309" width="0.0760%" height="15" fill="rgb(238,224,15)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="293" width="0.0760%" height="15" fill="rgb(241,136,10)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="277" width="0.0760%" height="15" fill="rgb(208,32,45)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="287.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="261" width="0.0760%" height="15" fill="rgb(207,135,9)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (20 samples, 0.08%)</title><rect x="99.5060%" y="245" width="0.0760%" height="15" fill="rgb(206,86,44)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.08%)</title><rect x="99.5060%" y="229" width="0.0760%" height="15" fill="rgb(245,177,15)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (20 samples, 0.08%)</title><rect x="99.5060%" y="213" width="0.0760%" height="15" fill="rgb(206,64,50)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.08%)</title><rect x="99.5060%" y="197" width="0.0760%" height="15" fill="rgb(234,36,40)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="181" width="0.0760%" height="15" fill="rgb(213,64,8)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.08%)</title><rect x="99.5060%" y="165" width="0.0760%" height="15" fill="rgb(210,75,36)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (20 samples, 0.08%)</title><rect x="99.5060%" y="149" width="0.0760%" height="15" fill="rgb(229,88,21)" fg:x="26185" fg:w="20"/><text x="99.7560%" y="159.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}}::{{closure}} (18 samples, 0.07%)</title><rect x="99.5136%" y="133" width="0.0684%" height="15" fill="rgb(252,204,47)" fg:x="26187" fg:w="18"/><text x="99.7636%" y="143.50"></text></g><g><title>fastiron::simulation::mct::generate_coordinate_3dg (18 samples, 0.07%)</title><rect x="99.5136%" y="117" width="0.0684%" height="15" fill="rgb(208,77,27)" fg:x="26187" fg:w="18"/><text x="99.7636%" y="127.50"></text></g><g><title>fastiron::simulation::mct::mct_facet_points_3dg (3 samples, 0.01%)</title><rect x="99.5706%" y="101" width="0.0114%" height="15" fill="rgb(221,76,26)" fg:x="26202" fg:w="3"/><text x="99.8206%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="99.5706%" y="85" width="0.0114%" height="15" fill="rgb(225,139,18)" fg:x="26202" fg:w="3"/><text x="99.8206%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.5706%" y="69" width="0.0114%" height="15" fill="rgb(230,137,11)" fg:x="26202" fg:w="3"/><text x="99.8206%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="99.5706%" y="53" width="0.0114%" height="15" fill="rgb(212,28,1)" fg:x="26202" fg:w="3"/><text x="99.8206%" y="63.50"></text></g><g><title>fastiron::simulation::mct::mct_facet_points_3dg::{{closure}} (3 samples, 0.01%)</title><rect x="99.5706%" y="37" width="0.0114%" height="15" fill="rgb(248,164,17)" fg:x="26202" fg:w="3"/><text x="99.8206%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="99.5820%" y="453" width="0.0190%" height="15" fill="rgb(222,171,42)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.02%)</title><rect x="99.5820%" y="437" width="0.0190%" height="15" fill="rgb(243,84,45)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.02%)</title><rect x="99.5820%" y="421" width="0.0190%" height="15" fill="rgb(252,49,23)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="431.50"></text></g><g><title>fastiron::cycle_sync::{{closure}} (5 samples, 0.02%)</title><rect x="99.5820%" y="405" width="0.0190%" height="15" fill="rgb(215,19,7)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="415.50"></text></g><g><title>fastiron::montecarlo::MonteCarloUnit&lt;T&gt;::clear_cross_section_cache (5 samples, 0.02%)</title><rect x="99.5820%" y="389" width="0.0190%" height="15" fill="rgb(238,81,41)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (5 samples, 0.02%)</title><rect x="99.5820%" y="373" width="0.0190%" height="15" fill="rgb(210,199,37)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="383.50"></text></g><g><title>fastiron::montecarlo::MonteCarloUnit&lt;T&gt;::clear_cross_section_cache::{{closure}} (5 samples, 0.02%)</title><rect x="99.5820%" y="357" width="0.0190%" height="15" fill="rgb(244,192,49)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="367.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::clear_cross_section_cache (5 samples, 0.02%)</title><rect x="99.5820%" y="341" width="0.0190%" height="15" fill="rgb(226,211,11)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (5 samples, 0.02%)</title><rect x="99.5820%" y="325" width="0.0190%" height="15" fill="rgb(236,162,54)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="335.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::clear_cross_section_cache::{{closure}} (5 samples, 0.02%)</title><rect x="99.5820%" y="309" width="0.0190%" height="15" fill="rgb(220,229,9)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (5 samples, 0.02%)</title><rect x="99.5820%" y="293" width="0.0190%" height="15" fill="rgb(250,87,22)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="303.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (5 samples, 0.02%)</title><rect x="99.5820%" y="277" width="0.0190%" height="15" fill="rgb(239,43,17)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="287.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.02%)</title><rect x="99.5820%" y="261" width="0.0190%" height="15" fill="rgb(231,177,25)" fg:x="26205" fg:w="5"/><text x="99.8320%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::cycle_finalize (10 samples, 0.04%)</title><rect x="99.6010%" y="453" width="0.0380%" height="15" fill="rgb(219,179,1)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.04%)</title><rect x="99.6010%" y="437" width="0.0380%" height="15" fill="rgb(238,219,53)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6010%" y="421" width="0.0380%" height="15" fill="rgb(232,167,36)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.04%)</title><rect x="99.6010%" y="405" width="0.0380%" height="15" fill="rgb(244,19,51)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="415.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::cycle_finalize::{{closure}} (10 samples, 0.04%)</title><rect x="99.6010%" y="389" width="0.0380%" height="15" fill="rgb(224,6,22)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="399.50"></text></g><g><title>fastiron::data::tallies::FluenceDomain&lt;T&gt;::compute (10 samples, 0.04%)</title><rect x="99.6010%" y="373" width="0.0380%" height="15" fill="rgb(224,145,5)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.04%)</title><rect x="99.6010%" y="357" width="0.0380%" height="15" fill="rgb(234,130,49)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6010%" y="341" width="0.0380%" height="15" fill="rgb(254,6,2)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.04%)</title><rect x="99.6010%" y="325" width="0.0380%" height="15" fill="rgb(208,96,46)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="335.50"></text></g><g><title>fastiron::data::tallies::FluenceDomain&lt;T&gt;::compute::{{closure}} (10 samples, 0.04%)</title><rect x="99.6010%" y="309" width="0.0380%" height="15" fill="rgb(239,3,39)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.04%)</title><rect x="99.6010%" y="293" width="0.0380%" height="15" fill="rgb(233,210,1)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="303.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.04%)</title><rect x="99.6010%" y="277" width="0.0380%" height="15" fill="rgb(244,137,37)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.04%)</title><rect x="99.6010%" y="261" width="0.0380%" height="15" fill="rgb(240,136,2)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6010%" y="245" width="0.0380%" height="15" fill="rgb(239,18,37)" fg:x="26210" fg:w="10"/><text x="99.8510%" y="255.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (9 samples, 0.03%)</title><rect x="99.6048%" y="229" width="0.0342%" height="15" fill="rgb(218,185,22)" fg:x="26211" fg:w="9"/><text x="99.8548%" y="239.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (9 samples, 0.03%)</title><rect x="99.6048%" y="213" width="0.0342%" height="15" fill="rgb(225,218,4)" fg:x="26211" fg:w="9"/><text x="99.8548%" y="223.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum (10 samples, 0.04%)</title><rect x="99.6390%" y="437" width="0.0380%" height="15" fill="rgb(230,182,32)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="421" width="0.0380%" height="15" fill="rgb(242,56,43)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="431.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="405" width="0.0380%" height="15" fill="rgb(233,99,24)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="389" width="0.0380%" height="15" fill="rgb(234,209,42)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="373" width="0.0380%" height="15" fill="rgb(227,7,12)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="357" width="0.0380%" height="15" fill="rgb(245,203,43)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="367.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="341" width="0.0380%" height="15" fill="rgb(238,205,33)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="325" width="0.0380%" height="15" fill="rgb(231,56,7)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="335.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="309" width="0.0380%" height="15" fill="rgb(244,186,29)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="293" width="0.0380%" height="15" fill="rgb(234,111,31)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="277" width="0.0380%" height="15" fill="rgb(241,149,10)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="261" width="0.0380%" height="15" fill="rgb(249,206,44)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="245" width="0.0380%" height="15" fill="rgb(251,153,30)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="229" width="0.0380%" height="15" fill="rgb(239,152,38)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="239.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.04%)</title><rect x="99.6390%" y="213" width="0.0380%" height="15" fill="rgb(249,139,47)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="197" width="0.0380%" height="15" fill="rgb(244,64,35)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.04%)</title><rect x="99.6390%" y="181" width="0.0380%" height="15" fill="rgb(216,46,15)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="191.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="165" width="0.0380%" height="15" fill="rgb(250,74,19)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="175.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (10 samples, 0.04%)</title><rect x="99.6390%" y="149" width="0.0380%" height="15" fill="rgb(249,42,33)" fg:x="26220" fg:w="10"/><text x="99.8890%" y="159.50"></text></g><g><title>fastiron::cycle_sync (26 samples, 0.10%)</title><rect x="99.5820%" y="469" width="0.0988%" height="15" fill="rgb(242,149,17)" fg:x="26205" fg:w="26"/><text x="99.8320%" y="479.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::print_summary (11 samples, 0.04%)</title><rect x="99.6390%" y="453" width="0.0418%" height="15" fill="rgb(244,29,21)" fg:x="26220" fg:w="11"/><text x="99.8890%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3 samples, 0.01%)</title><rect x="99.6808%" y="453" width="0.0114%" height="15" fill="rgb(220,130,37)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="463.50"></text></g><g><title>fastiron::init::init_mcunits::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="437" width="0.0114%" height="15" fill="rgb(211,67,2)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="447.50"></text></g><g><title>fastiron::init::consistency_check (3 samples, 0.01%)</title><rect x="99.6808%" y="421" width="0.0114%" height="15" fill="rgb(235,68,52)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="99.6808%" y="405" width="0.0114%" height="15" fill="rgb(246,142,3)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="389" width="0.0114%" height="15" fill="rgb(241,25,7)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="373" width="0.0114%" height="15" fill="rgb(242,119,39)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="357" width="0.0114%" height="15" fill="rgb(241,98,45)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="341" width="0.0114%" height="15" fill="rgb(254,28,30)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="351.50"></text></g><g><title>fastiron::init::consistency_check::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="325" width="0.0114%" height="15" fill="rgb(241,142,54)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="99.6808%" y="309" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="293" width="0.0114%" height="15" fill="rgb(210,85,47)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="277" width="0.0114%" height="15" fill="rgb(224,206,25)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="261" width="0.0114%" height="15" fill="rgb(243,201,19)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="245" width="0.0114%" height="15" fill="rgb(236,59,4)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="255.50"></text></g><g><title>fastiron::init::consistency_check::{{closure}}::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="229" width="0.0114%" height="15" fill="rgb(254,179,45)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="99.6808%" y="213" width="0.0114%" height="15" fill="rgb(226,14,10)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="197" width="0.0114%" height="15" fill="rgb(244,27,41)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.6808%" y="181" width="0.0114%" height="15" fill="rgb(235,35,32)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="165" width="0.0114%" height="15" fill="rgb(218,68,31)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="149" width="0.0114%" height="15" fill="rgb(207,120,37)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="159.50"></text></g><g><title>fastiron::init::consistency_check::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.01%)</title><rect x="99.6808%" y="133" width="0.0114%" height="15" fill="rgb(227,98,0)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.01%)</title><rect x="99.6808%" y="117" width="0.0114%" height="15" fill="rgb(207,7,3)" fg:x="26231" fg:w="3"/><text x="99.9308%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="99.6922%" y="389" width="0.0152%" height="15" fill="rgb(206,98,19)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="99.6922%" y="373" width="0.0152%" height="15" fill="rgb(217,5,26)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="99.6922%" y="357" width="0.0152%" height="15" fill="rgb(235,190,38)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="367.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::new::{{closure}} (4 samples, 0.02%)</title><rect x="99.6922%" y="341" width="0.0152%" height="15" fill="rgb(247,86,24)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="351.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::cell_volume (4 samples, 0.02%)</title><rect x="99.6922%" y="325" width="0.0152%" height="15" fill="rgb(205,101,16)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="99.6922%" y="309" width="0.0152%" height="15" fill="rgb(246,168,33)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="99.6922%" y="293" width="0.0152%" height="15" fill="rgb(231,114,1)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="99.6922%" y="277" width="0.0152%" height="15" fill="rgb(207,184,53)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="287.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::cell_volume::{{closure}} (4 samples, 0.02%)</title><rect x="99.6922%" y="261" width="0.0152%" height="15" fill="rgb(224,95,51)" fg:x="26234" fg:w="4"/><text x="99.9422%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="99.7074%" y="373" width="0.0114%" height="15" fill="rgb(212,188,45)" fg:x="26238" fg:w="3"/><text x="99.9574%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.01%)</title><rect x="99.7074%" y="357" width="0.0114%" height="15" fill="rgb(223,154,38)" fg:x="26238" fg:w="3"/><text x="99.9574%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="99.7074%" y="341" width="0.0114%" height="15" fill="rgb(251,22,52)" fg:x="26238" fg:w="3"/><text x="99.9574%" y="351.50"></text></g><g><title>fastiron::geometry::mc_domain::MCMeshDomain&lt;T&gt;::new::{{closure}} (3 samples, 0.01%)</title><rect x="99.7074%" y="325" width="0.0114%" height="15" fill="rgb(229,209,22)" fg:x="26238" fg:w="3"/><text x="99.9574%" y="335.50"></text></g><g><title>fastiron::geometry::mc_domain::bootstrap_node_map (5 samples, 0.02%)</title><rect x="99.7188%" y="373" width="0.0190%" height="15" fill="rgb(234,138,34)" fg:x="26241" fg:w="5"/><text x="99.9688%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="99.7226%" y="357" width="0.0152%" height="15" fill="rgb(212,95,11)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="99.7226%" y="341" width="0.0152%" height="15" fill="rgb(240,179,47)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="99.7226%" y="325" width="0.0152%" height="15" fill="rgb(240,163,11)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="335.50"></text></g><g><title>fastiron::geometry::mc_domain::bootstrap_node_map::{{closure}} (4 samples, 0.02%)</title><rect x="99.7226%" y="309" width="0.0152%" height="15" fill="rgb(236,37,12)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 0.02%)</title><rect x="99.7226%" y="293" width="0.0152%" height="15" fill="rgb(232,164,16)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.02%)</title><rect x="99.7226%" y="277" width="0.0152%" height="15" fill="rgb(244,205,15)" fg:x="26242" fg:w="4"/><text x="99.9726%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="99.7378%" y="293" width="0.0114%" height="15" fill="rgb(223,117,47)" fg:x="26246" fg:w="3"/><text x="99.9878%" y="303.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="99.7378%" y="277" width="0.0114%" height="15" fill="rgb(244,107,35)" fg:x="26246" fg:w="3"/><text x="99.9878%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="99.7378%" y="261" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="26246" fg:w="3"/><text x="99.9878%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (20 samples, 0.08%)</title><rect x="99.6922%" y="437" width="0.0760%" height="15" fill="rgb(228,84,46)" fg:x="26234" fg:w="20"/><text x="99.9422%" y="447.50"></text></g><g><title>fastiron::init::init_mesh::{{closure}} (20 samples, 0.08%)</title><rect x="99.6922%" y="421" width="0.0760%" height="15" fill="rgb(254,188,9)" fg:x="26234" fg:w="20"/><text x="99.9422%" y="431.50"></text></g><g><title>fastiron::geometry::mc_domain::MCDomain&lt;T&gt;::new (20 samples, 0.08%)</title><rect x="99.6922%" y="405" width="0.0760%" height="15" fill="rgb(206,112,54)" fg:x="26234" fg:w="20"/><text x="99.9422%" y="415.50"></text></g><g><title>fastiron::geometry::mc_domain::MCMeshDomain&lt;T&gt;::new (16 samples, 0.06%)</title><rect x="99.7074%" y="389" width="0.0608%" height="15" fill="rgb(216,84,49)" fg:x="26238" fg:w="16"/><text x="99.9574%" y="399.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells (8 samples, 0.03%)</title><rect x="99.7378%" y="373" width="0.0304%" height="15" fill="rgb(214,194,35)" fg:x="26246" fg:w="8"/><text x="99.9878%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.03%)</title><rect x="99.7378%" y="357" width="0.0304%" height="15" fill="rgb(249,28,3)" fg:x="26246" fg:w="8"/><text x="99.9878%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.03%)</title><rect x="99.7378%" y="341" width="0.0304%" height="15" fill="rgb(222,56,52)" fg:x="26246" fg:w="8"/><text x="99.9878%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.03%)</title><rect x="99.7378%" y="325" width="0.0304%" height="15" fill="rgb(245,217,50)" fg:x="26246" fg:w="8"/><text x="99.9878%" y="335.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells::{{closure}} (8 samples, 0.03%)</title><rect x="99.7378%" y="309" width="0.0304%" height="15" fill="rgb(213,201,24)" fg:x="26246" fg:w="8"/><text x="99.9878%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="99.7530%" y="293" width="0.0152%" height="15" fill="rgb(248,116,28)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="99.7530%" y="277" width="0.0152%" height="15" fill="rgb(219,72,43)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="99.7530%" y="261" width="0.0152%" height="15" fill="rgb(209,138,14)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="271.50"></text></g><g><title>fastiron::geometry::mc_domain::build_cells::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="99.7530%" y="245" width="0.0152%" height="15" fill="rgb(222,18,33)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 0.02%)</title><rect x="99.7530%" y="229" width="0.0152%" height="15" fill="rgb(213,199,7)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.02%)</title><rect x="99.7530%" y="213" width="0.0152%" height="15" fill="rgb(250,110,10)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.02%)</title><rect x="99.7530%" y="197" width="0.0152%" height="15" fill="rgb(248,123,6)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.02%)</title><rect x="99.7530%" y="181" width="0.0152%" height="15" fill="rgb(206,91,31)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="99.7530%" y="165" width="0.0152%" height="15" fill="rgb(211,154,13)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="99.7530%" y="149" width="0.0152%" height="15" fill="rgb(225,148,7)" fg:x="26250" fg:w="4"/><text x="100.0030%" y="159.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (39 samples, 0.15%)</title><rect x="99.7986%" y="85" width="0.1482%" height="15" fill="rgb(220,160,43)" fg:x="26262" fg:w="39"/><text x="100.0486%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (39 samples, 0.15%)</title><rect x="99.7986%" y="69" width="0.1482%" height="15" fill="rgb(213,52,39)" fg:x="26262" fg:w="39"/><text x="100.0486%" y="79.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood (56 samples, 0.21%)</title><rect x="99.7682%" y="341" width="0.2128%" height="15" fill="rgb(243,137,7)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.21%)</title><rect x="99.7682%" y="325" width="0.2128%" height="15" fill="rgb(230,79,13)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 0.21%)</title><rect x="99.7682%" y="309" width="0.2128%" height="15" fill="rgb(247,105,23)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="293" width="0.2128%" height="15" fill="rgb(223,179,41)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="303.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="277" width="0.2128%" height="15" fill="rgb(218,9,34)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.21%)</title><rect x="99.7682%" y="261" width="0.2128%" height="15" fill="rgb(222,106,8)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 0.21%)</title><rect x="99.7682%" y="245" width="0.2128%" height="15" fill="rgb(211,220,0)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="229" width="0.2128%" height="15" fill="rgb(229,52,16)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="239.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="213" width="0.2128%" height="15" fill="rgb(212,155,18)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.21%)</title><rect x="99.7682%" y="197" width="0.2128%" height="15" fill="rgb(242,21,14)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 0.21%)</title><rect x="99.7682%" y="181" width="0.2128%" height="15" fill="rgb(222,19,48)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="165" width="0.2128%" height="15" fill="rgb(232,45,27)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="175.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}}::{{closure}} (56 samples, 0.21%)</title><rect x="99.7682%" y="149" width="0.2128%" height="15" fill="rgb(249,103,42)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (56 samples, 0.21%)</title><rect x="99.7682%" y="133" width="0.2128%" height="15" fill="rgb(246,81,33)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="143.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (56 samples, 0.21%)</title><rect x="99.7682%" y="117" width="0.2128%" height="15" fill="rgb(252,33,42)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (56 samples, 0.21%)</title><rect x="99.7682%" y="101" width="0.2128%" height="15" fill="rgb(209,212,41)" fg:x="26254" fg:w="56"/><text x="100.0182%" y="111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="99.9468%" y="85" width="0.0342%" height="15" fill="rgb(207,154,6)" fg:x="26301" fg:w="9"/><text x="100.1968%" y="95.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::assign_cells_to_domain (57 samples, 0.22%)</title><rect x="99.7682%" y="357" width="0.2166%" height="15" fill="rgb(223,64,47)" fg:x="26254" fg:w="57"/><text x="100.0182%" y="367.50"></text></g><g><title>fastiron::init::init_mesh (78 samples, 0.30%)</title><rect x="99.6922%" y="453" width="0.2964%" height="15" fill="rgb(211,161,38)" fg:x="26234" fg:w="78"/><text x="99.9422%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (58 samples, 0.22%)</title><rect x="99.7682%" y="437" width="0.2204%" height="15" fill="rgb(219,138,40)" fg:x="26254" fg:w="58"/><text x="100.0182%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (58 samples, 0.22%)</title><rect x="99.7682%" y="421" width="0.2204%" height="15" fill="rgb(241,228,46)" fg:x="26254" fg:w="58"/><text x="100.0182%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (58 samples, 0.22%)</title><rect x="99.7682%" y="405" width="0.2204%" height="15" fill="rgb(223,209,38)" fg:x="26254" fg:w="58"/><text x="100.0182%" y="415.50"></text></g><g><title>fastiron::init::init_mesh::{{closure}} (58 samples, 0.22%)</title><rect x="99.7682%" y="389" width="0.2204%" height="15" fill="rgb(236,164,45)" fg:x="26254" fg:w="58"/><text x="100.0182%" y="399.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::build_mesh_partition (58 samples, 0.22%)</title><rect x="99.7682%" y="373" width="0.2204%" height="15" fill="rgb(231,15,5)" fg:x="26254" fg:w="58"/><text x="100.0182%" y="383.50"></text></g><g><title>fastiron::init::init_mcunits (82 samples, 0.31%)</title><rect x="99.6808%" y="469" width="0.3116%" height="15" fill="rgb(252,35,15)" fg:x="26231" fg:w="82"/><text x="99.9308%" y="479.50"></text></g><g><title>__libc_start_main_impl (26,079 samples, 99.10%)</title><rect x="0.8930%" y="725" width="99.1032%" height="15" fill="rgb(248,181,18)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="735.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (26,079 samples, 99.10%)</title><rect x="0.8930%" y="709" width="99.1032%" height="15" fill="rgb(233,39,42)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="719.50">__libc_start_call_main</text></g><g><title>main (26,079 samples, 99.10%)</title><rect x="0.8930%" y="693" width="99.1032%" height="15" fill="rgb(238,110,33)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="703.50">main</text></g><g><title>std::rt::lang_start_internal (26,079 samples, 99.10%)</title><rect x="0.8930%" y="677" width="99.1032%" height="15" fill="rgb(233,195,10)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="687.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (26,079 samples, 99.10%)</title><rect x="0.8930%" y="661" width="99.1032%" height="15" fill="rgb(254,105,3)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,079 samples, 99.10%)</title><rect x="0.8930%" y="645" width="99.1032%" height="15" fill="rgb(221,225,9)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,079 samples, 99.10%)</title><rect x="0.8930%" y="629" width="99.1032%" height="15" fill="rgb(224,227,45)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="639.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (26,079 samples, 99.10%)</title><rect x="0.8930%" y="613" width="99.1032%" height="15" fill="rgb(229,198,43)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="623.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (26,079 samples, 99.10%)</title><rect x="0.8930%" y="597" width="99.1032%" height="15" fill="rgb(206,209,35)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,079 samples, 99.10%)</title><rect x="0.8930%" y="581" width="99.1032%" height="15" fill="rgb(245,195,53)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,079 samples, 99.10%)</title><rect x="0.8930%" y="565" width="99.1032%" height="15" fill="rgb(240,92,26)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="575.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (26,079 samples, 99.10%)</title><rect x="0.8930%" y="549" width="99.1032%" height="15" fill="rgb(207,40,23)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="559.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (26,079 samples, 99.10%)</title><rect x="0.8930%" y="533" width="99.1032%" height="15" fill="rgb(223,111,35)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="543.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26,079 samples, 99.10%)</title><rect x="0.8930%" y="517" width="99.1032%" height="15" fill="rgb(229,147,28)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (26,079 samples, 99.10%)</title><rect x="0.8930%" y="501" width="99.1032%" height="15" fill="rgb(211,29,28)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="511.50">core::ops::function::FnOnce::call_once</text></g><g><title>fastiron::main (26,079 samples, 99.10%)</title><rect x="0.8930%" y="485" width="99.1032%" height="15" fill="rgb(228,72,33)" fg:x="235" fg:w="26079"/><text x="1.1430%" y="495.50">fastiron::main</text></g><g><title>all (26,315 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="26315"/><text x="0.2500%" y="783.50"></text></g><g><title>fastiron (26,315 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="26315"/><text x="0.2500%" y="767.50">fastiron</text></g><g><title>_start (26,085 samples, 99.13%)</title><rect x="0.8740%" y="741" width="99.1260%" height="15" fill="rgb(253,21,26)" fg:x="230" fg:w="26085"/><text x="1.1240%" y="751.50">_start</text></g></svg></svg>
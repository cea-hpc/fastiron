<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="3677"><g><title>[[stack]] (1 samples, 0.03%)</title><rect x="0.0000%" y="597" width="0.0272%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0272%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="0.0000%" y="565" width="0.0272%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="0.0272%" y="581" width="0.0272%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2772%" y="591.50"></text></g><g><title>fastiron::cycle_tracking (1 samples, 0.03%)</title><rect x="0.0544%" y="581" width="0.0272%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3044%" y="591.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (1 samples, 0.03%)</title><rect x="0.0544%" y="565" width="0.0272%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3044%" y="575.50"></text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (1 samples, 0.03%)</title><rect x="0.0544%" y="549" width="0.0272%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3044%" y="559.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (1 samples, 0.03%)</title><rect x="0.0544%" y="533" width="0.0272%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3044%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.03%)</title><rect x="0.0544%" y="517" width="0.0272%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3044%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.03%)</title><rect x="0.0544%" y="501" width="0.0272%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3044%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.0544%" y="485" width="0.0272%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3044%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="0.0544%" y="469" width="0.0272%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.3044%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="0.0544%" y="453" width="0.0272%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.3044%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="0.0544%" y="437" width="0.0272%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.3044%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="0.0544%" y="421" width="0.0272%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.3044%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.08%)</title><rect x="0.0272%" y="597" width="0.0816%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="3"/><text x="0.2772%" y="607.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_extra_particle (1 samples, 0.03%)</title><rect x="0.0816%" y="581" width="0.0272%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3316%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="0.2176%" y="453" width="0.0544%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="2"/><text x="0.4676%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="0.2176%" y="437" width="0.0544%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="2"/><text x="0.4676%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="421" width="0.0544%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="2"/><text x="0.4676%" y="431.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::cycle_finalize::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="405" width="0.0544%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="2"/><text x="0.4676%" y="415.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute (2 samples, 0.05%)</title><rect x="0.2176%" y="389" width="0.0544%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="2"/><text x="0.4676%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="0.2176%" y="373" width="0.0544%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="2"/><text x="0.4676%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="0.2176%" y="357" width="0.0544%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="2"/><text x="0.4676%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="341" width="0.0544%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="2"/><text x="0.4676%" y="351.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="325" width="0.0544%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="2"/><text x="0.4676%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="0.2176%" y="309" width="0.0544%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="2"/><text x="0.4676%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="0.2176%" y="293" width="0.0544%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="2"/><text x="0.4676%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="277" width="0.0544%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="2"/><text x="0.4676%" y="287.50"></text></g><g><title>fastiron::data::tallies::Fluence&lt;T&gt;::compute::{{closure}}::{{closure}} (2 samples, 0.05%)</title><rect x="0.2176%" y="261" width="0.0544%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="2"/><text x="0.4676%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::print_summary (1 samples, 0.03%)</title><rect x="0.2720%" y="453" width="0.0272%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="1"/><text x="0.5220%" y="463.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum (1 samples, 0.03%)</title><rect x="0.2720%" y="437" width="0.0272%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="0.5220%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.2720%" y="421" width="0.0272%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="0.5220%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.2720%" y="405" width="0.0272%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="0.5220%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="389" width="0.0272%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="0.5220%" y="399.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="373" width="0.0272%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="0.5220%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.2720%" y="357" width="0.0272%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="0.5220%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.2720%" y="341" width="0.0272%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="0.5220%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="325" width="0.0272%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="0.5220%" y="335.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="309" width="0.0272%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="0.5220%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.2720%" y="293" width="0.0272%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="0.5220%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.2720%" y="277" width="0.0272%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="1"/><text x="0.5220%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="261" width="0.0272%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="0.5220%" y="271.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="245" width="0.0272%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="0.5220%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.2720%" y="229" width="0.0272%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="0.5220%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.2720%" y="213" width="0.0272%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="0.5220%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="197" width="0.0272%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.5220%" y="207.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::scalar_flux_sum::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2720%" y="181" width="0.0272%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="0.5220%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.03%)</title><rect x="0.2720%" y="165" width="0.0272%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="0.5220%" y="175.50"></text></g><g><title>fastiron::cycle_finalize (4 samples, 0.11%)</title><rect x="0.2176%" y="485" width="0.1088%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="4"/><text x="0.4676%" y="495.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::cycle_finalize (4 samples, 0.11%)</title><rect x="0.2176%" y="469" width="0.1088%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="4"/><text x="0.4676%" y="479.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::update_spectrum (1 samples, 0.03%)</title><rect x="0.2992%" y="453" width="0.0272%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="0.5492%" y="463.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::update_spectrum::{{closure}} (1 samples, 0.03%)</title><rect x="0.2992%" y="437" width="0.0272%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="0.5492%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="0.2992%" y="421" width="0.0272%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="1"/><text x="0.5492%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.2992%" y="405" width="0.0272%" height="15" fill="rgb(231,145,46)" fg:x="11" fg:w="1"/><text x="0.5492%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="0.2992%" y="389" width="0.0272%" height="15" fill="rgb(251,118,11)" fg:x="11" fg:w="1"/><text x="0.5492%" y="399.50"></text></g><g><title>fastiron::montecarlo::MonteCarlo&lt;T&gt;::update_spectrum::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2992%" y="373" width="0.0272%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="1"/><text x="0.5492%" y="383.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (1 samples, 0.03%)</title><rect x="0.2992%" y="357" width="0.0272%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="0.5492%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="0.3807%" y="261" width="0.0816%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="3"/><text x="0.6307%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (38 samples, 1.03%)</title><rect x="0.3535%" y="277" width="1.0335%" height="15" fill="rgb(227,1,9)" fg:x="13" fg:w="38"/><text x="0.6035%" y="287.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (34 samples, 0.92%)</title><rect x="0.4623%" y="261" width="0.9247%" height="15" fill="rgb(248,47,43)" fg:x="17" fg:w="34"/><text x="0.7123%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (34 samples, 0.92%)</title><rect x="0.4623%" y="245" width="0.9247%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="34"/><text x="0.7123%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (34 samples, 0.92%)</title><rect x="0.4623%" y="229" width="0.9247%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="34"/><text x="0.7123%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.19%)</title><rect x="1.3870%" y="181" width="0.1904%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="7"/><text x="1.6370%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (49 samples, 1.33%)</title><rect x="1.5774%" y="165" width="1.3326%" height="15" fill="rgb(234,67,33)" fg:x="58" fg:w="49"/><text x="1.8274%" y="175.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (49 samples, 1.33%)</title><rect x="1.5774%" y="149" width="1.3326%" height="15" fill="rgb(247,98,35)" fg:x="58" fg:w="49"/><text x="1.8274%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (49 samples, 1.33%)</title><rect x="1.5774%" y="133" width="1.3326%" height="15" fill="rgb(247,138,52)" fg:x="58" fg:w="49"/><text x="1.8274%" y="143.50"></text></g><g><title>fastiron::simulation::population_control::population_control (96 samples, 2.61%)</title><rect x="0.3264%" y="469" width="2.6108%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="96"/><text x="0.5764%" y="479.50">fa..</text></g><g><title>fastiron::simulation::population_control::population_control_guts (96 samples, 2.61%)</title><rect x="0.3264%" y="453" width="2.6108%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="96"/><text x="0.5764%" y="463.50">fa..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (96 samples, 2.61%)</title><rect x="0.3264%" y="437" width="2.6108%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="96"/><text x="0.5764%" y="447.50">co..</text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 2.61%)</title><rect x="0.3264%" y="421" width="2.6108%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="96"/><text x="0.5764%" y="431.50">&lt;c..</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (96 samples, 2.61%)</title><rect x="0.3264%" y="405" width="2.6108%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="96"/><text x="0.5764%" y="415.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (96 samples, 2.61%)</title><rect x="0.3264%" y="389" width="2.6108%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="96"/><text x="0.5764%" y="399.50">co..</text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}} (96 samples, 2.61%)</title><rect x="0.3264%" y="373" width="2.6108%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="96"/><text x="0.5764%" y="383.50">fa..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (95 samples, 2.58%)</title><rect x="0.3535%" y="357" width="2.5836%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="95"/><text x="0.6035%" y="367.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (95 samples, 2.58%)</title><rect x="0.3535%" y="341" width="2.5836%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="95"/><text x="0.6035%" y="351.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (95 samples, 2.58%)</title><rect x="0.3535%" y="325" width="2.5836%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="95"/><text x="0.6035%" y="335.50">co..</text></g><g><title>fastiron::simulation::population_control::population_control_guts::{{closure}}::{{closure}} (95 samples, 2.58%)</title><rect x="0.3535%" y="309" width="2.5836%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="95"/><text x="0.6035%" y="319.50">fa..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (95 samples, 2.58%)</title><rect x="0.3535%" y="293" width="2.5836%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="95"/><text x="0.6035%" y="303.50">fa..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (57 samples, 1.55%)</title><rect x="1.3870%" y="277" width="1.5502%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="57"/><text x="1.6370%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (57 samples, 1.55%)</title><rect x="1.3870%" y="261" width="1.5502%" height="15" fill="rgb(211,96,35)" fg:x="51" fg:w="57"/><text x="1.6370%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (57 samples, 1.55%)</title><rect x="1.3870%" y="245" width="1.5502%" height="15" fill="rgb(253,215,40)" fg:x="51" fg:w="57"/><text x="1.6370%" y="255.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (57 samples, 1.55%)</title><rect x="1.3870%" y="229" width="1.5502%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="57"/><text x="1.6370%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 1.55%)</title><rect x="1.3870%" y="213" width="1.5502%" height="15" fill="rgb(208,190,38)" fg:x="51" fg:w="57"/><text x="1.6370%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 1.55%)</title><rect x="1.3870%" y="197" width="1.5502%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="57"/><text x="1.6370%" y="207.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (50 samples, 1.36%)</title><rect x="1.5774%" y="181" width="1.3598%" height="15" fill="rgb(237,122,38)" fg:x="58" fg:w="50"/><text x="1.8274%" y="191.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.03%)</title><rect x="2.9100%" y="165" width="0.0272%" height="15" fill="rgb(244,218,35)" fg:x="107" fg:w="1"/><text x="3.1600%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.9644%" y="165" width="0.0272%" height="15" fill="rgb(240,68,47)" fg:x="109" fg:w="1"/><text x="3.2144%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (9 samples, 0.24%)</title><rect x="2.9372%" y="181" width="0.2448%" height="15" fill="rgb(210,16,53)" fg:x="108" fg:w="9"/><text x="3.1872%" y="191.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (7 samples, 0.19%)</title><rect x="2.9916%" y="165" width="0.1904%" height="15" fill="rgb(235,124,12)" fg:x="110" fg:w="7"/><text x="3.2416%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (7 samples, 0.19%)</title><rect x="2.9916%" y="149" width="0.1904%" height="15" fill="rgb(224,169,11)" fg:x="110" fg:w="7"/><text x="3.2416%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.19%)</title><rect x="2.9916%" y="133" width="0.1904%" height="15" fill="rgb(250,166,2)" fg:x="110" fg:w="7"/><text x="3.2416%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="3.1819%" y="85" width="0.0544%" height="15" fill="rgb(242,216,29)" fg:x="117" fg:w="2"/><text x="3.4319%" y="95.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (25 samples, 0.68%)</title><rect x="2.9372%" y="197" width="0.6799%" height="15" fill="rgb(230,116,27)" fg:x="108" fg:w="25"/><text x="3.1872%" y="207.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (16 samples, 0.44%)</title><rect x="3.1819%" y="181" width="0.4351%" height="15" fill="rgb(228,99,48)" fg:x="117" fg:w="16"/><text x="3.4319%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (16 samples, 0.44%)</title><rect x="3.1819%" y="165" width="0.4351%" height="15" fill="rgb(253,11,6)" fg:x="117" fg:w="16"/><text x="3.4319%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (16 samples, 0.44%)</title><rect x="3.1819%" y="149" width="0.4351%" height="15" fill="rgb(247,143,39)" fg:x="117" fg:w="16"/><text x="3.4319%" y="159.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (16 samples, 0.44%)</title><rect x="3.1819%" y="133" width="0.4351%" height="15" fill="rgb(236,97,10)" fg:x="117" fg:w="16"/><text x="3.4319%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.44%)</title><rect x="3.1819%" y="117" width="0.4351%" height="15" fill="rgb(233,208,19)" fg:x="117" fg:w="16"/><text x="3.4319%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.44%)</title><rect x="3.1819%" y="101" width="0.4351%" height="15" fill="rgb(216,164,2)" fg:x="117" fg:w="16"/><text x="3.4319%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.38%)</title><rect x="3.2363%" y="85" width="0.3807%" height="15" fill="rgb(220,129,5)" fg:x="119" fg:w="14"/><text x="3.4863%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (14 samples, 0.38%)</title><rect x="3.2363%" y="69" width="0.3807%" height="15" fill="rgb(242,17,10)" fg:x="119" fg:w="14"/><text x="3.4863%" y="79.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (14 samples, 0.38%)</title><rect x="3.2363%" y="53" width="0.3807%" height="15" fill="rgb(242,107,0)" fg:x="119" fg:w="14"/><text x="3.4863%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (14 samples, 0.38%)</title><rect x="3.2363%" y="37" width="0.3807%" height="15" fill="rgb(251,28,31)" fg:x="119" fg:w="14"/><text x="3.4863%" y="47.50"></text></g><g><title>fastiron::cycle_init (122 samples, 3.32%)</title><rect x="0.3264%" y="485" width="3.3179%" height="15" fill="rgb(233,223,10)" fg:x="12" fg:w="122"/><text x="0.5764%" y="495.50">fas..</text></g><g><title>fastiron::simulation::population_control::source_now (26 samples, 0.71%)</title><rect x="2.9372%" y="469" width="0.7071%" height="15" fill="rgb(215,21,27)" fg:x="108" fg:w="26"/><text x="3.1872%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.71%)</title><rect x="2.9372%" y="453" width="0.7071%" height="15" fill="rgb(232,23,21)" fg:x="108" fg:w="26"/><text x="3.1872%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.71%)</title><rect x="2.9372%" y="437" width="0.7071%" height="15" fill="rgb(244,5,23)" fg:x="108" fg:w="26"/><text x="3.1872%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.71%)</title><rect x="2.9372%" y="421" width="0.7071%" height="15" fill="rgb(226,81,46)" fg:x="108" fg:w="26"/><text x="3.1872%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="405" width="0.7071%" height="15" fill="rgb(247,70,30)" fg:x="108" fg:w="26"/><text x="3.1872%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="389" width="0.7071%" height="15" fill="rgb(212,68,19)" fg:x="108" fg:w="26"/><text x="3.1872%" y="399.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="373" width="0.7071%" height="15" fill="rgb(240,187,13)" fg:x="108" fg:w="26"/><text x="3.1872%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.71%)</title><rect x="2.9372%" y="357" width="0.7071%" height="15" fill="rgb(223,113,26)" fg:x="108" fg:w="26"/><text x="3.1872%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.71%)</title><rect x="2.9372%" y="341" width="0.7071%" height="15" fill="rgb(206,192,2)" fg:x="108" fg:w="26"/><text x="3.1872%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.71%)</title><rect x="2.9372%" y="325" width="0.7071%" height="15" fill="rgb(241,108,4)" fg:x="108" fg:w="26"/><text x="3.1872%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="309" width="0.7071%" height="15" fill="rgb(247,173,49)" fg:x="108" fg:w="26"/><text x="3.1872%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="293" width="0.7071%" height="15" fill="rgb(224,114,35)" fg:x="108" fg:w="26"/><text x="3.1872%" y="303.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="277" width="0.7071%" height="15" fill="rgb(245,159,27)" fg:x="108" fg:w="26"/><text x="3.1872%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.71%)</title><rect x="2.9372%" y="261" width="0.7071%" height="15" fill="rgb(245,172,44)" fg:x="108" fg:w="26"/><text x="3.1872%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.71%)</title><rect x="2.9372%" y="245" width="0.7071%" height="15" fill="rgb(236,23,11)" fg:x="108" fg:w="26"/><text x="3.1872%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="229" width="0.7071%" height="15" fill="rgb(205,117,38)" fg:x="108" fg:w="26"/><text x="3.1872%" y="239.50"></text></g><g><title>fastiron::simulation::population_control::source_now::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.71%)</title><rect x="2.9372%" y="213" width="0.7071%" height="15" fill="rgb(237,72,25)" fg:x="108" fg:w="26"/><text x="3.1872%" y="223.50"></text></g><g><title>fastiron::simulation::mct::generate_coordinate_3dg (1 samples, 0.03%)</title><rect x="3.6171%" y="197" width="0.0272%" height="15" fill="rgb(244,70,9)" fg:x="133" fg:w="1"/><text x="3.8671%" y="207.50"></text></g><g><title>fastiron::simulation::mct::mct_facet_points_3dg (1 samples, 0.03%)</title><rect x="3.6171%" y="181" width="0.0272%" height="15" fill="rgb(217,125,39)" fg:x="133" fg:w="1"/><text x="3.8671%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="3.6171%" y="165" width="0.0272%" height="15" fill="rgb(235,36,10)" fg:x="133" fg:w="1"/><text x="3.8671%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="3.6171%" y="149" width="0.0272%" height="15" fill="rgb(251,123,47)" fg:x="133" fg:w="1"/><text x="3.8671%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="3.6171%" y="133" width="0.0272%" height="15" fill="rgb(221,13,13)" fg:x="133" fg:w="1"/><text x="3.8671%" y="143.50"></text></g><g><title>fastiron::simulation::mct::mct_facet_points_3dg::{{closure}} (1 samples, 0.03%)</title><rect x="3.6171%" y="117" width="0.0272%" height="15" fill="rgb(238,131,9)" fg:x="133" fg:w="1"/><text x="3.8671%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.03%)</title><rect x="3.6171%" y="101" width="0.0272%" height="15" fill="rgb(211,50,8)" fg:x="133" fg:w="1"/><text x="3.8671%" y="111.50"></text></g><g><title>fastiron::particles::mc_particle_buffer::MCParticleBuffer&lt;T&gt;::test_done_new (4 samples, 0.11%)</title><rect x="3.6443%" y="469" width="0.1088%" height="15" fill="rgb(245,182,24)" fg:x="134" fg:w="4"/><text x="3.8943%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size (4 samples, 0.11%)</title><rect x="3.6443%" y="453" width="0.1088%" height="15" fill="rgb(242,14,37)" fg:x="134" fg:w="4"/><text x="3.8943%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4 samples, 0.11%)</title><rect x="3.6443%" y="437" width="0.1088%" height="15" fill="rgb(246,228,12)" fg:x="134" fg:w="4"/><text x="3.8943%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_processing_size::{{closure}} (4 samples, 0.11%)</title><rect x="3.6443%" y="421" width="0.1088%" height="15" fill="rgb(213,55,15)" fg:x="134" fg:w="4"/><text x="3.8943%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (4 samples, 0.11%)</title><rect x="3.6443%" y="405" width="0.1088%" height="15" fill="rgb(209,9,3)" fg:x="134" fg:w="4"/><text x="3.8943%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (4 samples, 0.11%)</title><rect x="3.6443%" y="389" width="0.1088%" height="15" fill="rgb(230,59,30)" fg:x="134" fg:w="4"/><text x="3.8943%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.11%)</title><rect x="3.6443%" y="373" width="0.1088%" height="15" fill="rgb(209,121,21)" fg:x="134" fg:w="4"/><text x="3.8943%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.11%)</title><rect x="3.6443%" y="357" width="0.1088%" height="15" fill="rgb(220,109,13)" fg:x="134" fg:w="4"/><text x="3.8943%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.11%)</title><rect x="3.6443%" y="341" width="0.1088%" height="15" fill="rgb(232,18,1)" fg:x="134" fg:w="4"/><text x="3.8943%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.11%)</title><rect x="3.6443%" y="325" width="0.1088%" height="15" fill="rgb(215,41,42)" fg:x="134" fg:w="4"/><text x="3.8943%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.11%)</title><rect x="3.6443%" y="309" width="0.1088%" height="15" fill="rgb(224,123,36)" fg:x="134" fg:w="4"/><text x="3.8943%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (4 samples, 0.11%)</title><rect x="3.6443%" y="293" width="0.1088%" height="15" fill="rgb(240,125,3)" fg:x="134" fg:w="4"/><text x="3.8943%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (4 samples, 0.11%)</title><rect x="3.6443%" y="277" width="0.1088%" height="15" fill="rgb(205,98,50)" fg:x="134" fg:w="4"/><text x="3.8943%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.11%)</title><rect x="3.6443%" y="261" width="0.1088%" height="15" fill="rgb(205,185,37)" fg:x="134" fg:w="4"/><text x="3.8943%" y="271.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (3 samples, 0.08%)</title><rect x="3.7531%" y="469" width="0.0816%" height="15" fill="rgb(238,207,15)" fg:x="138" fg:w="3"/><text x="4.0031%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (3 samples, 0.08%)</title><rect x="3.7531%" y="453" width="0.0816%" height="15" fill="rgb(213,199,42)" fg:x="138" fg:w="3"/><text x="4.0031%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.08%)</title><rect x="3.7531%" y="437" width="0.0816%" height="15" fill="rgb(235,201,11)" fg:x="138" fg:w="3"/><text x="4.0031%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.08%)</title><rect x="3.7531%" y="421" width="0.0816%" height="15" fill="rgb(207,46,11)" fg:x="138" fg:w="3"/><text x="4.0031%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.08%)</title><rect x="3.7531%" y="405" width="0.0816%" height="15" fill="rgb(241,35,35)" fg:x="138" fg:w="3"/><text x="4.0031%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.08%)</title><rect x="3.7531%" y="389" width="0.0816%" height="15" fill="rgb(243,32,47)" fg:x="138" fg:w="3"/><text x="4.0031%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.08%)</title><rect x="3.7531%" y="373" width="0.0816%" height="15" fill="rgb(247,202,23)" fg:x="138" fg:w="3"/><text x="4.0031%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (3 samples, 0.08%)</title><rect x="3.7531%" y="357" width="0.0816%" height="15" fill="rgb(219,102,11)" fg:x="138" fg:w="3"/><text x="4.0031%" y="367.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (3 samples, 0.08%)</title><rect x="3.7531%" y="341" width="0.0816%" height="15" fill="rgb(243,110,44)" fg:x="138" fg:w="3"/><text x="4.0031%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.08%)</title><rect x="3.7531%" y="325" width="0.0816%" height="15" fill="rgb(222,74,54)" fg:x="138" fg:w="3"/><text x="4.0031%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.14%)</title><rect x="3.8346%" y="309" width="0.1360%" height="15" fill="rgb(216,99,12)" fg:x="141" fg:w="5"/><text x="4.0846%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (327 samples, 8.89%)</title><rect x="3.9706%" y="309" width="8.8931%" height="15" fill="rgb(226,22,26)" fg:x="146" fg:w="327"/><text x="4.2206%" y="319.50">&lt;core::option..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (358 samples, 9.74%)</title><rect x="3.8346%" y="453" width="9.7362%" height="15" fill="rgb(217,163,10)" fg:x="141" fg:w="358"/><text x="4.0846%" y="463.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (358 samples, 9.74%)</title><rect x="3.8346%" y="437" width="9.7362%" height="15" fill="rgb(213,25,53)" fg:x="141" fg:w="358"/><text x="4.0846%" y="447.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (358 samples, 9.74%)</title><rect x="3.8346%" y="421" width="9.7362%" height="15" fill="rgb(252,105,26)" fg:x="141" fg:w="358"/><text x="4.0846%" y="431.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (358 samples, 9.74%)</title><rect x="3.8346%" y="405" width="9.7362%" height="15" fill="rgb(220,39,43)" fg:x="141" fg:w="358"/><text x="4.0846%" y="415.50">&lt;T as alloc::s..</text></g><g><title>&lt;fastiron::particles::particle_vault::ParticleVault&lt;T&gt; as core::clone::Clone&gt;::clone (358 samples, 9.74%)</title><rect x="3.8346%" y="389" width="9.7362%" height="15" fill="rgb(229,68,48)" fg:x="141" fg:w="358"/><text x="4.0846%" y="399.50">&lt;fastiron::par..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (358 samples, 9.74%)</title><rect x="3.8346%" y="373" width="9.7362%" height="15" fill="rgb(252,8,32)" fg:x="141" fg:w="358"/><text x="4.0846%" y="383.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (358 samples, 9.74%)</title><rect x="3.8346%" y="357" width="9.7362%" height="15" fill="rgb(223,20,43)" fg:x="141" fg:w="358"/><text x="4.0846%" y="367.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (358 samples, 9.74%)</title><rect x="3.8346%" y="341" width="9.7362%" height="15" fill="rgb(229,81,49)" fg:x="141" fg:w="358"/><text x="4.0846%" y="351.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (358 samples, 9.74%)</title><rect x="3.8346%" y="325" width="9.7362%" height="15" fill="rgb(236,28,36)" fg:x="141" fg:w="358"/><text x="4.0846%" y="335.50">&lt;T as alloc::s..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.71%)</title><rect x="12.8637%" y="309" width="0.7071%" height="15" fill="rgb(249,185,26)" fg:x="473" fg:w="26"/><text x="13.1137%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="13.5708%" y="357" width="0.0544%" height="15" fill="rgb(249,174,33)" fg:x="499" fg:w="2"/><text x="13.8208%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="13.5708%" y="341" width="0.0544%" height="15" fill="rgb(233,201,37)" fg:x="499" fg:w="2"/><text x="13.8208%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.11%)</title><rect x="13.6252%" y="357" width="0.1088%" height="15" fill="rgb(221,78,26)" fg:x="501" fg:w="4"/><text x="13.8752%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.11%)</title><rect x="13.6252%" y="341" width="0.1088%" height="15" fill="rgb(250,127,30)" fg:x="501" fg:w="4"/><text x="13.8752%" y="351.50"></text></g><g><title>alloc::vec::from_elem (207 samples, 5.63%)</title><rect x="13.5708%" y="405" width="5.6296%" height="15" fill="rgb(230,49,44)" fg:x="499" fg:w="207"/><text x="13.8208%" y="415.50">alloc::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (207 samples, 5.63%)</title><rect x="13.5708%" y="389" width="5.6296%" height="15" fill="rgb(229,67,23)" fg:x="499" fg:w="207"/><text x="13.8208%" y="399.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (207 samples, 5.63%)</title><rect x="13.5708%" y="373" width="5.6296%" height="15" fill="rgb(249,83,47)" fg:x="499" fg:w="207"/><text x="13.8208%" y="383.50">alloc::..</text></g><g><title>core::ptr::write (201 samples, 5.47%)</title><rect x="13.7340%" y="357" width="5.4664%" height="15" fill="rgb(215,43,3)" fg:x="505" fg:w="201"/><text x="13.9840%" y="367.50">core::p..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (208 samples, 5.66%)</title><rect x="13.5708%" y="453" width="5.6568%" height="15" fill="rgb(238,154,13)" fg:x="499" fg:w="208"/><text x="13.8208%" y="463.50">&lt;core::..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (208 samples, 5.66%)</title><rect x="13.5708%" y="437" width="5.6568%" height="15" fill="rgb(219,56,2)" fg:x="499" fg:w="208"/><text x="13.8208%" y="447.50">fastiro..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::clear (208 samples, 5.66%)</title><rect x="13.5708%" y="421" width="5.6568%" height="15" fill="rgb(233,0,4)" fg:x="499" fg:w="208"/><text x="13.8208%" y="431.50">fastiro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="19.2004%" y="405" width="0.0272%" height="15" fill="rgb(235,30,7)" fg:x="706" fg:w="1"/><text x="19.4504%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="19.2004%" y="389" width="0.0272%" height="15" fill="rgb(250,79,13)" fg:x="706" fg:w="1"/><text x="19.4504%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="19.2004%" y="373" width="0.0272%" height="15" fill="rgb(211,146,34)" fg:x="706" fg:w="1"/><text x="19.4504%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="19.2004%" y="357" width="0.0272%" height="15" fill="rgb(228,22,38)" fg:x="706" fg:w="1"/><text x="19.4504%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="19.2004%" y="341" width="0.0272%" height="15" fill="rgb(235,168,5)" fg:x="706" fg:w="1"/><text x="19.4504%" y="351.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="19.2004%" y="325" width="0.0272%" height="15" fill="rgb(221,155,16)" fg:x="706" fg:w="1"/><text x="19.4504%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="19.2004%" y="309" width="0.0272%" height="15" fill="rgb(215,215,53)" fg:x="706" fg:w="1"/><text x="19.4504%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="19.2004%" y="293" width="0.0272%" height="15" fill="rgb(223,4,10)" fg:x="706" fg:w="1"/><text x="19.4504%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="19.2004%" y="277" width="0.0272%" height="15" fill="rgb(234,103,6)" fg:x="706" fg:w="1"/><text x="19.4504%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.54%)</title><rect x="20.1795%" y="229" width="0.5439%" height="15" fill="rgb(227,97,0)" fg:x="742" fg:w="20"/><text x="20.4295%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (269 samples, 7.32%)</title><rect x="19.3364%" y="245" width="7.3157%" height="15" fill="rgb(234,150,53)" fg:x="711" fg:w="269"/><text x="19.5864%" y="255.50">&lt;core::sli..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle::{{closure}} (218 samples, 5.93%)</title><rect x="20.7234%" y="229" width="5.9287%" height="15" fill="rgb(228,201,54)" fg:x="762" fg:w="218"/><text x="20.9734%" y="239.50">fastiron..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (218 samples, 5.93%)</title><rect x="20.7234%" y="213" width="5.9287%" height="15" fill="rgb(222,22,37)" fg:x="762" fg:w="218"/><text x="20.9734%" y="223.50">core::op..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (218 samples, 5.93%)</title><rect x="20.7234%" y="197" width="5.9287%" height="15" fill="rgb(237,53,32)" fg:x="762" fg:w="218"/><text x="20.9734%" y="207.50">core::op..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 1.41%)</title><rect x="26.6522%" y="149" width="1.4142%" height="15" fill="rgb(233,25,53)" fg:x="980" fg:w="52"/><text x="26.9022%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (489 samples, 13.30%)</title><rect x="28.0664%" y="133" width="13.2989%" height="15" fill="rgb(210,40,34)" fg:x="1032" fg:w="489"/><text x="28.3164%" y="143.50">&lt;core::iter::adapter..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (489 samples, 13.30%)</title><rect x="28.0664%" y="117" width="13.2989%" height="15" fill="rgb(241,220,44)" fg:x="1032" fg:w="489"/><text x="28.3164%" y="127.50">fastiron::particles:..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (489 samples, 13.30%)</title><rect x="28.0664%" y="101" width="13.2989%" height="15" fill="rgb(235,28,35)" fg:x="1032" fg:w="489"/><text x="28.3164%" y="111.50">core::option::Option..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (855 samples, 23.25%)</title><rect x="19.2276%" y="293" width="23.2527%" height="15" fill="rgb(210,56,17)" fg:x="707" fg:w="855"/><text x="19.4776%" y="303.50">core::iter::traits::iterator::Iterato..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}}::{{closure}} (855 samples, 23.25%)</title><rect x="19.2276%" y="277" width="23.2527%" height="15" fill="rgb(224,130,29)" fg:x="707" fg:w="855"/><text x="19.4776%" y="287.50">fastiron::particles::particle_vault_c..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_processing_particle (855 samples, 23.25%)</title><rect x="19.2276%" y="261" width="23.2527%" height="15" fill="rgb(235,212,8)" fg:x="707" fg:w="855"/><text x="19.4776%" y="271.50">fastiron::particles::particle_vault_c..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (582 samples, 15.83%)</title><rect x="26.6522%" y="245" width="15.8281%" height="15" fill="rgb(223,33,50)" fg:x="980" fg:w="582"/><text x="26.9022%" y="255.50">fastiron::particles::par..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (582 samples, 15.83%)</title><rect x="26.6522%" y="229" width="15.8281%" height="15" fill="rgb(219,149,13)" fg:x="980" fg:w="582"/><text x="26.9022%" y="239.50">&lt;core::iter::adapters::f..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (582 samples, 15.83%)</title><rect x="26.6522%" y="213" width="15.8281%" height="15" fill="rgb(250,156,29)" fg:x="980" fg:w="582"/><text x="26.9022%" y="223.50">core::iter::traits::iter..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (582 samples, 15.83%)</title><rect x="26.6522%" y="197" width="15.8281%" height="15" fill="rgb(216,193,19)" fg:x="980" fg:w="582"/><text x="26.9022%" y="207.50">&lt;usize as core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (582 samples, 15.83%)</title><rect x="26.6522%" y="181" width="15.8281%" height="15" fill="rgb(216,135,14)" fg:x="980" fg:w="582"/><text x="26.9022%" y="191.50">&lt;core::iter::adapters::m..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (582 samples, 15.83%)</title><rect x="26.6522%" y="165" width="15.8281%" height="15" fill="rgb(241,47,5)" fg:x="980" fg:w="582"/><text x="26.9022%" y="175.50">core::iter::traits::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (530 samples, 14.41%)</title><rect x="28.0664%" y="149" width="14.4139%" height="15" fill="rgb(233,42,35)" fg:x="1032" fg:w="530"/><text x="28.3164%" y="159.50">core::iter::adapters::..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (41 samples, 1.12%)</title><rect x="41.3652%" y="133" width="1.1150%" height="15" fill="rgb(231,13,6)" fg:x="1521" fg:w="41"/><text x="41.6152%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (860 samples, 23.39%)</title><rect x="19.2276%" y="389" width="23.3886%" height="15" fill="rgb(207,181,40)" fg:x="707" fg:w="860"/><text x="19.4776%" y="399.50">core::iter::traits::iterator::Iterato..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (860 samples, 23.39%)</title><rect x="19.2276%" y="373" width="23.3886%" height="15" fill="rgb(254,173,49)" fg:x="707" fg:w="860"/><text x="19.4776%" y="383.50">fastiron::particles::particle_vault_c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (860 samples, 23.39%)</title><rect x="19.2276%" y="357" width="23.3886%" height="15" fill="rgb(221,1,38)" fg:x="707" fg:w="860"/><text x="19.4776%" y="367.50">core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (860 samples, 23.39%)</title><rect x="19.2276%" y="341" width="23.3886%" height="15" fill="rgb(206,124,46)" fg:x="707" fg:w="860"/><text x="19.4776%" y="351.50">&lt;core::iter::adapters::filter::Filter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (860 samples, 23.39%)</title><rect x="19.2276%" y="325" width="23.3886%" height="15" fill="rgb(249,21,11)" fg:x="707" fg:w="860"/><text x="19.4776%" y="335.50">core::iter::traits::iterator::Iterato..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (860 samples, 23.39%)</title><rect x="19.2276%" y="309" width="23.3886%" height="15" fill="rgb(222,201,40)" fg:x="707" fg:w="860"/><text x="19.4776%" y="319.50">core::iter::adapters::filter::filter_..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}}::{{closure}} (5 samples, 0.14%)</title><rect x="42.4803%" y="293" width="0.1360%" height="15" fill="rgb(235,61,29)" fg:x="1562" fg:w="5"/><text x="42.7303%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.14%)</title><rect x="42.4803%" y="277" width="0.1360%" height="15" fill="rgb(219,207,3)" fg:x="1562" fg:w="5"/><text x="42.7303%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="42.6163%" y="277" width="0.0816%" height="15" fill="rgb(222,56,46)" fg:x="1567" fg:w="3"/><text x="42.8663%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (87 samples, 2.37%)</title><rect x="42.6979%" y="261" width="2.3661%" height="15" fill="rgb(239,76,54)" fg:x="1570" fg:w="87"/><text x="42.9479%" y="271.50">&lt;c..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (87 samples, 2.37%)</title><rect x="42.6979%" y="245" width="2.3661%" height="15" fill="rgb(231,124,27)" fg:x="1570" fg:w="87"/><text x="42.9479%" y="255.50">fa..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (87 samples, 2.37%)</title><rect x="42.6979%" y="229" width="2.3661%" height="15" fill="rgb(249,195,6)" fg:x="1570" fg:w="87"/><text x="42.9479%" y="239.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (952 samples, 25.89%)</title><rect x="19.2276%" y="453" width="25.8907%" height="15" fill="rgb(237,174,47)" fg:x="707" fg:w="952"/><text x="19.4776%" y="463.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (952 samples, 25.89%)</title><rect x="19.2276%" y="437" width="25.8907%" height="15" fill="rgb(206,201,31)" fg:x="707" fg:w="952"/><text x="19.4776%" y="447.50">&lt;core::iter::adapters::filter::Filter&lt;I,P..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (952 samples, 25.89%)</title><rect x="19.2276%" y="421" width="25.8907%" height="15" fill="rgb(231,57,52)" fg:x="707" fg:w="952"/><text x="19.4776%" y="431.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (952 samples, 25.89%)</title><rect x="19.2276%" y="405" width="25.8907%" height="15" fill="rgb(248,177,22)" fg:x="707" fg:w="952"/><text x="19.4776%" y="415.50">core::iter::adapters::filter::filter_fold..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults::{{closure}} (92 samples, 2.50%)</title><rect x="42.6163%" y="389" width="2.5020%" height="15" fill="rgb(215,211,37)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="399.50">fa..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (92 samples, 2.50%)</title><rect x="42.6163%" y="373" width="2.5020%" height="15" fill="rgb(241,128,51)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="383.50">fa..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (92 samples, 2.50%)</title><rect x="42.6163%" y="357" width="2.5020%" height="15" fill="rgb(227,165,31)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="367.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (92 samples, 2.50%)</title><rect x="42.6163%" y="341" width="2.5020%" height="15" fill="rgb(228,167,24)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="351.50">co..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (92 samples, 2.50%)</title><rect x="42.6163%" y="325" width="2.5020%" height="15" fill="rgb(228,143,12)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="335.50">&lt;u..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 2.50%)</title><rect x="42.6163%" y="309" width="2.5020%" height="15" fill="rgb(249,149,8)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="319.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (92 samples, 2.50%)</title><rect x="42.6163%" y="293" width="2.5020%" height="15" fill="rgb(243,35,44)" fg:x="1567" fg:w="92"/><text x="42.8663%" y="303.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (89 samples, 2.42%)</title><rect x="42.6979%" y="277" width="2.4205%" height="15" fill="rgb(246,89,9)" fg:x="1570" fg:w="89"/><text x="42.9479%" y="287.50">co..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.05%)</title><rect x="45.0639%" y="261" width="0.0544%" height="15" fill="rgb(233,213,13)" fg:x="1657" fg:w="2"/><text x="45.3139%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="45.1183%" y="453" width="0.0272%" height="15" fill="rgb(233,141,41)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="45.1183%" y="437" width="0.0272%" height="15" fill="rgb(239,167,4)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;]&gt; (1 samples, 0.03%)</title><rect x="45.1183%" y="421" width="0.0272%" height="15" fill="rgb(209,217,16)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastiron::particles::particle_vault::ParticleVault&lt;f64&gt;&gt; (1 samples, 0.03%)</title><rect x="45.1183%" y="405" width="0.0272%" height="15" fill="rgb(219,88,35)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="45.1183%" y="389" width="0.0272%" height="15" fill="rgb(220,193,23)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;fastiron::particles::mc_base_particle::MCBaseParticle&lt;f64&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="45.1183%" y="373" width="0.0272%" height="15" fill="rgb(230,90,52)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="45.1183%" y="357" width="0.0272%" height="15" fill="rgb(252,106,19)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="45.1183%" y="341" width="0.0272%" height="15" fill="rgb(206,74,20)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="45.1183%" y="325" width="0.0272%" height="15" fill="rgb(230,138,44)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="45.1183%" y="309" width="0.0272%" height="15" fill="rgb(235,182,43)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="45.1183%" y="293" width="0.0272%" height="15" fill="rgb(242,16,51)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="45.1183%" y="277" width="0.0272%" height="15" fill="rgb(248,9,4)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="45.1183%" y="261" width="0.0272%" height="15" fill="rgb(210,31,22)" fg:x="1659" fg:w="1"/><text x="45.3683%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.60%)</title><rect x="45.1455%" y="309" width="0.5983%" height="15" fill="rgb(239,54,39)" fg:x="1660" fg:w="22"/><text x="45.3955%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (575 samples, 15.64%)</title><rect x="45.7438%" y="293" width="15.6377%" height="15" fill="rgb(230,99,41)" fg:x="1682" fg:w="575"/><text x="45.9938%" y="303.50">&lt;core::iter::adapters::f..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (575 samples, 15.64%)</title><rect x="45.7438%" y="277" width="15.6377%" height="15" fill="rgb(253,106,12)" fg:x="1682" fg:w="575"/><text x="45.9938%" y="287.50">fastiron::particles::par..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (575 samples, 15.64%)</title><rect x="45.7438%" y="261" width="15.6377%" height="15" fill="rgb(213,46,41)" fg:x="1682" fg:w="575"/><text x="45.9938%" y="271.50">core::option::Option&lt;T&gt;:..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults (2,138 samples, 58.15%)</title><rect x="3.8346%" y="469" width="58.1452%" height="15" fill="rgb(215,133,35)" fg:x="141" fg:w="2138"/><text x="4.0846%" y="479.50">fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::clean_extra_vaults</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size (619 samples, 16.83%)</title><rect x="45.1455%" y="453" width="16.8344%" height="15" fill="rgb(213,28,5)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="463.50">fastiron::particles::parti..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (619 samples, 16.83%)</title><rect x="45.1455%" y="437" width="16.8344%" height="15" fill="rgb(215,77,49)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="447.50">&lt;core::slice::iter::Iter&lt;T..</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::particles_extra_size::{{closure}} (619 samples, 16.83%)</title><rect x="45.1455%" y="421" width="16.8344%" height="15" fill="rgb(248,100,22)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="431.50">fastiron::particles::parti..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (619 samples, 16.83%)</title><rect x="45.1455%" y="405" width="16.8344%" height="15" fill="rgb(208,67,9)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="415.50">fastiron::particles::parti..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (619 samples, 16.83%)</title><rect x="45.1455%" y="389" width="16.8344%" height="15" fill="rgb(219,133,21)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="399.50">&lt;core::iter::adapters::fil..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (619 samples, 16.83%)</title><rect x="45.1455%" y="373" width="16.8344%" height="15" fill="rgb(246,46,29)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="383.50">core::iter::traits::iterat..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (619 samples, 16.83%)</title><rect x="45.1455%" y="357" width="16.8344%" height="15" fill="rgb(246,185,52)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="367.50">&lt;usize as core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (619 samples, 16.83%)</title><rect x="45.1455%" y="341" width="16.8344%" height="15" fill="rgb(252,136,11)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="351.50">&lt;core::iter::adapters::map..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (619 samples, 16.83%)</title><rect x="45.1455%" y="325" width="16.8344%" height="15" fill="rgb(219,138,53)" fg:x="1660" fg:w="619"/><text x="45.3955%" y="335.50">core::iter::traits::iterat..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (597 samples, 16.24%)</title><rect x="45.7438%" y="309" width="16.2361%" height="15" fill="rgb(211,51,23)" fg:x="1682" fg:w="597"/><text x="45.9938%" y="319.50">core::iter::adapters::map..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (22 samples, 0.60%)</title><rect x="61.3816%" y="293" width="0.5983%" height="15" fill="rgb(247,221,28)" fg:x="2257" fg:w="22"/><text x="61.6316%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processed (5 samples, 0.14%)</title><rect x="61.9799%" y="469" width="0.1360%" height="15" fill="rgb(251,222,45)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (5 samples, 0.14%)</title><rect x="61.9799%" y="453" width="0.1360%" height="15" fill="rgb(217,162,53)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (5 samples, 0.14%)</title><rect x="61.9799%" y="437" width="0.1360%" height="15" fill="rgb(229,93,14)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5 samples, 0.14%)</title><rect x="61.9799%" y="421" width="0.1360%" height="15" fill="rgb(209,67,49)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5 samples, 0.14%)</title><rect x="61.9799%" y="405" width="0.1360%" height="15" fill="rgb(213,87,29)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.14%)</title><rect x="61.9799%" y="389" width="0.1360%" height="15" fill="rgb(205,151,52)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.14%)</title><rect x="61.9799%" y="373" width="0.1360%" height="15" fill="rgb(253,215,39)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.14%)</title><rect x="61.9799%" y="357" width="0.1360%" height="15" fill="rgb(221,220,41)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (5 samples, 0.14%)</title><rect x="61.9799%" y="341" width="0.1360%" height="15" fill="rgb(218,133,21)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (5 samples, 0.14%)</title><rect x="61.9799%" y="325" width="0.1360%" height="15" fill="rgb(221,193,43)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.14%)</title><rect x="61.9799%" y="309" width="0.1360%" height="15" fill="rgb(240,128,52)" fg:x="2279" fg:w="5"/><text x="62.2299%" y="319.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::collapse_processing (7 samples, 0.19%)</title><rect x="62.1159%" y="469" width="0.1904%" height="15" fill="rgb(253,114,12)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="479.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (7 samples, 0.19%)</title><rect x="62.1159%" y="453" width="0.1904%" height="15" fill="rgb(215,223,47)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (7 samples, 0.19%)</title><rect x="62.1159%" y="437" width="0.1904%" height="15" fill="rgb(248,225,23)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.19%)</title><rect x="62.1159%" y="421" width="0.1904%" height="15" fill="rgb(250,108,0)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.19%)</title><rect x="62.1159%" y="405" width="0.1904%" height="15" fill="rgb(228,208,7)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.19%)</title><rect x="62.1159%" y="389" width="0.1904%" height="15" fill="rgb(244,45,10)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.19%)</title><rect x="62.1159%" y="373" width="0.1904%" height="15" fill="rgb(207,125,25)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.19%)</title><rect x="62.1159%" y="357" width="0.1904%" height="15" fill="rgb(210,195,18)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (7 samples, 0.19%)</title><rect x="62.1159%" y="341" width="0.1904%" height="15" fill="rgb(249,80,12)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="351.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (7 samples, 0.19%)</title><rect x="62.1159%" y="325" width="0.1904%" height="15" fill="rgb(221,65,9)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.19%)</title><rect x="62.1159%" y="309" width="0.1904%" height="15" fill="rgb(235,49,36)" fg:x="2284" fg:w="7"/><text x="62.3659%" y="319.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (3 samples, 0.08%)</title><rect x="62.4694%" y="453" width="0.0816%" height="15" fill="rgb(225,32,20)" fg:x="2297" fg:w="3"/><text x="62.7194%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (1 samples, 0.03%)</title><rect x="62.5238%" y="437" width="0.0272%" height="15" fill="rgb(215,141,46)" fg:x="2299" fg:w="1"/><text x="62.7738%" y="447.50"></text></g><g><title>fastiron::particles::load_particle::load_particle (2 samples, 0.05%)</title><rect x="62.5510%" y="453" width="0.0544%" height="15" fill="rgb(250,160,47)" fg:x="2300" fg:w="2"/><text x="62.8010%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::get_base_particle (2 samples, 0.05%)</title><rect x="62.5510%" y="437" width="0.0544%" height="15" fill="rgb(216,222,40)" fg:x="2300" fg:w="2"/><text x="62.8010%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.05%)</title><rect x="62.5510%" y="421" width="0.0544%" height="15" fill="rgb(234,217,39)" fg:x="2300" fg:w="2"/><text x="62.8010%" y="431.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::put_particle (1 samples, 0.03%)</title><rect x="62.6054%" y="453" width="0.0272%" height="15" fill="rgb(207,178,40)" fg:x="2302" fg:w="1"/><text x="62.8554%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (4 samples, 0.11%)</title><rect x="62.6326%" y="437" width="0.1088%" height="15" fill="rgb(221,136,13)" fg:x="2303" fg:w="4"/><text x="62.8826%" y="447.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed::{{closure}} (3 samples, 0.08%)</title><rect x="62.6598%" y="421" width="0.0816%" height="15" fill="rgb(249,199,10)" fg:x="2304" fg:w="3"/><text x="62.9098%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.08%)</title><rect x="62.6598%" y="405" width="0.0816%" height="15" fill="rgb(249,222,13)" fg:x="2304" fg:w="3"/><text x="62.9098%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.08%)</title><rect x="62.6598%" y="389" width="0.0816%" height="15" fill="rgb(244,185,38)" fg:x="2304" fg:w="3"/><text x="62.9098%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.14%)</title><rect x="62.7414%" y="341" width="0.1360%" height="15" fill="rgb(236,202,9)" fg:x="2307" fg:w="5"/><text x="62.9914%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (26 samples, 0.71%)</title><rect x="62.8773%" y="325" width="0.7071%" height="15" fill="rgb(250,229,37)" fg:x="2312" fg:w="26"/><text x="63.1273%" y="335.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size::{{closure}} (26 samples, 0.71%)</title><rect x="62.8773%" y="309" width="0.7071%" height="15" fill="rgb(206,174,23)" fg:x="2312" fg:w="26"/><text x="63.1273%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (26 samples, 0.71%)</title><rect x="62.8773%" y="293" width="0.7071%" height="15" fill="rgb(211,33,43)" fg:x="2312" fg:w="26"/><text x="63.1273%" y="303.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::set_as_processed (39 samples, 1.06%)</title><rect x="62.6326%" y="453" width="1.0606%" height="15" fill="rgb(245,58,50)" fg:x="2303" fg:w="39"/><text x="62.8826%" y="463.50"></text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::size (35 samples, 0.95%)</title><rect x="62.7414%" y="437" width="0.9519%" height="15" fill="rgb(244,68,36)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (35 samples, 0.95%)</title><rect x="62.7414%" y="421" width="0.9519%" height="15" fill="rgb(232,229,15)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (35 samples, 0.95%)</title><rect x="62.7414%" y="405" width="0.9519%" height="15" fill="rgb(254,30,23)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (35 samples, 0.95%)</title><rect x="62.7414%" y="389" width="0.9519%" height="15" fill="rgb(235,160,14)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.95%)</title><rect x="62.7414%" y="373" width="0.9519%" height="15" fill="rgb(212,155,44)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 0.95%)</title><rect x="62.7414%" y="357" width="0.9519%" height="15" fill="rgb(226,2,50)" fg:x="2307" fg:w="35"/><text x="62.9914%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (30 samples, 0.82%)</title><rect x="62.8773%" y="341" width="0.8159%" height="15" fill="rgb(234,177,6)" fg:x="2312" fg:w="30"/><text x="63.1273%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (4 samples, 0.11%)</title><rect x="63.5844%" y="325" width="0.1088%" height="15" fill="rgb(217,24,9)" fg:x="2338" fg:w="4"/><text x="63.8344%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.05%)</title><rect x="63.7204%" y="437" width="0.0544%" height="15" fill="rgb(220,13,46)" fg:x="2343" fg:w="2"/><text x="63.9704%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.05%)</title><rect x="64.1828%" y="421" width="0.0544%" height="15" fill="rgb(239,221,27)" fg:x="2360" fg:w="2"/><text x="64.4328%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="64.1828%" y="405" width="0.0544%" height="15" fill="rgb(222,198,25)" fg:x="2360" fg:w="2"/><text x="64.4328%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="64.1828%" y="389" width="0.0544%" height="15" fill="rgb(211,99,13)" fg:x="2360" fg:w="2"/><text x="64.4328%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::SubAssign&gt;::sub_assign (51 samples, 1.39%)</title><rect x="64.2371%" y="421" width="1.3870%" height="15" fill="rgb(232,111,31)" fg:x="2362" fg:w="51"/><text x="64.4871%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_sign_negative (41 samples, 1.12%)</title><rect x="65.6242%" y="421" width="1.1150%" height="15" fill="rgb(245,82,37)" fg:x="2413" fg:w="41"/><text x="65.8742%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_sign_negative (41 samples, 1.12%)</title><rect x="65.6242%" y="405" width="1.1150%" height="15" fill="rgb(227,149,46)" fg:x="2413" fg:w="41"/><text x="65.8742%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="66.7936%" y="389" width="0.0272%" height="15" fill="rgb(218,36,50)" fg:x="2456" fg:w="1"/><text x="67.0436%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="66.7936%" y="373" width="0.0272%" height="15" fill="rgb(226,80,48)" fg:x="2456" fg:w="1"/><text x="67.0436%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.19%)</title><rect x="66.7392%" y="421" width="0.1904%" height="15" fill="rgb(238,224,15)" fg:x="2454" fg:w="7"/><text x="66.9892%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.19%)</title><rect x="66.7392%" y="405" width="0.1904%" height="15" fill="rgb(241,136,10)" fg:x="2454" fg:w="7"/><text x="66.9892%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.11%)</title><rect x="66.8208%" y="389" width="0.1088%" height="15" fill="rgb(208,32,45)" fg:x="2457" fg:w="4"/><text x="67.0708%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="66.9568%" y="293" width="0.0272%" height="15" fill="rgb(207,135,9)" fg:x="2462" fg:w="1"/><text x="67.2068%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="66.9296%" y="373" width="0.0816%" height="15" fill="rgb(206,86,44)" fg:x="2461" fg:w="3"/><text x="67.1796%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="66.9296%" y="357" width="0.0816%" height="15" fill="rgb(245,177,15)" fg:x="2461" fg:w="3"/><text x="67.1796%" y="367.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.08%)</title><rect x="66.9296%" y="341" width="0.0816%" height="15" fill="rgb(206,64,50)" fg:x="2461" fg:w="3"/><text x="67.1796%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.08%)</title><rect x="66.9296%" y="325" width="0.0816%" height="15" fill="rgb(234,36,40)" fg:x="2461" fg:w="3"/><text x="67.1796%" y="335.50"></text></g><g><title>__GI___libc_free (3 samples, 0.08%)</title><rect x="66.9296%" y="309" width="0.0816%" height="15" fill="rgb(213,64,8)" fg:x="2461" fg:w="3"/><text x="67.1796%" y="319.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="66.9840%" y="293" width="0.0272%" height="15" fill="rgb(210,75,36)" fg:x="2463" fg:w="1"/><text x="67.2340%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (4 samples, 0.11%)</title><rect x="66.9296%" y="421" width="0.1088%" height="15" fill="rgb(229,88,21)" fg:x="2461" fg:w="4"/><text x="67.1796%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (4 samples, 0.11%)</title><rect x="66.9296%" y="405" width="0.1088%" height="15" fill="rgb(252,204,47)" fg:x="2461" fg:w="4"/><text x="67.1796%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="66.9296%" y="389" width="0.1088%" height="15" fill="rgb(208,77,27)" fg:x="2461" fg:w="4"/><text x="67.1796%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="67.0112%" y="373" width="0.0272%" height="15" fill="rgb(221,76,26)" fg:x="2464" fg:w="1"/><text x="67.2612%" y="383.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_energy_groups (5 samples, 0.14%)</title><rect x="67.0383%" y="421" width="0.1360%" height="15" fill="rgb(225,139,18)" fg:x="2465" fg:w="5"/><text x="67.2883%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.1471%" y="405" width="0.0272%" height="15" fill="rgb(230,137,11)" fg:x="2469" fg:w="1"/><text x="67.3971%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="67.1471%" y="389" width="0.0272%" height="15" fill="rgb(212,28,1)" fg:x="2469" fg:w="1"/><text x="67.3971%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.1471%" y="373" width="0.0272%" height="15" fill="rgb(248,164,17)" fg:x="2469" fg:w="1"/><text x="67.3971%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.2015%" y="405" width="0.0272%" height="15" fill="rgb(222,171,42)" fg:x="2471" fg:w="1"/><text x="67.4515%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="67.2015%" y="389" width="0.0272%" height="15" fill="rgb(243,84,45)" fg:x="2471" fg:w="1"/><text x="67.4515%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="67.2015%" y="373" width="0.0272%" height="15" fill="rgb(252,49,23)" fg:x="2471" fg:w="1"/><text x="67.4515%" y="383.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_number_reactions (3 samples, 0.08%)</title><rect x="67.1743%" y="421" width="0.0816%" height="15" fill="rgb(215,19,7)" fg:x="2470" fg:w="3"/><text x="67.4243%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="67.2287%" y="405" width="0.0272%" height="15" fill="rgb(238,81,41)" fg:x="2472" fg:w="1"/><text x="67.4787%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="67.2559%" y="405" width="0.0272%" height="15" fill="rgb(210,199,37)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="67.2559%" y="389" width="0.0272%" height="15" fill="rgb(244,192,49)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="67.2559%" y="373" width="0.0272%" height="15" fill="rgb(226,211,11)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="67.2559%" y="357" width="0.0272%" height="15" fill="rgb(236,162,54)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="67.2559%" y="341" width="0.0272%" height="15" fill="rgb(220,229,9)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="67.2559%" y="325" width="0.0272%" height="15" fill="rgb(250,87,22)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="67.2559%" y="309" width="0.0272%" height="15" fill="rgb(239,43,17)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="67.2559%" y="293" width="0.0272%" height="15" fill="rgb(231,177,25)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="67.2559%" y="277" width="0.0272%" height="15" fill="rgb(219,179,1)" fg:x="2473" fg:w="1"/><text x="67.5059%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="67.4191%" y="341" width="0.0272%" height="15" fill="rgb(238,219,53)" fg:x="2479" fg:w="1"/><text x="67.6691%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="67.4191%" y="325" width="0.0272%" height="15" fill="rgb(232,167,36)" fg:x="2479" fg:w="1"/><text x="67.6691%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="67.4191%" y="309" width="0.0272%" height="15" fill="rgb(244,19,51)" fg:x="2479" fg:w="1"/><text x="67.6691%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="67.4191%" y="293" width="0.0272%" height="15" fill="rgb(224,6,22)" fg:x="2479" fg:w="1"/><text x="67.6691%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="67.4191%" y="277" width="0.0272%" height="15" fill="rgb(224,145,5)" fg:x="2479" fg:w="1"/><text x="67.6691%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.38%)</title><rect x="67.3647%" y="357" width="0.3807%" height="15" fill="rgb(234,130,49)" fg:x="2477" fg:w="14"/><text x="67.6147%" y="367.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.30%)</title><rect x="67.4463%" y="341" width="0.2992%" height="15" fill="rgb(254,6,2)" fg:x="2480" fg:w="11"/><text x="67.6963%" y="351.50"></text></g><g><title>tcache_get (5 samples, 0.14%)</title><rect x="67.6095%" y="325" width="0.1360%" height="15" fill="rgb(208,96,46)" fg:x="2486" fg:w="5"/><text x="67.8595%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.44%)</title><rect x="67.3375%" y="389" width="0.4351%" height="15" fill="rgb(239,3,39)" fg:x="2476" fg:w="16"/><text x="67.5875%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.44%)</title><rect x="67.3375%" y="373" width="0.4351%" height="15" fill="rgb(233,210,1)" fg:x="2476" fg:w="16"/><text x="67.5875%" y="383.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="67.7454%" y="357" width="0.0272%" height="15" fill="rgb(244,137,37)" fg:x="2491" fg:w="1"/><text x="67.9954%" y="367.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="67.7454%" y="341" width="0.0272%" height="15" fill="rgb(240,136,2)" fg:x="2491" fg:w="1"/><text x="67.9954%" y="351.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="67.7454%" y="325" width="0.0272%" height="15" fill="rgb(239,18,37)" fg:x="2491" fg:w="1"/><text x="67.9954%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.52%)</title><rect x="67.2831%" y="405" width="0.5167%" height="15" fill="rgb(218,185,22)" fg:x="2474" fg:w="19"/><text x="67.5331%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="67.7726%" y="389" width="0.0272%" height="15" fill="rgb(225,218,4)" fg:x="2492" fg:w="1"/><text x="68.0226%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="67.7998%" y="405" width="0.0544%" height="15" fill="rgb(230,182,32)" fg:x="2493" fg:w="2"/><text x="68.0498%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="67.9086%" y="245" width="0.0544%" height="15" fill="rgb(242,56,43)" fg:x="2497" fg:w="2"/><text x="68.1586%" y="255.50"></text></g><g><title>checked_request2size (1 samples, 0.03%)</title><rect x="67.9358%" y="229" width="0.0272%" height="15" fill="rgb(233,99,24)" fg:x="2498" fg:w="1"/><text x="68.1858%" y="239.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.14%)</title><rect x="67.8542%" y="405" width="0.1360%" height="15" fill="rgb(234,209,42)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="415.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.14%)</title><rect x="67.8542%" y="389" width="0.1360%" height="15" fill="rgb(227,7,12)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (5 samples, 0.14%)</title><rect x="67.8542%" y="373" width="0.1360%" height="15" fill="rgb(245,203,43)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.14%)</title><rect x="67.8542%" y="357" width="0.1360%" height="15" fill="rgb(238,205,33)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (5 samples, 0.14%)</title><rect x="67.8542%" y="341" width="0.1360%" height="15" fill="rgb(231,56,7)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.14%)</title><rect x="67.8542%" y="325" width="0.1360%" height="15" fill="rgb(244,186,29)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="335.50"></text></g><g><title>alloc::alloc::alloc_zeroed (5 samples, 0.14%)</title><rect x="67.8542%" y="309" width="0.1360%" height="15" fill="rgb(234,111,31)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="319.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.14%)</title><rect x="67.8542%" y="293" width="0.1360%" height="15" fill="rgb(241,149,10)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (5 samples, 0.14%)</title><rect x="67.8542%" y="277" width="0.1360%" height="15" fill="rgb(249,206,44)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="287.50"></text></g><g><title>__libc_calloc (5 samples, 0.14%)</title><rect x="67.8542%" y="261" width="0.1360%" height="15" fill="rgb(251,153,30)" fg:x="2495" fg:w="5"/><text x="68.1042%" y="271.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="67.9630%" y="245" width="0.0272%" height="15" fill="rgb(239,152,38)" fg:x="2499" fg:w="1"/><text x="68.2130%" y="255.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::sample_collision (28 samples, 0.76%)</title><rect x="67.2559%" y="421" width="0.7615%" height="15" fill="rgb(249,139,47)" fg:x="2473" fg:w="28"/><text x="67.5059%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (1 samples, 0.03%)</title><rect x="67.9902%" y="405" width="0.0272%" height="15" fill="rgb(244,64,35)" fg:x="2500" fg:w="1"/><text x="68.2402%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.49%)</title><rect x="68.5341%" y="373" width="0.4895%" height="15" fill="rgb(216,46,15)" fg:x="2520" fg:w="18"/><text x="68.7841%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (111 samples, 3.02%)</title><rect x="68.0446%" y="389" width="3.0188%" height="15" fill="rgb(250,74,19)" fg:x="2502" fg:w="111"/><text x="68.2946%" y="399.50">&lt;co..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::push_particle::{{closure}} (75 samples, 2.04%)</title><rect x="69.0237%" y="373" width="2.0397%" height="15" fill="rgb(249,42,33)" fg:x="2538" fg:w="75"/><text x="69.2737%" y="383.50">f..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (75 samples, 2.04%)</title><rect x="69.0237%" y="357" width="2.0397%" height="15" fill="rgb(242,149,17)" fg:x="2538" fg:w="75"/><text x="69.2737%" y="367.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (75 samples, 2.04%)</title><rect x="69.0237%" y="341" width="2.0397%" height="15" fill="rgb(244,29,21)" fg:x="2538" fg:w="75"/><text x="69.2737%" y="351.50">c..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::push_particle (114 samples, 3.10%)</title><rect x="68.0446%" y="405" width="3.1004%" height="15" fill="rgb(220,130,37)" fg:x="2502" fg:w="114"/><text x="68.2946%" y="415.50">fas..</text></g><g><title>fastiron::particles::mc_base_particle::MCBaseParticle&lt;T&gt;::new (3 samples, 0.08%)</title><rect x="71.0634%" y="389" width="0.0816%" height="15" fill="rgb(211,67,2)" fg:x="2613" fg:w="3"/><text x="71.3134%" y="399.50"></text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_extra_particle (116 samples, 3.15%)</title><rect x="68.0174%" y="421" width="3.1547%" height="15" fill="rgb(235,68,52)" fg:x="2501" fg:w="116"/><text x="68.2674%" y="431.50">fas..</text></g><g><title>fastiron::particles::particle_vault::ParticleVault&lt;T&gt;::reserve (1 samples, 0.03%)</title><rect x="71.1450%" y="405" width="0.0272%" height="15" fill="rgb(246,142,3)" fg:x="2616" fg:w="1"/><text x="71.3950%" y="415.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.03%)</title><rect x="71.1450%" y="389" width="0.0272%" height="15" fill="rgb(241,25,7)" fg:x="2616" fg:w="1"/><text x="71.3950%" y="399.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.03%)</title><rect x="71.1450%" y="373" width="0.0272%" height="15" fill="rgb(242,119,39)" fg:x="2616" fg:w="1"/><text x="71.3950%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="71.1450%" y="357" width="0.0272%" height="15" fill="rgb(241,98,45)" fg:x="2616" fg:w="1"/><text x="71.3950%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="71.1450%" y="341" width="0.0272%" height="15" fill="rgb(254,28,30)" fg:x="2616" fg:w="1"/><text x="71.3950%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="71.1722%" y="405" width="0.0272%" height="15" fill="rgb(241,142,54)" fg:x="2617" fg:w="1"/><text x="71.4222%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="71.1993%" y="405" width="0.0272%" height="15" fill="rgb(222,85,15)" fg:x="2618" fg:w="1"/><text x="71.4493%" y="415.50"></text></g><g><title>[libm.so.6] (1 samples, 0.03%)</title><rect x="71.2265%" y="373" width="0.0272%" height="15" fill="rgb(210,85,47)" fg:x="2619" fg:w="1"/><text x="71.4765%" y="383.50"></text></g><g><title>do_cos (5 samples, 0.14%)</title><rect x="71.3353%" y="357" width="0.1360%" height="15" fill="rgb(224,206,25)" fg:x="2623" fg:w="5"/><text x="71.5853%" y="367.50"></text></g><g><title>do_sin (9 samples, 0.24%)</title><rect x="71.4713%" y="357" width="0.2448%" height="15" fill="rgb(243,201,19)" fg:x="2628" fg:w="9"/><text x="71.7213%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::cos (19 samples, 0.52%)</title><rect x="71.2265%" y="405" width="0.5167%" height="15" fill="rgb(236,59,4)" fg:x="2619" fg:w="19"/><text x="71.4765%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (19 samples, 0.52%)</title><rect x="71.2265%" y="389" width="0.5167%" height="15" fill="rgb(254,179,45)" fg:x="2619" fg:w="19"/><text x="71.4765%" y="399.50"></text></g><g><title>__sincos (18 samples, 0.49%)</title><rect x="71.2537%" y="373" width="0.4895%" height="15" fill="rgb(226,14,10)" fg:x="2620" fg:w="18"/><text x="71.5037%" y="383.50"></text></g><g><title>reduce_sincos (1 samples, 0.03%)</title><rect x="71.7161%" y="357" width="0.0272%" height="15" fill="rgb(244,27,41)" fg:x="2637" fg:w="1"/><text x="71.9661%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::ln (4 samples, 0.11%)</title><rect x="71.7433%" y="405" width="0.1088%" height="15" fill="rgb(235,35,32)" fg:x="2638" fg:w="4"/><text x="71.9933%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln (4 samples, 0.11%)</title><rect x="71.7433%" y="389" width="0.1088%" height="15" fill="rgb(218,68,31)" fg:x="2638" fg:w="4"/><text x="71.9933%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::log_wrapper (4 samples, 0.11%)</title><rect x="71.7433%" y="373" width="0.1088%" height="15" fill="rgb(207,120,37)" fg:x="2638" fg:w="4"/><text x="71.9933%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::ln::{{closure}} (4 samples, 0.11%)</title><rect x="71.7433%" y="357" width="0.1088%" height="15" fill="rgb(227,98,0)" fg:x="2638" fg:w="4"/><text x="71.9933%" y="367.50"></text></g><g><title>__ieee754_log_fma (4 samples, 0.11%)</title><rect x="71.7433%" y="341" width="0.1088%" height="15" fill="rgb(207,7,3)" fg:x="2638" fg:w="4"/><text x="71.9933%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (1 samples, 0.03%)</title><rect x="71.8521%" y="405" width="0.0272%" height="15" fill="rgb(206,98,19)" fg:x="2642" fg:w="1"/><text x="72.1021%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.03%)</title><rect x="71.8521%" y="389" width="0.0272%" height="15" fill="rgb(217,5,26)" fg:x="2642" fg:w="1"/><text x="72.1021%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="71.9064%" y="389" width="0.0272%" height="15" fill="rgb(235,190,38)" fg:x="2644" fg:w="1"/><text x="72.1564%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (2 samples, 0.05%)</title><rect x="71.9336%" y="389" width="0.0544%" height="15" fill="rgb(247,86,24)" fg:x="2645" fg:w="2"/><text x="72.1836%" y="399.50"></text></g><g><title>fastiron::data::direction_cosine::DirectionCosine&lt;T&gt;::rotate_3d_vector (5 samples, 0.14%)</title><rect x="71.8792%" y="405" width="0.1360%" height="15" fill="rgb(205,101,16)" fg:x="2643" fg:w="5"/><text x="72.1292%" y="415.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (1 samples, 0.03%)</title><rect x="71.9880%" y="389" width="0.0272%" height="15" fill="rgb(246,168,33)" fg:x="2647" fg:w="1"/><text x="72.2380%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.03%)</title><rect x="71.9880%" y="373" width="0.0272%" height="15" fill="rgb(231,114,1)" fg:x="2647" fg:w="1"/><text x="72.2380%" y="383.50"></text></g><g><title>fastiron::simulation::collision_event::update_trajectory (33 samples, 0.90%)</title><rect x="71.1722%" y="421" width="0.8975%" height="15" fill="rgb(207,184,53)" fg:x="2617" fg:w="33"/><text x="71.4222%" y="431.50"></text></g><g><title>fastiron::utils::mc_rng_state::rng_sample (2 samples, 0.05%)</title><rect x="72.0152%" y="405" width="0.0544%" height="15" fill="rgb(224,95,51)" fg:x="2648" fg:w="2"/><text x="72.2652%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (2 samples, 0.05%)</title><rect x="72.0152%" y="389" width="0.0544%" height="15" fill="rgb(212,188,45)" fg:x="2648" fg:w="2"/><text x="72.2652%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.27%)</title><rect x="74.0277%" y="405" width="0.2720%" height="15" fill="rgb(223,154,38)" fg:x="2722" fg:w="10"/><text x="74.2777%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.27%)</title><rect x="74.0277%" y="389" width="0.2720%" height="15" fill="rgb(251,22,52)" fg:x="2722" fg:w="10"/><text x="74.2777%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.27%)</title><rect x="74.0277%" y="373" width="0.2720%" height="15" fill="rgb(229,209,22)" fg:x="2722" fg:w="10"/><text x="74.2777%" y="383.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (152 samples, 4.13%)</title><rect x="74.2997%" y="405" width="4.1338%" height="15" fill="rgb(234,138,34)" fg:x="2732" fg:w="152"/><text x="74.5497%" y="415.50">&lt;f64 ..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (23 samples, 0.63%)</title><rect x="78.4335%" y="405" width="0.6255%" height="15" fill="rgb(212,95,11)" fg:x="2884" fg:w="23"/><text x="78.6835%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.41%)</title><rect x="79.9293%" y="389" width="0.4079%" height="15" fill="rgb(240,179,47)" fg:x="2939" fg:w="15"/><text x="80.1793%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.41%)</title><rect x="79.9293%" y="373" width="0.4079%" height="15" fill="rgb(240,163,11)" fg:x="2939" fg:w="15"/><text x="80.1793%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.41%)</title><rect x="79.9293%" y="357" width="0.4079%" height="15" fill="rgb(236,37,12)" fg:x="2939" fg:w="15"/><text x="80.1793%" y="367.50"></text></g><g><title>fastiron::simulation::collision_event::collision_event (612 samples, 16.64%)</title><rect x="63.7748%" y="437" width="16.6440%" height="15" fill="rgb(232,164,16)" fg:x="2345" fg:w="612"/><text x="64.0248%" y="447.50">fastiron::simulation::coll..</text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_cross_section (307 samples, 8.35%)</title><rect x="72.0696%" y="421" width="8.3492%" height="15" fill="rgb(244,205,15)" fg:x="2650" fg:w="307"/><text x="72.3196%" y="431.50">fastiron::si..</text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_reaction_cross_section (50 samples, 1.36%)</title><rect x="79.0590%" y="405" width="1.3598%" height="15" fill="rgb(223,117,47)" fg:x="2907" fg:w="50"/><text x="79.3090%" y="415.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::get_cross_section (3 samples, 0.08%)</title><rect x="80.3372%" y="389" width="0.0816%" height="15" fill="rgb(244,107,35)" fg:x="2954" fg:w="3"/><text x="80.5872%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.08%)</title><rect x="80.3372%" y="373" width="0.0816%" height="15" fill="rgb(205,140,8)" fg:x="2954" fg:w="3"/><text x="80.5872%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.08%)</title><rect x="80.3372%" y="357" width="0.0816%" height="15" fill="rgb(228,84,46)" fg:x="2954" fg:w="3"/><text x="80.5872%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.08%)</title><rect x="80.3372%" y="341" width="0.0816%" height="15" fill="rgb(254,188,9)" fg:x="2954" fg:w="3"/><text x="80.5872%" y="351.50"></text></g><g><title>fastiron::simulation::mc_facet_crossing_event::facet_crossing_event (1 samples, 0.03%)</title><rect x="80.4188%" y="437" width="0.0272%" height="15" fill="rgb(206,112,54)" fg:x="2957" fg:w="1"/><text x="80.6688%" y="447.50"></text></g><g><title>[libc.so.6] (11 samples, 0.30%)</title><rect x="81.3707%" y="421" width="0.2992%" height="15" fill="rgb(216,84,49)" fg:x="2992" fg:w="11"/><text x="81.6207%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for f64&gt;::eq (2 samples, 0.05%)</title><rect x="81.6698%" y="421" width="0.0544%" height="15" fill="rgb(214,194,35)" fg:x="3003" fg:w="2"/><text x="81.9198%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.05%)</title><rect x="82.2682%" y="405" width="0.0544%" height="15" fill="rgb(249,28,3)" fg:x="3025" fg:w="2"/><text x="82.5182%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.05%)</title><rect x="82.2682%" y="389" width="0.0544%" height="15" fill="rgb(222,56,52)" fg:x="3025" fg:w="2"/><text x="82.5182%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.05%)</title><rect x="82.2682%" y="373" width="0.0544%" height="15" fill="rgb(245,217,50)" fg:x="3025" fg:w="2"/><text x="82.5182%" y="383.50"></text></g><g><title>fastiron::data::tallies::Tallies&lt;T&gt;::tally_scalar_flux (86 samples, 2.34%)</title><rect x="81.7242%" y="421" width="2.3389%" height="15" fill="rgb(213,201,24)" fg:x="3005" fg:w="86"/><text x="81.9742%" y="431.50">f..</text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (64 samples, 1.74%)</title><rect x="82.3225%" y="405" width="1.7405%" height="15" fill="rgb(248,116,28)" fg:x="3027" fg:w="64"/><text x="82.5725%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="85.5045%" y="405" width="0.0272%" height="15" fill="rgb(219,72,43)" fg:x="3144" fg:w="1"/><text x="85.7545%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="85.5045%" y="389" width="0.0272%" height="15" fill="rgb(209,138,14)" fg:x="3144" fg:w="1"/><text x="85.7545%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="85.5045%" y="373" width="0.0272%" height="15" fill="rgb(222,18,33)" fg:x="3144" fg:w="1"/><text x="85.7545%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="85.5317%" y="405" width="0.0272%" height="15" fill="rgb(213,199,7)" fg:x="3145" fg:w="1"/><text x="85.7817%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (1 samples, 0.03%)</title><rect x="85.5589%" y="405" width="0.0272%" height="15" fill="rgb(250,110,10)" fg:x="3146" fg:w="1"/><text x="85.8089%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.11%)</title><rect x="85.5861%" y="341" width="0.1088%" height="15" fill="rgb(248,123,6)" fg:x="3147" fg:w="4"/><text x="85.8361%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.08%)</title><rect x="85.6949%" y="325" width="0.0816%" height="15" fill="rgb(206,91,31)" fg:x="3151" fg:w="3"/><text x="85.9449%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="85.7764%" y="277" width="0.0544%" height="15" fill="rgb(211,154,13)" fg:x="3154" fg:w="2"/><text x="86.0264%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="85.7764%" y="261" width="0.0544%" height="15" fill="rgb(225,148,7)" fg:x="3154" fg:w="2"/><text x="86.0264%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.05%)</title><rect x="85.7764%" y="245" width="0.0544%" height="15" fill="rgb(220,160,43)" fg:x="3154" fg:w="2"/><text x="86.0264%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (15 samples, 0.41%)</title><rect x="86.0484%" y="245" width="0.4079%" height="15" fill="rgb(213,52,39)" fg:x="3164" fg:w="15"/><text x="86.2984%" y="255.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section (91 samples, 2.47%)</title><rect x="84.0631%" y="421" width="2.4748%" height="15" fill="rgb(243,137,7)" fg:x="3091" fg:w="91"/><text x="84.3131%" y="431.50">fa..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 0.95%)</title><rect x="85.5861%" y="405" width="0.9519%" height="15" fill="rgb(230,79,13)" fg:x="3147" fg:w="35"/><text x="85.8361%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 0.95%)</title><rect x="85.5861%" y="389" width="0.9519%" height="15" fill="rgb(247,105,23)" fg:x="3147" fg:w="35"/><text x="85.8361%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (35 samples, 0.95%)</title><rect x="85.5861%" y="373" width="0.9519%" height="15" fill="rgb(223,179,41)" fg:x="3147" fg:w="35"/><text x="85.8361%" y="383.50"></text></g><g><title>fastiron::simulation::macro_cross_section::weighted_macroscopic_cross_section::{{closure}} (35 samples, 0.95%)</title><rect x="85.5861%" y="357" width="0.9519%" height="15" fill="rgb(218,9,34)" fg:x="3147" fg:w="35"/><text x="85.8361%" y="367.50"></text></g><g><title>fastiron::simulation::macro_cross_section::macroscopic_total_cross_section (31 samples, 0.84%)</title><rect x="85.6949%" y="341" width="0.8431%" height="15" fill="rgb(222,106,8)" fg:x="3151" fg:w="31"/><text x="85.9449%" y="351.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section (28 samples, 0.76%)</title><rect x="85.7764%" y="325" width="0.7615%" height="15" fill="rgb(211,220,0)" fg:x="3154" fg:w="28"/><text x="86.0264%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 0.76%)</title><rect x="85.7764%" y="309" width="0.7615%" height="15" fill="rgb(229,52,16)" fg:x="3154" fg:w="28"/><text x="86.0264%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.76%)</title><rect x="85.7764%" y="293" width="0.7615%" height="15" fill="rgb(212,155,18)" fg:x="3154" fg:w="28"/><text x="86.0264%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.71%)</title><rect x="85.8308%" y="277" width="0.7071%" height="15" fill="rgb(242,21,14)" fg:x="3156" fg:w="26"/><text x="86.0808%" y="287.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearData&lt;T&gt;::get_total_cross_section::{{closure}} (26 samples, 0.71%)</title><rect x="85.8308%" y="261" width="0.7071%" height="15" fill="rgb(222,19,48)" fg:x="3156" fg:w="26"/><text x="86.0808%" y="271.50"></text></g><g><title>fastiron::data::nuclear_data::NuclearDataReaction&lt;T&gt;::get_cross_section (3 samples, 0.08%)</title><rect x="86.4564%" y="245" width="0.0816%" height="15" fill="rgb(232,45,27)" fg:x="3179" fg:w="3"/><text x="86.7064%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.08%)</title><rect x="86.4564%" y="229" width="0.0816%" height="15" fill="rgb(249,103,42)" fg:x="3179" fg:w="3"/><text x="86.7064%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.08%)</title><rect x="86.4564%" y="213" width="0.0816%" height="15" fill="rgb(246,81,33)" fg:x="3179" fg:w="3"/><text x="86.7064%" y="223.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.08%)</title><rect x="86.4564%" y="197" width="0.0816%" height="15" fill="rgb(252,33,42)" fg:x="3179" fg:w="3"/><text x="86.7064%" y="207.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min (3 samples, 0.08%)</title><rect x="86.5379%" y="421" width="0.0816%" height="15" fill="rgb(209,212,41)" fg:x="3182" fg:w="3"/><text x="86.7879%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.08%)</title><rect x="86.5379%" y="405" width="0.0816%" height="15" fill="rgb(207,154,6)" fg:x="3182" fg:w="3"/><text x="86.7879%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.08%)</title><rect x="86.5379%" y="389" width="0.0816%" height="15" fill="rgb(223,64,47)" fg:x="3182" fg:w="3"/><text x="86.7879%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.08%)</title><rect x="86.5379%" y="373" width="0.0816%" height="15" fill="rgb(211,161,38)" fg:x="3182" fg:w="3"/><text x="86.7879%" y="383.50"></text></g><g><title>fastiron::simulation::mc_segment_outcome::find_min::{{closure}} (3 samples, 0.08%)</title><rect x="86.5379%" y="357" width="0.0816%" height="15" fill="rgb(219,138,40)" fg:x="3182" fg:w="3"/><text x="86.7879%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (1 samples, 0.03%)</title><rect x="86.5923%" y="341" width="0.0272%" height="15" fill="rgb(241,228,46)" fg:x="3184" fg:w="1"/><text x="86.8423%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.33%)</title><rect x="86.6195%" y="357" width="0.3264%" height="15" fill="rgb(223,209,38)" fg:x="3185" fg:w="12"/><text x="86.8695%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.33%)</title><rect x="86.6195%" y="341" width="0.3264%" height="15" fill="rgb(236,164,45)" fg:x="3185" fg:w="12"/><text x="86.8695%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12 samples, 0.33%)</title><rect x="86.6195%" y="325" width="0.3264%" height="15" fill="rgb(231,15,5)" fg:x="3185" fg:w="12"/><text x="86.8695%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.30%)</title><rect x="89.6383%" y="325" width="0.2992%" height="15" fill="rgb(252,35,15)" fg:x="3296" fg:w="11"/><text x="89.8883%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.30%)</title><rect x="89.6383%" y="309" width="0.2992%" height="15" fill="rgb(248,181,18)" fg:x="3296" fg:w="11"/><text x="89.8883%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.30%)</title><rect x="89.6383%" y="293" width="0.2992%" height="15" fill="rgb(233,39,42)" fg:x="3296" fg:w="11"/><text x="89.8883%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (18 samples, 0.49%)</title><rect x="89.9374%" y="325" width="0.4895%" height="15" fill="rgb(238,110,33)" fg:x="3307" fg:w="18"/><text x="90.1874%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (6 samples, 0.16%)</title><rect x="90.4270%" y="325" width="0.1632%" height="15" fill="rgb(233,195,10)" fg:x="3325" fg:w="6"/><text x="90.6770%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (4 samples, 0.11%)</title><rect x="90.5902%" y="325" width="0.1088%" height="15" fill="rgb(254,105,3)" fg:x="3331" fg:w="4"/><text x="90.8402%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (129 samples, 3.51%)</title><rect x="90.6989%" y="325" width="3.5083%" height="15" fill="rgb(221,225,9)" fg:x="3335" fg:w="129"/><text x="90.9489%" y="335.50">cor..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (30 samples, 0.82%)</title><rect x="96.1110%" y="309" width="0.8159%" height="15" fill="rgb(224,227,45)" fg:x="3534" fg:w="30"/><text x="96.3610%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (25 samples, 0.68%)</title><rect x="96.9268%" y="309" width="0.6799%" height="15" fill="rgb(229,198,43)" fg:x="3564" fg:w="25"/><text x="97.1768%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (11 samples, 0.30%)</title><rect x="97.6067%" y="309" width="0.2992%" height="15" fill="rgb(206,209,35)" fg:x="3589" fg:w="11"/><text x="97.8567%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Neg&gt;::neg (3 samples, 0.08%)</title><rect x="97.9059%" y="309" width="0.0816%" height="15" fill="rgb(245,195,53)" fg:x="3600" fg:w="3"/><text x="98.1559%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (11 samples, 0.30%)</title><rect x="97.9875%" y="309" width="0.2992%" height="15" fill="rgb(240,92,26)" fg:x="3603" fg:w="11"/><text x="98.2375%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (3 samples, 0.08%)</title><rect x="98.2866%" y="309" width="0.0816%" height="15" fill="rgb(207,40,23)" fg:x="3614" fg:w="3"/><text x="98.5366%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (3 samples, 0.08%)</title><rect x="98.2866%" y="293" width="0.0816%" height="15" fill="rgb(223,111,35)" fg:x="3614" fg:w="3"/><text x="98.5366%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (8 samples, 0.22%)</title><rect x="98.3682%" y="309" width="0.2176%" height="15" fill="rgb(229,147,28)" fg:x="3617" fg:w="8"/><text x="98.6182%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (451 samples, 12.27%)</title><rect x="86.6195%" y="389" width="12.2654%" height="15" fill="rgb(211,29,28)" fg:x="3185" fg:w="451"/><text x="86.8695%" y="399.50">core::iter::traits..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (451 samples, 12.27%)</title><rect x="86.6195%" y="373" width="12.2654%" height="15" fill="rgb(228,72,33)" fg:x="3185" fg:w="451"/><text x="86.8695%" y="383.50">core::iter::traits..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (439 samples, 11.94%)</title><rect x="86.9459%" y="357" width="11.9391%" height="15" fill="rgb(205,214,31)" fg:x="3197" fg:w="439"/><text x="87.1959%" y="367.50">core::iter::traits..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg::{{closure}} (439 samples, 11.94%)</title><rect x="86.9459%" y="341" width="11.9391%" height="15" fill="rgb(224,111,15)" fg:x="3197" fg:w="439"/><text x="87.1959%" y="351.50">fastiron::simulati..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg_dist_to_segment (172 samples, 4.68%)</title><rect x="94.2072%" y="325" width="4.6777%" height="15" fill="rgb(253,21,26)" fg:x="3464" fg:w="172"/><text x="94.4572%" y="335.50">fasti..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::lt (11 samples, 0.30%)</title><rect x="98.5858%" y="309" width="0.2992%" height="15" fill="rgb(245,139,43)" fg:x="3625" fg:w="11"/><text x="98.8358%" y="319.50"></text></g><g><title>&lt;fastiron::geometry::mc_nearest_facet::MCNearestFacet&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="98.9394%" y="357" width="0.0272%" height="15" fill="rgb(252,170,7)" fg:x="3638" fg:w="1"/><text x="99.1894%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.11%)</title><rect x="98.9665%" y="325" width="0.1088%" height="15" fill="rgb(231,118,14)" fg:x="3639" fg:w="4"/><text x="99.2165%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="98.9665%" y="309" width="0.1088%" height="15" fill="rgb(238,83,0)" fg:x="3639" fg:w="4"/><text x="99.2165%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.08%)</title><rect x="98.9937%" y="293" width="0.0816%" height="15" fill="rgb(221,39,39)" fg:x="3640" fg:w="3"/><text x="99.2437%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (5 samples, 0.14%)</title><rect x="99.5921%" y="293" width="0.1360%" height="15" fill="rgb(222,119,46)" fg:x="3662" fg:w="5"/><text x="99.8421%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.92%)</title><rect x="98.9665%" y="341" width="0.9247%" height="15" fill="rgb(222,165,49)" fg:x="3639" fg:w="34"/><text x="99.2165%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 0.82%)</title><rect x="99.0753%" y="325" width="0.8159%" height="15" fill="rgb(219,113,52)" fg:x="3643" fg:w="30"/><text x="99.3253%" y="335.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest::{{closure}} (30 samples, 0.82%)</title><rect x="99.0753%" y="309" width="0.8159%" height="15" fill="rgb(214,7,15)" fg:x="3643" fg:w="30"/><text x="99.3253%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (6 samples, 0.16%)</title><rect x="99.7280%" y="293" width="0.1632%" height="15" fill="rgb(235,32,4)" fg:x="3667" fg:w="6"/><text x="99.9780%" y="303.50"></text></g><g><title>fastiron::cycle_tracking (3,540 samples, 96.27%)</title><rect x="3.6443%" y="485" width="96.2741%" height="15" fill="rgb(238,90,54)" fg:x="134" fg:w="3540"/><text x="3.8943%" y="495.50">fastiron::cycle_tracking</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_guts (1,383 samples, 37.61%)</title><rect x="62.3062%" y="469" width="37.6122%" height="15" fill="rgb(213,208,19)" fg:x="2291" fg:w="1383"/><text x="62.5562%" y="479.50">fastiron::simulation::cycle_tracking::cycle_tracking_guts</text></g><g><title>fastiron::simulation::cycle_tracking::cycle_tracking_function (1,332 samples, 36.23%)</title><rect x="63.6932%" y="453" width="36.2252%" height="15" fill="rgb(233,156,4)" fg:x="2342" fg:w="1332"/><text x="63.9432%" y="463.50">fastiron::simulation::cycle_tracking::cycle_tracking_functi..</text></g><g><title>fastiron::simulation::mc_segment_outcome::outcome (716 samples, 19.47%)</title><rect x="80.4460%" y="437" width="19.4724%" height="15" fill="rgb(207,194,5)" fg:x="2958" fg:w="716"/><text x="80.6960%" y="447.50">fastiron::simulation::mc_segmen..</text></g><g><title>fastiron::simulation::mct::nearest_facet (489 samples, 13.30%)</title><rect x="86.6195%" y="421" width="13.2989%" height="15" fill="rgb(206,111,30)" fg:x="3185" fg:w="489"/><text x="86.8695%" y="431.50">fastiron::simulation..</text></g><g><title>fastiron::simulation::mct::mct_nf_3dg (489 samples, 13.30%)</title><rect x="86.6195%" y="405" width="13.2989%" height="15" fill="rgb(243,70,54)" fg:x="3185" fg:w="489"/><text x="86.8695%" y="415.50">fastiron::simulation..</text></g><g><title>fastiron::simulation::mct::mct_nf_find_nearest (38 samples, 1.03%)</title><rect x="98.8850%" y="389" width="1.0335%" height="15" fill="rgb(242,28,8)" fg:x="3636" fg:w="38"/><text x="99.1350%" y="399.50"></text></g><g><title>fastiron::simulation::mct::mct_nf_compute_nearest (37 samples, 1.01%)</title><rect x="98.9122%" y="373" width="1.0063%" height="15" fill="rgb(219,106,18)" fg:x="3637" fg:w="37"/><text x="99.1622%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 0.95%)</title><rect x="98.9665%" y="357" width="0.9519%" height="15" fill="rgb(244,222,10)" fg:x="3639" fg:w="35"/><text x="99.2165%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (1 samples, 0.03%)</title><rect x="99.8912%" y="341" width="0.0272%" height="15" fill="rgb(236,179,52)" fg:x="3673" fg:w="1"/><text x="100.1412%" y="351.50"></text></g><g><title>__libc_start_main_impl (3,667 samples, 99.73%)</title><rect x="0.2176%" y="581" width="99.7280%" height="15" fill="rgb(213,23,39)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="591.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,667 samples, 99.73%)</title><rect x="0.2176%" y="565" width="99.7280%" height="15" fill="rgb(238,48,10)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="575.50">__libc_start_call_main</text></g><g><title>main (3,667 samples, 99.73%)</title><rect x="0.2176%" y="549" width="99.7280%" height="15" fill="rgb(251,196,23)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="559.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,667 samples, 99.73%)</title><rect x="0.2176%" y="533" width="99.7280%" height="15" fill="rgb(250,152,24)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,667 samples, 99.73%)</title><rect x="0.2176%" y="517" width="99.7280%" height="15" fill="rgb(209,150,17)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>fastiron::main (3,667 samples, 99.73%)</title><rect x="0.2176%" y="501" width="99.7280%" height="15" fill="rgb(234,202,34)" fg:x="8" fg:w="3667"/><text x="0.4676%" y="511.50">fastiron::main</text></g><g><title>fastiron::init_mc::init_mc (1 samples, 0.03%)</title><rect x="99.9184%" y="485" width="0.0272%" height="15" fill="rgb(253,148,53)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="495.50"></text></g><g><title>fastiron::init_mc::init_mesh (1 samples, 0.03%)</title><rect x="99.9184%" y="469" width="0.0272%" height="15" fill="rgb(218,129,16)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.9184%" y="453" width="0.0272%" height="15" fill="rgb(216,85,19)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.9184%" y="437" width="0.0272%" height="15" fill="rgb(235,228,7)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="421" width="0.0272%" height="15" fill="rgb(245,175,0)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="431.50"></text></g><g><title>fastiron::init_mc::init_mesh::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="405" width="0.0272%" height="15" fill="rgb(208,168,36)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="415.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::build_mesh_partition (1 samples, 0.03%)</title><rect x="99.9184%" y="389" width="0.0272%" height="15" fill="rgb(246,171,24)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="399.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::assign_cells_to_domain (1 samples, 0.03%)</title><rect x="99.9184%" y="373" width="0.0272%" height="15" fill="rgb(215,142,24)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="383.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood (1 samples, 0.03%)</title><rect x="99.9184%" y="357" width="0.0272%" height="15" fill="rgb(250,187,7)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.9184%" y="341" width="0.0272%" height="15" fill="rgb(228,66,33)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.9184%" y="325" width="0.0272%" height="15" fill="rgb(234,215,21)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="309" width="0.0272%" height="15" fill="rgb(222,191,20)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="319.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="293" width="0.0272%" height="15" fill="rgb(245,79,54)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.9184%" y="277" width="0.0272%" height="15" fill="rgb(240,10,37)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.9184%" y="261" width="0.0272%" height="15" fill="rgb(214,192,32)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="245" width="0.0272%" height="15" fill="rgb(209,36,54)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="255.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="229" width="0.0272%" height="15" fill="rgb(220,10,11)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.9184%" y="213" width="0.0272%" height="15" fill="rgb(221,106,17)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.9184%" y="197" width="0.0272%" height="15" fill="rgb(251,142,44)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="181" width="0.0272%" height="15" fill="rgb(238,13,15)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="191.50"></text></g><g><title>fastiron::geometry::mesh_partition::MeshPartition::add_nbrs_to_flood::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="165" width="0.0272%" height="15" fill="rgb(208,107,27)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.03%)</title><rect x="99.9184%" y="149" width="0.0272%" height="15" fill="rgb(205,136,37)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="159.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.03%)</title><rect x="99.9184%" y="133" width="0.0272%" height="15" fill="rgb(250,205,27)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.03%)</title><rect x="99.9184%" y="117" width="0.0272%" height="15" fill="rgb(210,80,43)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="127.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (1 samples, 0.03%)</title><rect x="99.9184%" y="101" width="0.0272%" height="15" fill="rgb(247,160,36)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.03%)</title><rect x="99.9184%" y="85" width="0.0272%" height="15" fill="rgb(234,13,49)" fg:x="3674" fg:w="1"/><text x="100.1684%" y="95.50"></text></g><g><title>_start (3,672 samples, 99.86%)</title><rect x="0.1088%" y="597" width="99.8640%" height="15" fill="rgb(234,122,0)" fg:x="4" fg:w="3672"/><text x="0.3588%" y="607.50">_start</text></g><g><title>_dl_start (1 samples, 0.03%)</title><rect x="99.9456%" y="581" width="0.0272%" height="15" fill="rgb(207,146,38)" fg:x="3675" fg:w="1"/><text x="100.1956%" y="591.50"></text></g><g><title>_dl_start_final (1 samples, 0.03%)</title><rect x="99.9456%" y="565" width="0.0272%" height="15" fill="rgb(207,177,25)" fg:x="3675" fg:w="1"/><text x="100.1956%" y="575.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="99.9456%" y="549" width="0.0272%" height="15" fill="rgb(211,178,42)" fg:x="3675" fg:w="1"/><text x="100.1956%" y="559.50"></text></g><g><title>dl_main (1 samples, 0.03%)</title><rect x="99.9456%" y="533" width="0.0272%" height="15" fill="rgb(230,69,54)" fg:x="3675" fg:w="1"/><text x="100.1956%" y="543.50"></text></g><g><title>setup_vdso (1 samples, 0.03%)</title><rect x="99.9456%" y="517" width="0.0272%" height="15" fill="rgb(214,135,41)" fg:x="3675" fg:w="1"/><text x="100.1956%" y="527.50"></text></g><g><title>all (3,677 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(237,67,25)" fg:x="0" fg:w="3677"/><text x="0.2500%" y="639.50"></text></g><g><title>fastiron (3,677 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(222,189,50)" fg:x="0" fg:w="3677"/><text x="0.2500%" y="623.50">fastiron</text></g><g><title>fastiron::particles::particle_vault_container::ParticleVaultContainer&lt;T&gt;::add_extra_particle (1 samples, 0.03%)</title><rect x="99.9728%" y="597" width="0.0272%" height="15" fill="rgb(245,148,34)" fg:x="3676" fg:w="1"/><text x="100.2228%" y="607.50"></text></g></svg></svg>